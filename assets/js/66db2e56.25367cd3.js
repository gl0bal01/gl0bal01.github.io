"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[5907],{14072:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cheatsheets/exegol-practical-guide","title":"Comprehensive Exegol Practical Guide: Command Reference for Cybersecurity Professionals","description":"Complete practical reference commands for Exegol cybersecurity environment - from installation to advanced penetration testing workflows","source":"@site/docs/cheatsheets/exegol.md","sourceDirName":"cheatsheets","slug":"/cheatsheets/exegol-practical-guide","permalink":"/cheatsheets/exegol-practical-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/gl0bal01.github.io/tree/main/docs/cheatsheets/exegol.md","tags":[{"inline":true,"label":"Tool","permalink":"/tags/tool"},{"inline":true,"label":"Cyber","permalink":"/tags/cyber"}],"version":"current","lastUpdatedAt":1750348488000,"sidebarPosition":2,"frontMatter":{"id":"exegol-practical-guide","title":"Comprehensive Exegol Practical Guide: Command Reference for Cybersecurity Professionals","sidebar_label":"Exegol Practical","sidebar_position":2,"description":"Complete practical reference commands for Exegol cybersecurity environment - from installation to advanced penetration testing workflows","keywords":["exegol","cybersecurity","penetration testing","docker containers","security tools","red team","blue team","ethical hacking","kali linux","vpn","networking","automation"],"authors":["gl0bal01"],"tags":["Tool","Cyber"]},"sidebar":"tutorialSidebar","previous":{"title":"Docker Practical","permalink":"/cheatsheets/docker-practical-examples"},"next":{"title":"Mise Practical","permalink":"/cheatsheets/mise-practical-guide"}}');var s=r(74848),i=r(28453);const o={id:"exegol-practical-guide",title:"Comprehensive Exegol Practical Guide: Command Reference for Cybersecurity Professionals",sidebar_label:"Exegol Practical",sidebar_position:2,description:"Complete practical reference commands for Exegol cybersecurity environment - from installation to advanced penetration testing workflows",keywords:["exegol","cybersecurity","penetration testing","docker containers","security tools","red team","blue team","ethical hacking","kali linux","vpn","networking","automation"],authors:["gl0bal01"],tags:["Tool","Cyber"]},l="Exegol Practical Guide",a={},c=[{value:"Installation &amp; Setup",id:"installation--setup",level:2},{value:"First Time Usage",id:"first-time-usage",level:2},{value:"Container Management",id:"container-management",level:2},{value:"Image Management",id:"image-management",level:2},{value:"Networking &amp; VPN",id:"networking--vpn",level:2},{value:"Workspace &amp; File Sharing",id:"workspace--file-sharing",level:2},{value:"Environment &amp; Shell Configuration",id:"environment--shell-configuration",level:2},{value:"Hardware &amp; Device Access",id:"hardware--device-access",level:2},{value:"Desktop &amp; GUI Applications",id:"desktop--gui-applications",level:2},{value:"Command Execution",id:"command-execution",level:2},{value:"VPN Configuration Examples",id:"vpn-configuration-examples",level:2},{value:"Troubleshooting &amp; Debugging",id:"troubleshooting--debugging",level:2},{value:"Customization &amp; Resources",id:"customization--resources",level:2},{value:"Advanced Operations",id:"advanced-operations",level:2},{value:"Pro/Enterprise Features",id:"proenterprise-features",level:2},{value:"Quick Service Commands",id:"quick-service-commands",level:2},{value:"WSL2 Optimization (Windows)",id:"wsl2-optimization-windows",level:2},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Advanced Tips",id:"advanced-tips",level:2},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components},{Details:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"exegol-practical-guide",children:"Exegol Practical Guide"})}),"\n",(0,s.jsx)(n.p,{children:"Exegol is a powerful containerized cybersecurity testing environment that provides a comprehensive suite of penetration testing tools in a portable, reproducible format. This guide serves as a quick reference for both beginners and experienced security professionals who need to quickly set up, configure, and use Exegol containers for various cybersecurity tasks."}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"When to use this guide"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Setting up Exegol for the first time"}),"\n",(0,s.jsx)(n.li,{children:"Configuring containers for specific penetration testing scenarios"}),"\n",(0,s.jsx)(n.li,{children:"Troubleshooting common issues"}),"\n",(0,s.jsx)(n.li,{children:"Optimizing Exegol for different use cases"}),"\n"]})]}),"\n",(0,s.jsxs)(r,{children:[(0,s.jsx)("summary",{children:"Who this guide is for"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Penetration testers and ethical hackers"}),"\n",(0,s.jsx)(n.li,{children:"Cybersecurity professionals"}),"\n",(0,s.jsx)(n.li,{children:"Students learning cybersecurity"}),"\n",(0,s.jsx)(n.li,{children:"Bug bounty hunters"}),"\n",(0,s.jsx)(n.li,{children:"Red team operators"}),"\n",(0,s.jsx)(n.li,{children:"Osint investigators"}),"\n",(0,s.jsx)(n.li,{children:"Anyone needing a consistent, portable testing environment"}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"installation--setup",children:"Installation & Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Install prerequisites (Linux)\r\nsudo apt update && sudo apt install -y git python3 pipx\r\n\r\n# Install Docker (quick method)\r\ncurl -fsSL "https://get.docker.com/" | sh\r\n\r\n# Install Exegol with pipx (recommended)\r\npipx install exegol\r\n\r\n# Ensure pipx is in PATH\r\npipx ensurepath && exec $SHELL\r\n\r\n# Set up auto-completion\r\npipx install argcomplete\r\necho "eval \\"$(register-python-argcomplete --no-defaults exegol)\\"" >> ~/.bashrc\r\n\r\n# Create sudo alias (Linux only)\r\necho "alias exegol=\'sudo -E $(echo ~/.local/bin/exegol)\'" >> ~/.bash_aliases && source ~/.bash_aliases\r\n\r\n# Verify installation\r\nexegol version\n'})}),"\n",(0,s.jsx)(n.h2,{id:"first-time-usage",children:"First Time Usage"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install your first image (interactive)\r\nexegol install\r\n\r\n# Install specific image directly\r\nexegol install full\r\n\r\n# Start your first container\r\nexegol start\r\n\r\n# Start container with specific image\r\nexegol start mycontainer full\r\n\r\n# Check info\r\nexegol info\n"})}),"\n",(0,s.jsx)(n.h2,{id:"container-management",children:"Container Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# List all containers and images\r\nexegol info\r\n\r\n# Start existing container\r\nexegol start mycontainer\r\n\r\n# Start with current directory as workspace\r\nexegol start test full -cwd\r\n\r\n# Start with custom workspace\r\nexegol start test full -w "./project/pentest/"\r\n\r\n# Stop container\r\nexegol stop mycontainer\r\n\r\n# Restart container\r\nexegol restart mycontainer\r\n\r\n# Remove container\r\nexegol remove mycontainer\r\n\r\n# Remove multiple containers (forced)\r\nexegol remove -F container1 container2 container3\n'})}),"\n",(0,s.jsx)(n.h2,{id:"image-management",children:"Image Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Update image\r\nexegol update full\r\n\r\n# Update interactively\r\nexegol update\r\n\r\n# Uninstall image\r\nexegol uninstall full\r\n\r\n# Build custom image\r\nexegol build myimage full\r\n\r\n# Build with log\r\nexegol build myimage full --build-log /tmp/build.log\n"})}),"\n",(0,s.jsx)(n.h2,{id:"networking--vpn",children:"Networking & VPN"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Start with VPN configuration\r\nexegol start htb full --vpn "~/vpn/lab.ovpn"\r\n\r\n# Start with VPN auth file\r\nexegol start htb full --vpn "~/vpn/config.ovpn" --vpn-auth "~/vpn/auth.txt"\r\n\r\n# Start for manual VPN (with capabilities)\r\nexegol start vpntest full -d /dev/net/tun --cap NET_ADMIN\r\n\r\n# Network modes\r\nexegol start test full --network host      # Share host network (default)\r\nexegol start test full --network docker    # Docker bridge network\r\nexegol start test full --network nat       # Isolated network (Pro/Enterprise)\r\nexegol start test full --network disable   # No network\r\n\r\n# Port forwarding\r\nexegol start web full -p 8080:80 -p 4443:443\r\n\r\n# Custom hostname\r\nexegol start target full --hostname victim-pc\n'})}),"\n",(0,s.jsx)(n.h2,{id:"workspace--file-sharing",children:"Workspace & File Sharing"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Custom volumes\r\nexegol start app full -V "/var/app/:/app/" -V "/tmp/shared:/shared:ro"\r\n\r\n# Update filesystem permissions\r\nexegol start test full -w "./project/" -fs\r\n\r\n# Multiple workspace setups\r\nexegol start web full -w "./web-project/"\r\nexegol start ad full -w "./ad-project/"\r\nexegol start mobile full -w "./mobile-project/"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"environment--shell-configuration",children:"Environment & Shell Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Set environment variables\r\nexegol start test full -e TARGET=192.168.1.100 -e DOMAIN=example.com\r\n\r\n# Choose shell\r\nexegol start test full --shell tmux\r\nexegol start test full --shell bash\r\n\r\n# Enable shell logging\r\nexegol start test full -l\r\nexegol start test full -l --log-method script\r\n\r\n# Disable features\r\nexegol start test full --disable-X11 --disable-my-resources\n"})}),"\n",(0,s.jsx)(n.h2,{id:"hardware--device-access",children:"Hardware & Device Access"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Share USB devices\r\nexegol start hardware full -d "/dev/bus/usb/"\r\n\r\n# Share specific device (e.g., Proxmark)\r\nexegol start proxmark full -d "/dev/ttyACM0"\r\n\r\n# Multiple devices\r\nexegol start multi full -d "/dev/ttyACM0" -d "/dev/ttyUSB0"\r\n\r\n# Privileged mode (dangerous)\r\nexegol start privileged full --privileged\r\n\r\n# Specific capabilities\r\nexegol start network full --cap NET_ADMIN --cap SYS_PTRACE\n'})}),"\n",(0,s.jsx)(n.h2,{id:"desktop--gui-applications",children:"Desktop & GUI Applications"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Enable desktop (web-based)\r\nexegol start gui full --desktop\r\n\r\n# Desktop with custom config\r\nexegol start gui full --desktop-config "http:0.0.0.0:5900"\r\n\r\n# VNC desktop\r\nexegol start gui full --desktop-config "vnc:127.0.0.1:5901"\r\n\r\n# Get desktop credentials\r\nexegol info gui\r\n\r\n# Disable X11 (no GUI apps)\r\nexegol start nogui full --disable-X11\n'})}),"\n",(0,s.jsx)(n.h2,{id:"command-execution",children:"Command Execution"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Execute single command\r\nexegol exec mycontainer nmap -sV 192.168.1.1\r\n\r\n# Execute with output\r\nexegol exec -v mycontainer 'nmap -h'\r\n\r\n# Background execution\r\nexegol exec -b mycontainer bloodhound\r\n\r\n# Temporary container for command\r\nexegol exec --tmp full nmap 192.168.1.1\r\n\r\n# Privileged temporary execution\r\nexegol exec --tmp --privileged full wireshark\n"})}),"\n",(0,s.jsx)(n.h2,{id:"vpn-configuration-examples",children:"VPN Configuration Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Single file VPN\r\nexegol start htb full --vpn "./htb.ovpn"\r\n\r\n# Multi-file VPN directory structure\r\nmkdir my_vpn\r\n# Place: configuration.ovpn, root_ca.pem, user.crt, user.key\r\nexegol start vpn full --vpn "./my_vpn"\r\n\r\n# VPN with authentication\r\necho -e "username\\npassword" > auth.txt\r\nexegol start vpn full --vpn "./config.ovpn" --vpn-auth "./auth.txt"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting--debugging",children:"Troubleshooting & Debugging"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Verbose information\r\nexegol info -v\r\nexegol info -vv\r\nexegol info -vvv\r\n\r\n# Check specific container\r\nexegol info mycontainer\r\n\r\n# Update wrapper\r\nexegol update\r\n\r\n# Fix Docker rate limiting\r\ndocker login\r\n\r\n# Enable TIOCSTI (for arsenal tool)\r\nsudo sysctl -w dev.tty.legacy_tiocsti=1\r\n\r\n# Time synchronization for Kerberos\r\nfaketime "$(date +\'%Y-%m-%d %H:%M:%S\')" zsh\r\n\r\n# Advanced time sync with domain controller\r\nfaketime "$(rdate -n $DC_IP -p | awk \'{print $2, $3, $4}\' | date -f - \\"+%Y-%m-%d %H:%M:%S\\")" zsh\r\n\r\n# Time sync using net time\r\nfaketime "$(date +\'%Y-%m-%d\') $(net time -S $DC_IP | awk \'{print $4}\')" zsh\r\n\r\n# View compressed logs\r\nzcat /var/log/exegol/load_setups.log.gz\r\nzgrep "error" /var/log/exegol/load_setups.log.gz\n'})}),"\n",(0,s.jsx)(n.h2,{id:"customization--resources",children:"Customization & Resources"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# View available aliases\r\nalias\r\n\r\n# Inspect specific alias\r\nalias nmap\r\n\r\n# Add custom tools to PATH\r\ncp /path/to/tool ~/.exegol/my-resources/bin/\r\n\r\n# Custom environment variables in profile\r\necho 'export DOMAIN=\"example.com\"' >> /opt/tools/Exegol-history/profile.sh\r\nexec zsh\r\n\r\n# Share files during engagement\r\nupdog          # HTTP server\r\ngoshs          # Go HTTP server\r\nsmbserver.py   # SMB server\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-operations",children:"Advanced Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Multiple containers for different tasks\r\nexegol start web full -w "./web/" --hostname web-server\r\nexegol start ad full -w "./ad/" --hostname dc-01\r\nexegol start mobile full -w "./mobile/" --hostname mobile-test\r\n\r\n# Container with comment\r\nexegol start client1 full --comment "Client pentest - Company XYZ"\r\n\r\n# Complex multi-feature setup\r\nexegol start complex full \\\r\n  -w "./pentest/" \\\r\n  --vpn "./client.ovpn" \\\r\n  -e TARGET=192.168.1.0/24 \\\r\n  -e DOMAIN=company.local \\\r\n  -p 8080:80 \\\r\n  -d "/dev/bus/usb/" \\\r\n  --hostname client-pc \\\r\n  --desktop \\\r\n  -l\r\n\r\n# Test custom image build\r\nexegol install "testimage" "full" --build-log "/tmp/testimage.log"\r\nexegol start "testcontainer" "testimage"\r\n\r\n# Run build pipeline tests\r\ncat /.exegol/build_pipeline_tests/all_commands.txt | grep -vE "^\\s*$" | sort -u > /.exegol/build_pipeline_tests/all_commands.sorted.txt\r\npython3 /.exegol/build_pipeline_tests/run_tests.py\r\ncat /.exegol/build_pipeline_tests/failed_commands.log\r\n\r\n# Log analysis\r\ngunzip -c session_shell.asciinema.gz | asciinema play -\r\nasciinema cat session_shell.asciinema\r\n\r\n# Offline mode (no internet requests)\r\nexegol start mycontainer --offline\r\n\r\n# Architecture override\r\nexegol start mycontainer full --arch arm64\r\nexegol start mycontainer full --arch amd64\r\n\r\n# Disable resource mounts\r\nexegol start minimal full --disable-exegol-resources --disable-my-resources\r\n\r\n# Custom shell configurations\r\necho "alias ll=\'ls -la\'" >> /opt/my-resources/setup/zsh/aliases\r\necho "export CUSTOM_VAR=value" >> /opt/my-resources/setup/zsh/zshrc\r\necho "nmap -sV \\$TARGET" >> /opt/my-resources/setup/zsh/history\n'})}),"\n",(0,s.jsx)(n.h2,{id:"proenterprise-features",children:"Pro/Enterprise Features"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Activate license\r\nexegol activate\r\n\r\n# NAT network mode (isolated)\r\nexegol start isolated full --network nat\r\n\r\n# Revoke license\r\nexegol activate --revoke\n"})}),"\n",(0,s.jsx)(n.h2,{id:"quick-service-commands",children:"Quick Service Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Start services\r\nneo4j start                    # For BloodHound\r\nbloodhound-ce                  # BloodHound Community Edition\r\ntrilium-start                  # Note-taking\r\nburpsuite                      # HTTP proxy\r\nps-empire server               # Empire C2 framework\r\nhavoc server                   # Havoc C2 framework\r\n\r\n# Desktop services\r\ndesktop-start                  # Start desktop\r\ndesktop-stop                   # Stop desktop\r\ndesktop-restart                # Restart desktop\r\n\r\n# Database services\r\nservice postgresql start       # PostgreSQL for BloodHound CE\r\nservice postgresql stop\r\nservice postgresql restart\n"})}),"\n",(0,s.jsx)(n.h2,{id:"wsl2-optimization-windows",children:"WSL2 Optimization (Windows)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmd",children:'REM Limit WSL2 resources\r\necho [wsl2] > %UserProfile%\\.wslconfig\r\necho memory=8GB >> %UserProfile%\\.wslconfig\r\necho processors=2 >> %UserProfile%\\.wslconfig\r\n\r\nREM Shrink WSL2 disk\r\nwsl --shutdown\r\ndiskpart\r\nselect vdisk file="C:\\Users\\<USER>\\AppData\\Local\\Docker\\wsl\\data\\ext4.vhdx"\r\ncompact vdisk\n'})}),"\n",(0,s.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Web Application Testing\r\nexegol start webapp full -w "./webapp-test/" -p 8080:8080 --desktop\r\n\r\n# Active Directory Assessment\r\nexegol start ad full -w "./ad-assessment/" -e DOMAIN=company.local -e DC=192.168.1.10\r\n\r\n# WiFi/Hardware Hacking\r\nexegol start wifi full -d "/dev/bus/usb/" --privileged -w "./wifi-audit/"\r\n\r\n# CTF/HackTheBox\r\nexegol start htb full --vpn "./htb.ovpn" -w "./htb-machines/" -l\r\n\r\n# Client Engagement with Full Setup\r\nexegol start client full \\\r\n  -w "./client-pentest/" \\\r\n  --vpn "./client-vpn.ovpn" \\\r\n  -e CLIENT="Company XYZ" \\\r\n  -e TARGET="192.168.1.0/24" \\\r\n  -e DOMAIN="company.local" \\\r\n  --comment "External pentest Q1 2024" \\\r\n  --desktop \\\r\n  --hostname "pentest-01" \\\r\n  -l \\\r\n  -p 8080:8080\n'})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-tips",children:"Advanced Tips"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Advanced time synchronization examples\r\n# Print time in UTC for comparison\r\ndate --utc\r\n\r\n# Sync with Kerberos target to fix KRB_AP_ERR_SKEW\r\nfaketime 'YYYY-MM-DD hh:mm:ss' zsh\r\n\r\n# Firefox customization examples\r\n# Add custom bookmarks, extensions, and policies via:\r\n# /opt/my-resources/setup/firefox/policies.json\r\n\r\n# BloodHound customization\r\n# Custom queries: /opt/my-resources/setup/bloodhound/customqueries_merge/\r\n# Configuration: /opt/my-resources/setup/bloodhound/config.json\r\n\r\n# Vim/Neovim customization\r\n# Custom vimrc: /opt/my-resources/setup/vim/vimrc\r\n# Neovim config: /opt/my-resources/setup/nvim/\r\n\r\n# Shell history optimization\r\n# The shell history system uses environment variables like:\r\n# $DOMAIN, $USER, $PASSWORD, $TARGET for dynamic commands\n"})}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.exegol.com/",children:"Official Exegol Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/ThePorgs/Exegol",children:"Exegol GitHub Repository"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>l});var t=r(96540);const s={},i=t.createContext(s);function o(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);