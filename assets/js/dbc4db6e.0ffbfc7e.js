"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[949],{28453:(e,n,a)=>{a.d(n,{R:()=>l,x:()=>i});var r=a(96540);const s={},t=r.createContext(s);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),r.createElement(t.Provider,{value:n},e.children)}},76530:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>o,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"cheatsheets/tailscale-practical-guide","title":"Comprehensive Tailscale Practical Guide: Command Reference for Secure Networking","description":"Complete practical reference commands for Tailscale mesh VPN - from installation to advanced networking workflows including Synology NAS access","source":"@site/docs/cheatsheets/tailscale.md","sourceDirName":"cheatsheets","slug":"/cheatsheets/tailscale-practical-guide","permalink":"/cheatsheets/tailscale-practical-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/gl0bal01.github.io/tree/main/docs/cheatsheets/tailscale.md","tags":[{"inline":true,"label":"Tool","permalink":"/tags/tool"},{"inline":true,"label":"Network","permalink":"/tags/network"}],"version":"current","lastUpdatedAt":1750348488000,"sidebarPosition":4,"frontMatter":{"id":"tailscale-practical-guide","title":"Comprehensive Tailscale Practical Guide: Command Reference for Secure Networking","sidebar_label":"Tailscale Practical","sidebar_position":4,"description":"Complete practical reference commands for Tailscale mesh VPN - from installation to advanced networking workflows including Synology NAS access","keywords":["tailscale","wireguard","vpn","mesh networking","zero trust","remote access","subnet router","exit node","synology nas","secure networking","devops","cloud networking","site-to-site","mobile access"],"authors":["gl0bal01"],"tags":["Tool","Network"]},"sidebar":"tutorialSidebar","previous":{"title":"Mise Practical","permalink":"/cheatsheets/mise-practical-guide"},"next":{"title":"Git","permalink":"/cheatsheets/git"}}');var s=a(74848),t=a(28453);const l={id:"tailscale-practical-guide",title:"Comprehensive Tailscale Practical Guide: Command Reference for Secure Networking",sidebar_label:"Tailscale Practical",sidebar_position:4,description:"Complete practical reference commands for Tailscale mesh VPN - from installation to advanced networking workflows including Synology NAS access",keywords:["tailscale","wireguard","vpn","mesh networking","zero trust","remote access","subnet router","exit node","synology nas","secure networking","devops","cloud networking","site-to-site","mobile access"],authors:["gl0bal01"],tags:["Tool","Network"]},i="Tailscale Practical Guide",o={},c=[{value:"Installation &amp; Setup",id:"installation--setup",level:2},{value:"Quick Installation Commands",id:"quick-installation-commands",level:3},{value:"Platform-Specific Installation",id:"platform-specific-installation",level:3},{value:"First Time Setup",id:"first-time-setup",level:2},{value:"Basic Connection",id:"basic-connection",level:3},{value:"Authentication &amp; Auth Keys",id:"authentication--auth-keys",level:3},{value:"Basic Operations",id:"basic-operations",level:2},{value:"Connection Management",id:"connection-management",level:3},{value:"Network Information",id:"network-information",level:3},{value:"Advanced Configuration",id:"advanced-configuration",level:2},{value:"Exit Nodes",id:"exit-nodes",level:3},{value:"Subnet Routers",id:"subnet-routers",level:3},{value:"SSH Configuration",id:"ssh-configuration",level:3},{value:"Service Sharing",id:"service-sharing",level:2},{value:"Tailscale Serve (Internal Sharing)",id:"tailscale-serve-internal-sharing",level:3},{value:"Tailscale Funnel (Public Sharing)",id:"tailscale-funnel-public-sharing",level:3},{value:"Device Management",id:"device-management",level:2},{value:"Device Information",id:"device-information",level:3},{value:"Authentication &amp; Logout",id:"authentication--logout",level:3},{value:"Security &amp; Access Control",id:"security--access-control",level:2},{value:"Device Security",id:"device-security",level:3},{value:"Key Management",id:"key-management",level:3},{value:"DNS Configuration",id:"dns-configuration",level:2},{value:"MagicDNS",id:"magicdns",level:3},{value:"Monitoring &amp; Debugging",id:"monitoring--debugging",level:2},{value:"Network Diagnostics",id:"network-diagnostics",level:3},{value:"Performance Monitoring",id:"performance-monitoring",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"Advanced Features",id:"advanced-features",level:2},{value:"File Sharing (Taildrop)",id:"file-sharing-taildrop",level:3},{value:"Kubernetes Integration",id:"kubernetes-integration",level:3},{value:"Docker Integration",id:"docker-integration",level:3},{value:"Environment Variables",id:"environment-variables",level:2},{value:"Common Environment Variables",id:"common-environment-variables",level:3},{value:"System Integration",id:"system-integration",level:2},{value:"Systemd Configuration",id:"systemd-configuration",level:3},{value:"Firewall Configuration",id:"firewall-configuration",level:3},{value:"Cloud Platform Integration",id:"cloud-platform-integration",level:2},{value:"AWS Integration",id:"aws-integration",level:3},{value:"Google Cloud Platform",id:"google-cloud-platform",level:3},{value:"Azure Integration",id:"azure-integration",level:3},{value:"Common Use Cases",id:"common-use-cases",level:2},{value:"Remote Development",id:"remote-development",level:3},{value:"Home Lab Access",id:"home-lab-access",level:3},{value:"Synology NAS Remote Access",id:"synology-nas-remote-access",level:3},{value:"Synology Advanced Configuration",id:"synology-advanced-configuration",level:3},{value:"Synology Security &amp; Access Control",id:"synology-security--access-control",level:3},{value:"Synology Mobile Apps Configuration",id:"synology-mobile-apps-configuration",level:3},{value:"Foreign Country Specific Setup",id:"foreign-country-specific-setup",level:3},{value:"Site-to-Site Connectivity",id:"site-to-site-connectivity",level:3},{value:"Container Orchestration",id:"container-orchestration",level:3},{value:"Configuration Management",id:"configuration-management",level:2},{value:"Infrastructure as Code",id:"infrastructure-as-code",level:3},{value:"GitOps ACL Management",id:"gitops-acl-management",level:3},{value:"Security Best Practices",id:"security-best-practices",level:2},{value:"Access Control Policies",id:"access-control-policies",level:3},{value:"Key Rotation",id:"key-rotation",level:3},{value:"Troubleshooting Common Issues",id:"troubleshooting-common-issues",level:2},{value:"Connectivity Problems",id:"connectivity-problems",level:3},{value:"Performance Issues",id:"performance-issues",level:3},{value:"DNS Resolution Issues",id:"dns-resolution-issues",level:3},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components},{Details:a}=n;return a||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"tailscale-practical-guide",children:"Tailscale Practical Guide"})}),"\n",(0,s.jsx)(n.p,{children:"Tailscale is a modern VPN solution built on WireGuard that creates secure, encrypted mesh networks with zero configuration. It simplifies networking by treating the entire internet as hostile and creating a private overlay network that's easy to manage and scale. This guide serves as a comprehensive quick reference for administrators, developers, and users who need to quickly deploy, configure, and troubleshoot Tailscale networks."}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"When to use this guide"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Setting up Tailscale for the first time across multiple devices"}),"\n",(0,s.jsx)(n.li,{children:"Configuring advanced networking features like subnet routers and exit nodes"}),"\n",(0,s.jsx)(n.li,{children:"Implementing secure remote access for teams and infrastructure"}),"\n",(0,s.jsx)(n.li,{children:"Troubleshooting connectivity and performance issues"}),"\n",(0,s.jsx)(n.li,{children:"Integrating Tailscale with existing infrastructure and workflows"}),"\n"]})]}),"\n",(0,s.jsxs)(a,{children:[(0,s.jsx)("summary",{children:"Who this guide is for"}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Network administrators and IT professionals"}),"\n",(0,s.jsx)(n.li,{children:"DevOps engineers and system administrators"}),"\n",(0,s.jsx)(n.li,{children:"Security professionals implementing zero-trust networks"}),"\n",(0,s.jsx)(n.li,{children:"Remote teams needing secure connectivity"}),"\n",(0,s.jsx)(n.li,{children:"Developers working with distributed systems"}),"\n",(0,s.jsx)(n.li,{children:"Anyone seeking to replace traditional VPNs with modern mesh networking"}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"installation--setup",children:"Installation & Setup"}),"\n",(0,s.jsx)(n.h3,{id:"quick-installation-commands",children:"Quick Installation Commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Ubuntu/Debian\r\ncurl -fsSL https://tailscale.com/install.sh | sh\r\n\r\n# CentOS/RHEL/Fedora\r\ncurl -fsSL https://tailscale.com/install.sh | sh\r\n\r\n# Arch Linux\r\nsudo pacman -S tailscale\r\n\r\n# macOS (Homebrew)\r\nbrew install tailscale\r\n\r\n# Windows (Chocolatey)\r\nchoco install tailscale\r\n\r\n# Direct Go installation (any platform)\r\ngo install tailscale.com/cmd/tailscale{,d}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"platform-specific-installation",children:"Platform-Specific Installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Ubuntu/Debian with APT\r\ncurl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.noarmor.gpg | sudo tee /usr/share/keyrings/tailscale-archive-keyring.gpg >/dev/null\r\ncurl -fsSL https://pkgs.tailscale.com/stable/ubuntu/jammy.tailscale-keyring.list | sudo tee /etc/apt/sources.list.d/tailscale.list\r\nsudo apt update && sudo apt install tailscale\r\n\r\n# CentOS/RHEL with YUM\r\nsudo yum install yum-utils\r\nsudo yum-config-manager --add-repo https://pkgs.tailscale.com/stable/centos/8/tailscale.repo\r\nsudo yum install tailscale\r\n\r\n# Enable and start daemon\r\nsudo systemctl enable --now tailscaled\n"})}),"\n",(0,s.jsx)(n.h2,{id:"first-time-setup",children:"First Time Setup"}),"\n",(0,s.jsx)(n.h3,{id:"basic-connection",children:"Basic Connection"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Connect to Tailscale (opens browser for authentication)\r\nsudo tailscale up\r\n\r\n# Connect with specific options\r\nsudo tailscale up --accept-routes --accept-dns\r\n\r\n# Connect with hostname\r\nsudo tailscale up --hostname=my-server\r\n\r\n# Connect without browser (get URL for manual auth)\r\nsudo tailscale up --qr\n"})}),"\n",(0,s.jsx)(n.h3,{id:"authentication--auth-keys",children:"Authentication & Auth Keys"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Create auth key (from admin console)\r\n# Use pre-auth key for unattended setup\r\nsudo tailscale up --authkey=tskey-auth-xxxxxx\r\n\r\n# One-time auth key for ephemeral nodes\r\nsudo tailscale up --authkey=tskey-auth-xxxxxx --ephemeral\r\n\r\n# Tagged node authentication\r\nsudo tailscale up --authkey=tskey-auth-xxxxxx --advertise-tags=tag:server\n"})}),"\n",(0,s.jsx)(n.h2,{id:"basic-operations",children:"Basic Operations"}),"\n",(0,s.jsx)(n.h3,{id:"connection-management",children:"Connection Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Connect to Tailscale\r\nsudo tailscale up\r\n\r\n# Disconnect (but keep daemon running)\r\nsudo tailscale down\r\n\r\n# Check connection status\r\ntailscale status\r\n\r\n# Detailed status with IPs and last seen\r\ntailscale status --peers\r\n\r\n# JSON output for scripting\r\ntailscale status --json\r\n\r\n# Show current device IP\r\ntailscale ip\r\n\r\n# Show specific IP version\r\ntailscale ip -4  # IPv4 only\r\ntailscale ip -6  # IPv6 only\n"})}),"\n",(0,s.jsx)(n.h3,{id:"network-information",children:"Network Information"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check network connectivity\r\ntailscale netcheck\r\n\r\n# Ping another device\r\ntailscale ping hostname-or-ip\r\n\r\n# Test SSH connectivity\r\ntailscale nc hostname 22\r\n\r\n# DNS query through Tailscale\r\ntailscale dns status\r\ntailscale dns query hostname.example.com\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-configuration",children:"Advanced Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"exit-nodes",children:"Exit Nodes"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Enable as exit node (route all internet traffic)\r\nsudo tailscale up --advertise-exit-node\r\n\r\n# Enable IP forwarding for exit node (Linux)\r\necho 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf\r\necho 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.d/99-tailscale.conf\r\nsudo sysctl -p /etc/sysctl.d/99-tailscale.conf\r\n\r\n# Use another device as exit node\r\nsudo tailscale up --exit-node=exit-server\r\nsudo tailscale up --exit-node=100.64.0.1\r\n\r\n# Allow local network access while using exit node\r\nsudo tailscale up --exit-node=exit-server --exit-node-allow-lan-access\r\n\r\n# Disable exit node\r\nsudo tailscale up --exit-node=\r\n\r\n# List available exit nodes\r\ntailscale exit-node list\n"})}),"\n",(0,s.jsx)(n.h3,{id:"subnet-routers",children:"Subnet Routers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Advertise subnet routes\r\nsudo tailscale up --advertise-routes=10.0.0.0/24,192.168.1.0/24\r\n\r\n# Single subnet\r\nsudo tailscale up --advertise-routes=192.168.1.0/24\r\n\r\n# Multiple subnets\r\nsudo tailscale up --advertise-routes=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16\r\n\r\n# Accept routes from other subnet routers\r\nsudo tailscale up --accept-routes\r\n\r\n# Enable IP forwarding for subnet router (Linux)\r\necho 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf\r\necho 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.conf\r\nsudo sysctl -p\r\n\r\n# Check if routes are approved (admin console required)\r\ntailscale status | grep \"offers\"\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ssh-configuration",children:"SSH Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Enable Tailscale SSH server\r\nsudo tailscale up --ssh\r\n\r\n# Connect via Tailscale SSH\r\ntailscale ssh user@hostname\r\n\r\n# SSH with port forwarding\r\ntailscale ssh -L 8080:localhost:80 user@hostname\r\n\r\n# Check SSH host keys\r\ntailscale ssh --check-host-keys user@hostname\r\n\r\n# Use traditional SSH through Tailscale (userspace networking)\r\nssh -o ProxyCommand='tailscale nc %h %p' user@hostname.tailnet.ts.net\n"})}),"\n",(0,s.jsx)(n.h2,{id:"service-sharing",children:"Service Sharing"}),"\n",(0,s.jsx)(n.h3,{id:"tailscale-serve-internal-sharing",children:"Tailscale Serve (Internal Sharing)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Share a local web server within tailnet\r\ntailscale serve 3000\r\n\r\n# Share with custom path\r\ntailscale serve --https=443 --set-path=/app localhost:3000\r\n\r\n# Share static files\r\ntailscale serve --https=443 /home/user/public_html\r\n\r\n# Share text content\r\ntailscale serve --https=443 text:"Hello from Tailscale"\r\n\r\n# TCP forwarding\r\ntailscale serve --tcp=2222 localhost:22\r\n\r\n# TLS-terminated TCP\r\ntailscale serve --tls-terminated-tcp=443 localhost:8080\r\n\r\n# View serve status\r\ntailscale serve status\r\n\r\n# Turn off specific serve\r\ntailscale serve --https=443 --set-path=/app off\n'})}),"\n",(0,s.jsx)(n.h3,{id:"tailscale-funnel-public-sharing",children:"Tailscale Funnel (Public Sharing)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Share publicly on the internet\r\ntailscale funnel 3000\r\n\r\n# Share with specific port\r\ntailscale funnel --https=443 localhost:3000\r\n\r\n# Share files publicly\r\ntailscale funnel --https=443 /home/user/website\r\n\r\n# TCP funnel (limited ports: 443, 8443, 10000)\r\ntailscale funnel --tcp=443 localhost:8080\r\n\r\n# View funnel status\r\ntailscale funnel status\r\n\r\n# Turn off funnel\r\ntailscale funnel --https=443 off\n"})}),"\n",(0,s.jsx)(n.h2,{id:"device-management",children:"Device Management"}),"\n",(0,s.jsx)(n.h3,{id:"device-information",children:"Device Information"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Show device information\r\ntailscale whois 100.64.0.1\r\ntailscale whois hostname.tailnet.ts.net\r\n\r\n# Show current device details\r\ntailscale status --self\r\n\r\n# Update Tailscale client\r\nsudo tailscale update\r\n\r\n# Check for updates\r\ntailscale update --check\r\n\r\n# View version information\r\ntailscale version\n"})}),"\n",(0,s.jsx)(n.h3,{id:"authentication--logout",children:"Authentication & Logout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Manual login (if needed)\r\ntailscale login\r\n\r\n# Login with specific login server\r\ntailscale login --login-server=https://headscale.example.com\r\n\r\n# Switch between tailnets\r\ntailscale switch\r\n\r\n# Logout from current tailnet\r\ntailscale logout\r\n\r\n# Force re-authentication\r\ntailscale logout && tailscale up\n"})}),"\n",(0,s.jsx)(n.h2,{id:"security--access-control",children:"Security & Access Control"}),"\n",(0,s.jsx)(n.h3,{id:"device-security",children:"Device Security"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Enable shields up (block incoming connections)\r\nsudo tailscale up --shields-up\r\n\r\n# Reset to default settings\r\nsudo tailscale up --reset\r\n\r\n# Disable specific features\r\nsudo tailscale up --disable-magic-dns\r\n\r\n# Run with minimal privileges\r\nsudo tailscale up --operator=tailscale\n"})}),"\n",(0,s.jsx)(n.h3,{id:"key-management",children:"Key Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Show node key\r\ntailscale debug daemon-logs\r\n\r\n# Generate new machine key (requires re-auth)\r\ntailscale logout && tailscale up\r\n\r\n# Lock tailnet (requires admin)\r\ntailscale lock init\r\n\r\n# Sign node key\r\ntailscale lock sign\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dns-configuration",children:"DNS Configuration"}),"\n",(0,s.jsx)(n.h3,{id:"magicdns",children:"MagicDNS"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check DNS status\r\ntailscale dns status\r\n\r\n# Query through Tailscale DNS\r\ntailscale dns query hostname.tailnet.ts.net\r\n\r\n# Enable/disable DNS\r\nsudo tailscale up --accept-dns=true\r\nsudo tailscale up --accept-dns=false\r\n\r\n# Custom DNS servers\r\nsudo tailscale up --accept-dns=false\n"})}),"\n",(0,s.jsx)(n.h2,{id:"monitoring--debugging",children:"Monitoring & Debugging"}),"\n",(0,s.jsx)(n.h3,{id:"network-diagnostics",children:"Network Diagnostics"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Network connectivity check\r\ntailscale netcheck\r\n\r\n# Detailed network report\r\ntailscale netcheck --verbose\r\n\r\n# Monitor real-time logs\r\ntailscale debug daemon-logs\r\n\r\n# Connection ping with details\r\ntailscale ping --verbose hostname\r\n\r\n# Port connectivity test\r\ntailscale nc hostname 22\r\ntailscale nc hostname 80\n"})}),"\n",(0,s.jsx)(n.h3,{id:"performance-monitoring",children:"Performance Monitoring"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Show metrics\r\ntailscale debug metrics\r\n\r\n# Connection info\r\ntailscale debug connectivity\r\n\r\n# Peer connection details\r\ntailscale status --peers --verbose\r\n\r\n# Check for direct connections\r\ntailscale status | grep "direct"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Generate bug report\r\ntailscale bugreport\r\n\r\n# Reset networking state\r\nsudo tailscale down && sudo tailscale up\r\n\r\n# Force DERP relay usage (troubleshooting)\r\nsudo tailscale up --advertise-tags=tag:derp-only\r\n\r\n# Check firewall rules (Linux)\r\nsudo iptables -L -n | grep tailscale\r\nsudo ufw status\r\n\r\n# Verify daemon status\r\nsudo systemctl status tailscaled\r\nsudo journalctl -u tailscaled -f\n"})}),"\n",(0,s.jsx)(n.h2,{id:"advanced-features",children:"Advanced Features"}),"\n",(0,s.jsx)(n.h3,{id:"file-sharing-taildrop",children:"File Sharing (Taildrop)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Send file to another device\r\ntailscale file cp myfile.txt hostname:\r\n\r\n# Send to specific user\r\ntailscale file cp document.pdf username@hostname:\r\n\r\n# Receive files (check inbox)\r\ntailscale file get\r\n\r\n# List pending files\r\ntailscale file list\n"})}),"\n",(0,s.jsx)(n.h3,{id:"kubernetes-integration",children:"Kubernetes Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Deploy Tailscale operator\r\nkubectl apply -f https://github.com/tailscale/tailscale/raw/main/cmd/k8s-operator/deploy/manifests/operator.yaml\r\n\r\n# Create auth secret\r\nkubectl create secret generic tailscale-auth --from-literal=TS_AUTHKEY=tskey-auth-xxxxxx\r\n\r\n# Configure RBAC\r\nexport SA_NAME=tailscale\r\nexport TS_KUBE_SECRET=tailscale-auth\r\nmake rbac | kubectl apply -f-\r\n\r\n# Deploy subnet router\r\nmake subnet-router | kubectl apply -f-\r\n\r\n# Deploy proxy\r\nexport TS_DEST_IP=\"$(kubectl get svc nginx -o=jsonpath='{.spec.clusterIP}')\"\r\nmake proxy | kubectl apply -f-\n"})}),"\n",(0,s.jsx)(n.h3,{id:"docker-integration",children:"Docker Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Run Tailscale in Docker\r\ndocker run -d \\\r\n  --name=tailscale \\\r\n  --cap-add=NET_ADMIN \\\r\n  --cap-add=SYS_MODULE \\\r\n  -v /dev/net/tun:/dev/net/tun \\\r\n  -v tailscale-data:/var/lib/tailscale \\\r\n  -e TS_AUTHKEY=tskey-auth-xxxxxx \\\r\n  tailscale/tailscale\r\n\r\n# Use as sidecar\r\ndocker run -d \\\r\n  --name=app-with-tailscale \\\r\n  --network=container:tailscale \\\r\n  my-app:latest\n"})}),"\n",(0,s.jsx)(n.h2,{id:"environment-variables",children:"Environment Variables"}),"\n",(0,s.jsx)(n.h3,{id:"common-environment-variables",children:"Common Environment Variables"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Authentication\r\nexport TS_AUTHKEY=tskey-auth-xxxxxx\r\n\r\n# State directory\r\nexport TS_STATE_DIR=/var/lib/tailscale\r\n\r\n# Socket path\r\nexport TS_SOCKET=/var/run/tailscale/tailscaled.sock\r\n\r\n# Hostname override\r\nexport TS_HOSTNAME=my-custom-name\r\n\r\n# Routes for subnet router\r\nexport TS_ROUTES=10.0.0.0/8,172.16.0.0/12\r\n\r\n# Kubernetes-specific\r\nexport TS_KUBE_SECRET=tailscale-auth\r\nexport TS_DEST_IP=10.0.0.1\r\n\r\n# Userspace mode\r\nexport TS_USERSPACE=true\r\n\r\n# Debug logging\r\nexport TS_DEBUG=true\n"})}),"\n",(0,s.jsx)(n.h2,{id:"system-integration",children:"System Integration"}),"\n",(0,s.jsx)(n.h3,{id:"systemd-configuration",children:"Systemd Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Enable automatic start\r\nsudo systemctl enable tailscaled\r\n\r\n# Start service\r\nsudo systemctl start tailscaled\r\n\r\n# Check service status\r\nsudo systemctl status tailscaled\r\n\r\n# View logs\r\nsudo journalctl -u tailscaled -f\r\n\r\n# Restart service\r\nsudo systemctl restart tailscaled\r\n\r\n# Custom service flags (edit /etc/default/tailscaled)\r\nsudo echo 'FLAGS=\"--port=41641\"' >> /etc/default/tailscaled\n"})}),"\n",(0,s.jsx)(n.h3,{id:"firewall-configuration",children:"Firewall Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# UFW (Ubuntu)\r\nsudo ufw allow in on tailscale0\r\nsudo ufw allow out on tailscale0\r\n\r\n# Firewalld (CentOS/RHEL)\r\nsudo firewall-cmd --permanent --add-interface=tailscale0 --zone=trusted\r\nsudo firewall-cmd --reload\r\n\r\n# iptables (manual)\r\nsudo iptables -A INPUT -i tailscale0 -j ACCEPT\r\nsudo iptables -A OUTPUT -o tailscale0 -j ACCEPT\n"})}),"\n",(0,s.jsx)(n.h2,{id:"cloud-platform-integration",children:"Cloud Platform Integration"}),"\n",(0,s.jsx)(n.h3,{id:"aws-integration",children:"AWS Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install on EC2 instance\r\ncurl -fsSL https://tailscale.com/install.sh | sh\r\nsudo tailscale up --authkey=tskey-auth-xxxxxx\r\n\r\n# Subnet router for VPC\r\nsudo tailscale up --advertise-routes=10.0.0.0/16 --authkey=tskey-auth-xxxxxx\r\n\r\n# Security group rules\r\n# Allow UDP 41641 for Tailscale traffic\r\n# Allow TCP 22 for SSH (optional)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"google-cloud-platform",children:"Google Cloud Platform"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install on GCE instance\r\ncurl -fsSL https://tailscale.com/install.sh | sh\r\nsudo tailscale up --authkey=tskey-auth-xxxxxx\r\n\r\n# Advertise GCP subnet\r\nsudo tailscale up --advertise-routes=10.128.0.0/20\r\n\r\n# Firewall rule for Tailscale\r\ngcloud compute firewall-rules create allow-tailscale \\\r\n  --allow udp:41641 \\\r\n  --source-ranges 0.0.0.0/0 \\\r\n  --target-tags tailscale\n"})}),"\n",(0,s.jsx)(n.h3,{id:"azure-integration",children:"Azure Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install on Azure VM\r\ncurl -fsSL https://tailscale.com/install.sh | sh\r\nsudo tailscale up --authkey=tskey-auth-xxxxxx\r\n\r\n# Network Security Group rule\r\n# Allow UDP 41641 inbound from Internet\r\n# Priority: 1000, Action: Allow\n"})}),"\n",(0,s.jsx)(n.h2,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,s.jsx)(n.h3,{id:"remote-development",children:"Remote Development"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Developer machine setup\r\nsudo tailscale up --hostname=dev-laptop --ssh\r\n\r\n# Access development server\r\ntailscale ssh dev-server\r\n\r\n# Port forwarding for web apps\r\ntailscale serve --https=443 localhost:3000\r\n\r\n# Share development environment\r\ntailscale funnel --https=8443 localhost:3000\n"})}),"\n",(0,s.jsx)(n.h3,{id:"home-lab-access",children:"Home Lab Access"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Home router/gateway setup\r\nsudo tailscale up --advertise-routes=192.168.1.0/24 --advertise-exit-node\r\n\r\n# Access home services\r\nsudo tailscale up --accept-routes --exit-node=home-gateway\r\n\r\n# Secure NAS access\r\ntailscale ssh nas.local\r\ntailscale serve --https=443 localhost:5000  # Synology DSM\n"})}),"\n",(0,s.jsx)(n.h3,{id:"synology-nas-remote-access",children:"Synology NAS Remote Access"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install Tailscale on Synology NAS\r\n# Download package from Tailscale website for your Synology model\r\n# Upload via Package Center > Manual Install\r\n\r\n# Initial setup via SSH to Synology\r\nssh admin@synology-ip\r\nsudo tailscale up --hostname=synology-nas\r\n\r\n# Enable subnet router for local network access\r\nsudo tailscale up --advertise-routes=192.168.1.0/24 --hostname=synology-nas\r\n\r\n# For foreign country access - set up as exit node\r\nsudo tailscale up --advertise-exit-node --advertise-routes=192.168.1.0/24\r\n\r\n# Access DSM from anywhere\r\n# https://synology-nas.tailnet-name.ts.net:5001\r\n\r\n# Secure file sharing without opening ports\r\ntailscale serve --https=443 localhost:5000  # DSM\r\ntailscale serve --https=8443 localhost:5001 # DSM HTTPS\r\n\r\n# Share specific services\r\ntailscale serve --tcp=22 localhost:22       # SSH\r\ntailscale serve --tcp=21 localhost:21       # FTP (if enabled)\r\ntailscale serve --https=9443 localhost:9000 # Portainer (if installed)\r\n\r\n# Mobile access from foreign countries\r\n# 1. Install Tailscale mobile app\r\n# 2. Connect to tailnet\r\n# 3. Use exit node for local IP access\r\n# 4. Access: http://192.168.1.100:5000 (local IP through exit node)\r\n\r\n# Alternative: Direct access via Tailscale IP\r\n# Access: https://100.x.x.x:5001 (Tailscale IP)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"synology-advanced-configuration",children:"Synology Advanced Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Enable IP forwarding on Synology (for subnet router)\r\n# Via Control Panel > Terminal & SNMP > Enable SSH\r\n# Then SSH in and run:\r\necho 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf\r\nsudo sysctl -p\r\n\r\n# Or via DSM Task Scheduler (Control Panel > Task Scheduler)\r\n# Create triggered task -> Boot-up -> User: root\r\n# Command: echo 'net.ipv4.ip_forward = 1' >> /etc/sysctl.conf && sysctl -p\r\n\r\n# Automatic startup script (Control Panel > Task Scheduler)\r\n# Create triggered task -> Boot-up -> User: root\r\n# Command: /usr/local/bin/tailscale up --authkey=tskey-auth-xxxxx --advertise-exit-node\r\n\r\n# QuickConnect alternative via Tailscale\r\n# Disable QuickConnect in DSM\r\n# Use Tailscale hostname instead: synology-nas.tailnet.ts.net\r\n\r\n# VPN Server replacement\r\n# Disable Synology VPN Server\r\n# Use Tailscale exit node functionality instead\n"})}),"\n",(0,s.jsx)(n.h3,{id:"synology-security--access-control",children:"Synology Security & Access Control"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Secure access from foreign countries\r\n# 1. Disable all port forwarding on router\r\n# 2. Disable QuickConnect\r\n# 3. Use Tailscale ACLs for access control\r\n\r\n# Example ACL for Synology access\r\n{\r\n  "acls": [\r\n    {\r\n      "action": "accept",\r\n      "src": ["tag:mobile", "tag:laptop"],\r\n      "dst": ["tag:synology:5000", "tag:synology:5001", "tag:synology:22"]\r\n    },\r\n    {\r\n      "action": "accept",\r\n      "src": ["tag:admin"],\r\n      "dst": ["tag:synology:*"]\r\n    }\r\n  ],\r\n  "hosts": {\r\n    "synology-dsm": "100.x.x.x"\r\n  }\r\n}\r\n\r\n# Two-factor authentication\r\n# Enable 2FA in Synology DSM (Control Panel > User & Group > Advanced)\r\n# Tailscale provides additional security layer\r\n\r\n# Restrict SSH access\r\n# Control Panel > Terminal & SNMP > Advanced Settings\r\n# Enable "Enable SSH service" only when needed\r\n# Use Tailscale SSH instead: tailscale ssh admin@synology-nas\n'})}),"\n",(0,s.jsx)(n.h3,{id:"synology-mobile-apps-configuration",children:"Synology Mobile Apps Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# DS file app access from abroad\r\n# 1. Install Tailscale on mobile device\r\n# 2. Connect to tailnet and enable exit node\r\n# 3. In DS file app settings:\r\n#    - Server: 192.168.1.100 (local IP via exit node)\r\n#    - Port: 5000 (HTTP) or 5001 (HTTPS)\r\n#    - Account: your DSM username/password\r\n\r\n# Alternative: Use Tailscale IP directly\r\n# Server: 100.x.x.x (Tailscale IP of Synology)\r\n# Port: 5000 or 5001\r\n\r\n# DS photo, DS video, DS audio apps\r\n# Same configuration as DS file\r\n# Use local IP via exit node or direct Tailscale IP\r\n\r\n# Synology Drive client\r\n# Configure sync client with:\r\n# Server: synology-nas.tailnet-name.ts.net\r\n# Or: 100.x.x.x:5001\r\n\r\n# Photo backup from abroad\r\n# Enable Tailscale on mobile\r\n# Configure DS photo with Synology Tailscale IP\r\n# Photos upload securely without exposing NAS to internet\n"})}),"\n",(0,s.jsx)(n.h3,{id:"foreign-country-specific-setup",children:"Foreign Country Specific Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Laptop/mobile setup while traveling\r\n# Connect to local WiFi abroad\r\ntailscale up --accept-routes --exit-node=synology-nas\r\n\r\n# Access home network as if you're local\r\n# All traffic routes through home connection\r\nping 192.168.1.1  # Home router accessible\r\ncurl http://192.168.1.100:5000  # DSM accessible\r\n\r\n# Selective routing (more efficient)\r\ntailscale up --accept-routes  # Accept only subnet routes, not exit node\r\n# Then access via Tailscale IPs: 100.x.x.x:5000\r\n\r\n# Split tunneling approach\r\n# Use exit node only for home network access\r\ntailscale up --exit-node=synology-nas --exit-node-allow-lan-access\r\n# Local internet traffic stays local for better performance\r\n\r\n# Troubleshooting abroad\r\n# Check Tailscale connectivity\r\ntailscale ping synology-nas\r\ntailscale netcheck\r\n\r\n# If connection issues in restrictive countries\r\n# Try different DERP servers\r\ntailscale netcheck --verbose\r\n\r\n# Alternative: Use Tailscale Funnel for external access\r\n# On Synology (for emergency access):\r\ntailscale funnel --https=8443 localhost:5001\r\n# Access via: https://synology-nas.tailnet-name.ts.net:8443\n"})}),"\n",(0,s.jsx)(n.h3,{id:"site-to-site-connectivity",children:"Site-to-Site Connectivity"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Office A subnet router\r\nsudo tailscale up --advertise-routes=10.1.0.0/24 --hostname=office-a-router\r\n\r\n# Office B subnet router  \r\nsudo tailscale up --advertise-routes=10.2.0.0/24 --hostname=office-b-router\r\n\r\n# Client machines\r\nsudo tailscale up --accept-routes\n"})}),"\n",(0,s.jsx)(n.h3,{id:"container-orchestration",children:"Container Orchestration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Kubernetes cluster access\r\nsudo tailscale up --advertise-routes=10.244.0.0/16,10.96.0.0/12\r\n\r\n# Docker Swarm integration\r\ndocker service create \\\r\n  --name tailscale-gateway \\\r\n  --cap-add NET_ADMIN \\\r\n  --mount type=bind,src=/dev/net/tun,dst=/dev/net/tun \\\r\n  -e TS_AUTHKEY=tskey-auth-xxxxxx \\\r\n  tailscale/tailscale\r\n\r\n# Nomad job integration\r\njob "tailscale" {\r\n  datacenters = ["dc1"]\r\n  type = "system"\r\n  \r\n  task "tailscale" {\r\n    driver = "docker"\r\n    config {\r\n      image = "tailscale/tailscale:latest"\r\n      cap_add = ["NET_ADMIN"]\r\n      devices = [{ host_path = "/dev/net/tun" }]\r\n    }\r\n    env {\r\n      TS_AUTHKEY = "tskey-auth-xxxxxx"\r\n    }\r\n  }\r\n}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"configuration-management",children:"Configuration Management"}),"\n",(0,s.jsx)(n.h3,{id:"infrastructure-as-code",children:"Infrastructure as Code"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# Terraform example\r\nresource "tailscale_tailnet_key" "example_key" {\r\n  reusable      = false\r\n  ephemeral     = true\r\n  preauthorized = true\r\n  expiry        = 3600\r\n  description   = "Example key for servers"\r\n  tags          = ["tag:server"]\r\n}\r\n\r\n# Ansible playbook\r\n- name: Install Tailscale\r\n  shell: curl -fsSL https://tailscale.com/install.sh | sh\r\n  \r\n- name: Connect to Tailscale\r\n  shell: tailscale up --authkey={{ tailscale_auth_key }}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"gitops-acl-management",children:"GitOps ACL Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'# GitHub Actions for ACL sync\r\nname: Tailscale ACL syncing\r\non:\r\n  push:\r\n    branches: [ "main" ]\r\n  pull_request:\r\n    branches: [ "main" ]\r\n\r\njobs:\r\n  acls:\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v4\r\n      - name: Setup Go environment\r\n        uses: actions/setup-go@v3.2.0\r\n      - name: Install gitops-pusher\r\n        run: go install tailscale.com/cmd/gitops-pusher@latest\r\n      - name: Deploy ACL\r\n        if: github.event_name == \'push\'\r\n        env:\r\n          TS_API_KEY: ${{ secrets.TS_API_KEY }}\r\n          TS_TAILNET: ${{ secrets.TS_TAILNET }}\r\n        run: |\r\n          ~/go/bin/gitops-pusher --policy-file ./policy.hujson apply\n'})}),"\n",(0,s.jsx)(n.h2,{id:"security-best-practices",children:"Security Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"access-control-policies",children:"Access Control Policies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "acls": [\r\n    {\r\n      "action": "accept",\r\n      "src": ["tag:admin"],\r\n      "dst": ["*:*"]\r\n    },\r\n    {\r\n      "action": "accept", \r\n      "src": ["tag:developer"],\r\n      "dst": ["tag:development:*"]\r\n    }\r\n  ],\r\n  "ssh": [\r\n    {\r\n      "action": "accept",\r\n      "src": ["tag:admin"],\r\n      "dst": ["tag:server"],\r\n      "users": ["root", "admin"]\r\n    }\r\n  ]\r\n}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"key-rotation",children:"Key Rotation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Rotate machine key\r\ntailscale logout\r\ntailscale up --authkey=tskey-auth-new-xxxxxx\r\n\r\n# Rotate auth keys regularly\r\n# Generate new keys in admin console\r\n# Update automation scripts\r\n\r\n# Enable key expiry\r\n# Set appropriate expiry times in admin console\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting-common-issues",children:"Troubleshooting Common Issues"}),"\n",(0,s.jsx)(n.h3,{id:"connectivity-problems",children:"Connectivity Problems"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Basic connectivity test\r\ntailscale ping 8.8.8.8\r\n\r\n# Check if using DERP relay\r\ntailscale status | grep relay\r\n\r\n# Force direct connection\r\ntailscale debug set-derp-map null\r\n\r\n# Reset connection state\r\nsudo tailscale down && sudo tailscale up --reset\n"})}),"\n",(0,s.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Check for direct connections\r\ntailscale status | grep direct\r\n\r\n# Network performance test\r\ntailscale netcheck --verbose\r\n\r\n# Enable verbose logging\r\nsudo tailscaled --verbose=1\r\n\r\n# Check CPU/memory usage\r\ntop -p $(pgrep tailscaled)\n"})}),"\n",(0,s.jsx)(n.h3,{id:"dns-resolution-issues",children:"DNS Resolution Issues"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Test MagicDNS\r\nnslookup hostname.tailnet.ts.net\r\n\r\n# Check DNS configuration\r\ntailscale dns status\r\n\r\n# Bypass MagicDNS temporarily\r\nsudo tailscale up --accept-dns=false\r\n\r\n# Flush DNS cache\r\nsudo systemctl restart systemd-resolved  # Linux\r\nsudo dscacheutil -flushcache            # macOS\r\nipconfig /flushdns                       # Windows\n"})}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://tailscale.com/kb",children:"Official Tailscale Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/tailscale/tailscale",children:"Tailscale GitHub Repository"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://tailscale.com/kb/1080/cli",children:"Tailscale CLI Reference"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://tailscale.com/api",children:"Tailscale API Documentation"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.nist.gov/publications/zero-trust-architecture",children:"Zero Trust Architecture Guide"})}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);