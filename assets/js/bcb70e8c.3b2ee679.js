"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[7977],{17537:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>o,metadata:()=>r,toc:()=>h});const r=JSON.parse('{"id":"cheatsheets/git/github_tips","title":"20 Powerful Git Commands","description":"20 underused Git commands that will transform your development workflow. From debugging with bisect to managing large files with LFS, level up your version control game.","source":"@site/docs/cheatsheets/git/github_tips.md","sourceDirName":"cheatsheets/git","slug":"/cheatsheets/git/git-hidden-gems-commands","permalink":"/cheatsheets/git/git-hidden-gems-commands","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/gl0bal01.github.io/tree/main/docs/cheatsheets/git/github_tips.md","tags":[{"inline":true,"label":"Development","permalink":"/tags/development"},{"inline":true,"label":"Productivity","permalink":"/tags/productivity"}],"version":"current","lastUpdatedAt":1750314795000,"sidebarPosition":3,"frontMatter":{"title":"20 Powerful Git Commands","description":"20 underused Git commands that will transform your development workflow. From debugging with bisect to managing large files with LFS, level up your version control game.","slug":"git-hidden-gems-commands","sidebar_label":"Powerful Commands","sidebar_position":3,"authors":["gl0bal01"],"tags":["Development","Productivity"],"keywords":["git commands","git tips","version control","git bisect","git grep","git hooks","git workflow"],"date":"2024-06-18T00:00:00.000Z"},"sidebar":"tutorialSidebar","previous":{"title":"Practical Examples","permalink":"/cheatsheets/git/git-practical-examples"},"next":{"title":"ProjectDiscovery","permalink":"/cheatsheets/projectdiscovery"}}');var t=n(74848),s=n(28453),a=n(89226);const o={title:"20 Powerful Git Commands",description:"20 underused Git commands that will transform your development workflow. From debugging with bisect to managing large files with LFS, level up your version control game.",slug:"git-hidden-gems-commands",sidebar_label:"Powerful Commands",sidebar_position:3,authors:["gl0bal01"],tags:["Development","Productivity"],keywords:["git commands","git tips","version control","git bisect","git grep","git hooks","git workflow"],date:new Date("2024-06-18T00:00:00.000Z")},l="20 Powerful Git Commands",c={},h=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"<Highlight>Visualization &amp; Browsing</Highlight>",id:"visualization--browsing",level:3},{value:"<Highlight>Enhanced Functionality</Highlight>",id:"enhanced-functionality",level:3},{value:"<Highlight>Debugging &amp; Search</Highlight>",id:"debugging--search",level:3},{value:"<Highlight>Repository Management</Highlight>",id:"repository-management",level:3},{value:"<Highlight>Advanced Operations</Highlight>",id:"advanced-operations",level:3},{value:"<Highlight>Utilities</Highlight>",id:"utilities",level:3},{value:"<Highlight>Workflow Enhancement</Highlight>",id:"workflow-enhancement",level:3},{value:"Visualization &amp; Browsing",id:"visualization--browsing-1",level:2},{value:"1. Git Web - Instant Repository Browser",id:"1-git-web---instant-repository-browser",level:3},{value:"2. Git GUI - Visual Git Interface",id:"2-git-gui---visual-git-interface",level:3},{value:"Enhanced Functionality",id:"enhanced-functionality-1",level:2},{value:"3. Git Notes - Annotate Commits",id:"3-git-notes---annotate-commits",level:3},{value:"4. Git Blame - Track Code Authorship",id:"4-git-blame---track-code-authorship",level:3},{value:"5. Git Describe - Human-Readable Commit Names",id:"5-git-describe---human-readable-commit-names",level:3},{value:"Debugging &amp; Search",id:"debugging--search-1",level:2},{value:"6. Git Bisect - Binary Search for Bugs",id:"6-git-bisect---binary-search-for-bugs",level:3},{value:"7. Git Grep - Powerful Code Search",id:"7-git-grep---powerful-code-search",level:3},{value:"8. Git Fsck - Verify Repository Integrity",id:"8-git-fsck---verify-repository-integrity",level:3},{value:"Repository Management",id:"repository-management-1",level:2},{value:"9. Git Archive - Export Repository",id:"9-git-archive---export-repository",level:3},{value:"10. Git GC - Optimize Repository",id:"10-git-gc---optimize-repository",level:3},{value:"11. Git LFS - Handle Large Files",id:"11-git-lfs---handle-large-files",level:3},{value:"Advanced Operations",id:"advanced-operations-1",level:2},{value:"12. Git Cherry Pick - Selective Commit Import",id:"12-git-cherry-pick---selective-commit-import",level:3},{value:"13. Git Submodules - Nested Repositories",id:"13-git-submodules---nested-repositories",level:3},{value:"14. Git Reflog - Recovery Time Machine",id:"14-git-reflog---recovery-time-machine",level:3},{value:"Utilities",id:"utilities-1",level:2},{value:"15. Git Stripspace - Clean Whitespace",id:"15-git-stripspace---clean-whitespace",level:3},{value:"16. Git Show - Inspect Any Object",id:"16-git-show---inspect-any-object",level:3},{value:"17. Git Diff - Advanced Comparisons",id:"17-git-diff---advanced-comparisons",level:3},{value:"Workflow Enhancement",id:"workflow-enhancement-1",level:2},{value:"18. Git Hooks - Automate Workflows",id:"18-git-hooks---automate-workflows",level:3},{value:"19. Git Tag - Version Marking",id:"19-git-tag---version-marking",level:3},{value:"20. Git Log - Advanced History Viewing",id:"20-git-log---advanced-history-viewing",level:3},{value:"\ud83c\udf81 Bonus Tools",id:"-bonus-tools",level:2},{value:"Git Standup",id:"git-standup",level:3},{value:"Git Extras",id:"git-extras",level:3},{value:"GitHub CLI",id:"github-cli",level:3},{value:"\ud83d\udca1 Advanced Tips &amp; Tricks",id:"-advanced-tips--tricks",level:2},{value:"1. <strong>Power Aliases for Daily Workflow</strong>",id:"1-power-aliases-for-daily-workflow",level:3},{value:"2. <strong>Git Worktrees - Multiple Branches Simultaneously</strong>",id:"2-git-worktrees---multiple-branches-simultaneously",level:3},{value:"3. <strong>Advanced Stashing Techniques</strong>",id:"3-advanced-stashing-techniques",level:3},{value:"4. <strong>Performance Optimization</strong>",id:"4-performance-optimization",level:3},{value:"5. <strong>Security Best Practices</strong>",id:"5-security-best-practices",level:3},{value:"6. <strong>Git Maintenance Commands</strong>",id:"6-git-maintenance-commands",level:3},{value:"7. <strong>Debugging Like a Pro</strong>",id:"7-debugging-like-a-pro",level:3},{value:"8. <strong>Powerful Git Configurations</strong>",id:"8-powerful-git-configurations",level:3},{value:"Resources &amp; Attribution",id:"resources--attribution",level:2}];function d(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"20-powerful-git-commands",children:"20 Powerful Git Commands"})}),"\n",(0,t.jsxs)(i.p,{children:["Git is more than just ",(0,t.jsx)(i.code,{children:"add"}),", ",(0,t.jsx)(i.code,{children:"commit"}),", and ",(0,t.jsx)(i.code,{children:"push"}),". Hidden within its extensive manual are dozens of powerful commands that can transform your development workflow. Let's explore 20 underused Git features that will level up your version control game."]}),"\n",(0,t.jsx)(i.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,t.jsx)(i.h3,{id:"visualization--browsing",children:(0,t.jsx)(a.A,{children:"Visualization & Browsing"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#1-git-web---instant-repository-browser",children:"Git Web"})," - Browse your repo in a web GUI"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#2-git-gui---visual-git-interface",children:"Git GUI"})," - Native GUI application"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"enhanced-functionality",children:(0,t.jsx)(a.A,{children:"Enhanced Functionality"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#3-git-notes---annotate-commits",children:"Git Notes"})," - Add metadata to commits"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#4-git-blame---track-code-authorship",children:"Git Blame"})," - Find who wrote specific code"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#5-git-describe---human-readable-commit-names",children:"Git Describe"})," - Generate readable version strings"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"debugging--search",children:(0,t.jsx)(a.A,{children:"Debugging & Search"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#6-git-bisect---binary-search-for-bugs",children:"Git Bisect"})," - Find bug-introducing commits"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#7-git-grep---powerful-code-search",children:"Git Grep"})," - Search across your entire project"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#8-git-fsck---verify-repository-integrity",children:"Git Fsck"})," - Check and recover objects"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"repository-management",children:(0,t.jsx)(a.A,{children:"Repository Management"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#9-git-archive---export-repository",children:"Git Archive"})," - Create compressed backups"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#10-git-gc---optimize-repository",children:"Git GC"})," - Clean up and optimize"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#11-git-lfs---handle-large-files",children:"Git LFS"})," - Manage large files efficiently"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"advanced-operations",children:(0,t.jsx)(a.A,{children:"Advanced Operations"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#12-git-cherry-pick---selective-commit-import",children:"Git Cherry Pick"})," - Import specific commits"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#13-git-submodules---nested-repositories",children:"Git Submodules"})," - Include other repos"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#14-git-reflog---recovery-time-machine",children:"Git Reflog"})," - View all repository actions"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"utilities",children:(0,t.jsx)(a.A,{children:"Utilities"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#15-git-stripspace---clean-whitespace",children:"Git Stripspace"})," - Format whitespace"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#16-git-show---inspect-any-object",children:"Git Show"})," - Display git objects"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#17-git-diff---advanced-comparisons",children:"Git Diff"})," - Compare changes"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"workflow-enhancement",children:(0,t.jsx)(a.A,{children:"Workflow Enhancement"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#18-git-hooks---automate-workflows",children:"Git Hooks"})," - Trigger actions on events"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#19-git-tag---version-marking",children:"Git Tag"})," - Mark release points"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.a,{href:"#20-git-log---advanced-history-viewing",children:"Git Log"})," - Enhanced commit history"]}),"\n"]}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"visualization--browsing-1",children:"Visualization & Browsing"}),"\n",(0,t.jsx)(i.h3,{id:"1-git-web---instant-repository-browser",children:"1. Git Web - Instant Repository Browser"}),"\n",(0,t.jsx)(i.p,{children:"Transform your terminal into a full-featured repository browser with a single command:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"git instaweb\n"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"What it does:"})," Launches a local web server (default: ",(0,t.jsx)(i.a,{href:"http://localhost:1234",children:"http://localhost:1234"}),") with a visual interface for:"]}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Browsing commits, branches, and tags"}),"\n",(0,t.jsx)(i.li,{children:"Viewing diffs and file history"}),"\n",(0,t.jsx)(i.li,{children:"Generating RSS/Atom feeds"}),"\n",(0,t.jsx)(i.li,{children:"Searching through commits"}),"\n"]}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Pro tip:"})," Specify a different web server with ",(0,t.jsx)(i.code,{children:"-d"})," flag if Lighttpd isn't installed:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"git instaweb -d webrick -p 8080\n"})}),"\n",(0,t.jsx)(i.h3,{id:"2-git-gui---visual-git-interface",children:"2. Git GUI - Visual Git Interface"}),"\n",(0,t.jsx)(i.p,{children:"For those who prefer clicking over typing:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"git gui\n"})}),"\n",(0,t.jsx)(i.p,{children:"Opens a native GUI application for staging, committing, and basic Git operations."}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"enhanced-functionality-1",children:"Enhanced Functionality"}),"\n",(0,t.jsx)(i.h3,{id:"3-git-notes---annotate-commits",children:"3. Git Notes - Annotate Commits"}),"\n",(0,t.jsx)(i.p,{children:"Add extra information to commits without changing their SHA:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Add a note to the latest commit\r\ngit notes add -m "Reviewed by John, approved for production"\r\n\r\n# Add a note to a specific commit\r\ngit notes add -m "This fixes issue #123" abc1234\r\n\r\n# View notes\r\ngit log --show-notes\n'})}),"\n",(0,t.jsx)("u",{children:(0,t.jsx)(i.strong,{children:"Use cases:"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Code review comments"}),"\n",(0,t.jsx)(i.li,{children:"Deployment tracking"}),"\n",(0,t.jsx)(i.li,{children:"Additional context that wasn't in the original commit"}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"4-git-blame---track-code-authorship",children:"4. Git Blame - Track Code Authorship"}),"\n",(0,t.jsx)(i.p,{children:"Find out who wrote each line of code (and who to blame for that bug \ud83d\ude04):"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Blame specific lines\r\ngit blame -L 10,20 app.js\r\n\r\n# Blame with commit summary\r\ngit blame -L 10,+5 --show-email app.js\r\n\r\n# Ignore whitespace changes\r\ngit blame -w app.js\n"})}),"\n",(0,t.jsx)(i.h3,{id:"5-git-describe---human-readable-commit-names",children:"5. Git Describe - Human-Readable Commit Names"}),"\n",(0,t.jsx)(i.p,{children:"Generate version strings based on tags:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Get a version string for current commit\r\ngit describe\r\n# Output: v1.2.3-14-g2414721\r\n\r\n# Include all refs, not just tags\r\ngit describe --all\n"})}),"\n",(0,t.jsx)(i.p,{children:"Perfect for automated version numbering in CI/CD pipelines."}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"debugging--search-1",children:"Debugging & Search"}),"\n",(0,t.jsx)(i.h3,{id:"6-git-bisect---binary-search-for-bugs",children:"6. Git Bisect - Binary Search for Bugs"}),"\n",(0,t.jsx)(i.p,{children:"Find the exact commit that introduced a bug using binary search:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Start bisecting\r\ngit bisect start\r\n\r\n# Mark current commit as bad\r\ngit bisect bad\r\n\r\n# Mark a known good commit\r\ngit bisect good v1.0.0\r\n\r\n# Git will checkout commits for you to test\r\n# After testing each commit, mark it:\r\ngit bisect good  # or\r\ngit bisect bad\r\n\r\n# When done, Git shows the problematic commit\r\ngit bisect reset  # Return to original branch\n"})}),"\n",(0,t.jsxs)(i.p,{children:[(0,t.jsx)(i.strong,{children:"Pro tip:"})," Automate with a test script:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"git bisect run npm test\n"})}),"\n",(0,t.jsx)(i.h3,{id:"7-git-grep---powerful-code-search",children:"7. Git Grep - Powerful Code Search"}),"\n",(0,t.jsx)(i.p,{children:"Search through your code like a pro:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Basic search\r\ngit grep "TODO"\r\n\r\n# Search in specific file types\r\ngit grep "console.log" -- "*.js"\r\n\r\n# Search with line numbers\r\ngit grep -n "deprecated"\r\n\r\n# Search in a specific branch\r\ngit grep "bugfix" feature-branch\r\n\r\n# Search with context\r\ngit grep -B2 -A2 "error"\n'})}),"\n",(0,t.jsx)(i.h3,{id:"8-git-fsck---verify-repository-integrity",children:"8. Git Fsck - Verify Repository Integrity"}),"\n",(0,t.jsx)(i.p,{children:"Check your repository's health and recover lost objects:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Check repository integrity\r\ngit fsck\r\n\r\n# Find unreachable objects\r\ngit fsck --unreachable\r\n\r\n# Recover dangling commits\r\ngit fsck --lost-found\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"repository-management-1",children:"Repository Management"}),"\n",(0,t.jsx)(i.h3,{id:"9-git-archive---export-repository",children:"9. Git Archive - Export Repository"}),"\n",(0,t.jsx)(i.p,{children:"Create a compressed archive of your repository:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Create a tar archive of current HEAD\r\ngit archive --format=tar --output=project.tar HEAD\r\n\r\n# Create a zip file of specific branch\r\ngit archive --format=zip --output=release.zip main\r\n\r\n# Archive only specific directory\r\ngit archive HEAD src/ --output=src-only.tar\n"})}),"\n",(0,t.jsx)(i.h3,{id:"10-git-gc---optimize-repository",children:"10. Git GC - Optimize Repository"}),"\n",(0,t.jsx)(i.p,{children:"Keep your repository running smoothly:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Basic cleanup\r\ngit gc\r\n\r\n# Aggressive optimization (takes longer)\r\ngit gc --aggressive\r\n\r\n# Just prune loose objects\r\ngit gc --prune=now\n"})}),"\n",(0,t.jsx)(i.h3,{id:"11-git-lfs---handle-large-files",children:"11. Git LFS - Handle Large Files"}),"\n",(0,t.jsx)(i.p,{children:"Manage large files without bloating your repository:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Track large files by extension\r\ngit lfs track "*.psd"\r\ngit lfs track "*.zip"\r\n\r\n# View tracked patterns\r\ngit lfs track\r\n\r\n# List tracked files\r\ngit lfs ls-files\n'})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"advanced-operations-1",children:"Advanced Operations"}),"\n",(0,t.jsx)(i.h3,{id:"12-git-cherry-pick---selective-commit-import",children:"12. Git Cherry Pick - Selective Commit Import"}),"\n",(0,t.jsx)(i.p,{children:"Apply specific commits from other branches:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Cherry pick a single commit\r\ngit cherry-pick abc1234\r\n\r\n# Cherry pick multiple commits\r\ngit cherry-pick abc1234 def5678\r\n\r\n# Cherry pick without committing\r\ngit cherry-pick -n abc1234\n"})}),"\n",(0,t.jsx)(i.h3,{id:"13-git-submodules---nested-repositories",children:"13. Git Submodules - Nested Repositories"}),"\n",(0,t.jsx)(i.p,{children:"Include other repositories within yours:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Add a submodule\r\ngit submodule add https://github.com/user/repo lib/external\r\n\r\n# Clone a project with submodules\r\ngit clone --recursive https://github.com/user/project\r\n\r\n# Update all submodules\r\ngit submodule update --remote\n"})}),"\n",(0,t.jsx)(i.h3,{id:"14-git-reflog---recovery-time-machine",children:"14. Git Reflog - Recovery Time Machine"}),"\n",(0,t.jsx)(i.p,{children:"Never lose work again with reflog:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# View all HEAD changes\r\ngit reflog\r\n\r\n# View specific branch reflog\r\ngit reflog show feature-branch\r\n\r\n# Recover a lost commit\r\ngit checkout HEAD@{5}\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"utilities-1",children:"Utilities"}),"\n",(0,t.jsx)(i.h3,{id:"15-git-stripspace---clean-whitespace",children:"15. Git Stripspace - Clean Whitespace"}),"\n",(0,t.jsx)(i.p,{children:"Clean up whitespace in files:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Clean a file\r\ngit stripspace < messy.txt > clean.txt\r\n\r\n# Remove comments too\r\ngit stripspace --strip-comments < file.txt\r\n\r\n# Use in a pipeline\r\ncat README.md | git stripspace\n"})}),"\n",(0,t.jsx)(i.h3,{id:"16-git-show---inspect-any-object",children:"16. Git Show - Inspect Any Object"}),"\n",(0,t.jsx)(i.p,{children:"Display any Git object in human-readable form:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Show a commit\r\ngit show abc1234\r\n\r\n# Show a file from another branch\r\ngit show main:README.md\r\n\r\n# Show a tag\r\ngit show v1.0.0\n"})}),"\n",(0,t.jsx)(i.h3,{id:"17-git-diff---advanced-comparisons",children:"17. Git Diff - Advanced Comparisons"}),"\n",(0,t.jsx)(i.p,{children:"Beyond basic diff:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Compare two branches\r\ngit diff main..feature\r\n\r\n# Compare files across branches\r\ngit diff main:app.js feature:app.js\r\n\r\n# Show changes from last week\r\ngit diff HEAD@{7.days.ago} HEAD\r\n\r\n# Compare any two files (even non-git)\r\ngit diff --no-index file1.txt file2.txt\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"workflow-enhancement-1",children:"Workflow Enhancement"}),"\n",(0,t.jsx)(i.h3,{id:"18-git-hooks---automate-workflows",children:"18. Git Hooks - Automate Workflows"}),"\n",(0,t.jsx)(i.p,{children:"Automate tasks with Git hooks:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Example: Pre-commit hook\r\ncat > .git/hooks/pre-commit << 'EOF'\r\n#!/bin/sh\r\nnpm test\r\nEOF\r\n\r\nchmod +x .git/hooks/pre-commit\n"})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.strong,{children:"Common hooks:"})}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"pre-commit"}),": Run tests before committing"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"commit-msg"}),": Validate commit messages"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.code,{children:"post-merge"}),": Update dependencies after merge"]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"19-git-tag---version-marking",children:"19. Git Tag - Version Marking"}),"\n",(0,t.jsx)(i.p,{children:"Mark important points in history:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Create a lightweight tag\r\ngit tag v1.0.0\r\n\r\n# Create an annotated tag\r\ngit tag -a v1.0.0 -m "First stable release"\r\n\r\n# Tag a specific commit\r\ngit tag -a v1.0.0 abc1234\r\n\r\n# Push tags to remote\r\ngit push origin --tags\n'})}),"\n",(0,t.jsx)(i.h3,{id:"20-git-log---advanced-history-viewing",children:"20. Git Log - Advanced History Viewing"}),"\n",(0,t.jsx)(i.p,{children:"View your repository's history with style:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Beautiful graph view\r\ngit log --graph --pretty=oneline --abbrev-commit\r\n\r\n# Show commits by author\r\ngit log --author="Jane"\r\n\r\n# Search commit messages\r\ngit log --grep="bugfix"\r\n\r\n# Show commits affecting a file\r\ngit log --follow -- src/app.js\r\n\r\n# Compact summary\r\ngit shortlog -sn\n'})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"-bonus-tools",children:"\ud83c\udf81 Bonus Tools"}),"\n",(0,t.jsx)(i.h3,{id:"git-standup",children:"Git Standup"}),"\n",(0,t.jsx)(i.p,{children:"Remember what you did yesterday:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Install: npm install -g git-standup\r\ngit standup\n"})}),"\n",(0,t.jsx)(i.h3,{id:"git-extras",children:"Git Extras"}),"\n",(0,t.jsx)(i.p,{children:"70+ additional Git commands:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Install: brew install git-extras\r\ngit changelog\r\ngit summary\r\ngit effort\n"})}),"\n",(0,t.jsx)(i.h3,{id:"github-cli",children:"GitHub CLI"}),"\n",(0,t.jsx)(i.p,{children:"Manage GitHub from your terminal:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Install: brew install gh\r\ngh pr create\r\ngh issue list\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"-advanced-tips--tricks",children:"\ud83d\udca1 Advanced Tips & Tricks"}),"\n",(0,t.jsxs)(i.h3,{id:"1-power-aliases-for-daily-workflow",children:["1. ",(0,t.jsx)(i.strong,{children:"Power Aliases for Daily Workflow"})]}),"\n",(0,t.jsx)(i.p,{children:"Supercharge your productivity with these aliases:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Interactive staging\r\ngit config --global alias.stage 'add -p'\r\n\r\n# Pretty log with graph\r\ngit config --global alias.lg \"log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"\r\n\r\n# Undo last commit but keep changes\r\ngit config --global alias.undo 'reset HEAD~1 --mixed'\r\n\r\n# Show all aliases\r\ngit config --global alias.aliases 'config --get-regexp alias'\r\n\r\n# Amend without editing message\r\ngit config --global alias.amend 'commit --amend --no-edit'\n"})}),"\n",(0,t.jsxs)(i.h3,{id:"2-git-worktrees---multiple-branches-simultaneously",children:["2. ",(0,t.jsx)(i.strong,{children:"Git Worktrees - Multiple Branches Simultaneously"})]}),"\n",(0,t.jsx)(i.p,{children:"Work on multiple branches without stashing:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Create a new worktree\r\ngit worktree add ../feature-branch feature-branch\r\n\r\n# List all worktrees\r\ngit worktree list\r\n\r\n# Remove a worktree\r\ngit worktree remove ../feature-branch\n"})}),"\n",(0,t.jsxs)(i.h3,{id:"3-advanced-stashing-techniques",children:["3. ",(0,t.jsx)(i.strong,{children:"Advanced Stashing Techniques"})]}),"\n",(0,t.jsx)(i.p,{children:"Beyond basic stash:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Stash with a message\r\ngit stash save "WIP: implementing new feature"\r\n\r\n# Stash only staged changes\r\ngit stash --keep-index\r\n\r\n# Stash including untracked files\r\ngit stash -u\r\n\r\n# Create a branch from stash\r\ngit stash branch new-feature-branch stash@{0}\r\n\r\n# Apply specific file from stash\r\ngit checkout stash@{0} -- path/to/file\n'})}),"\n",(0,t.jsxs)(i.h3,{id:"4-performance-optimization",children:["4. ",(0,t.jsx)(i.strong,{children:"Performance Optimization"})]}),"\n",(0,t.jsx)(i.p,{children:"Speed up large repositories:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Enable file system cache\r\ngit config core.fscache true\r\n\r\n# Increase buffer size\r\ngit config http.postBuffer 524288000\r\n\r\n# Enable parallel index preload\r\ngit config core.preloadindex true\r\n\r\n# Use delta compression\r\ngit repack -a -d --depth=250 --window=250\n"})}),"\n",(0,t.jsxs)(i.h3,{id:"5-security-best-practices",children:["5. ",(0,t.jsx)(i.strong,{children:"Security Best Practices"})]}),"\n",(0,t.jsx)(i.p,{children:"Keep your repository secure:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:'# Sign commits with GPG\r\ngit config --global user.signingkey YOUR_GPG_KEY\r\ngit config --global commit.gpgsign true\r\n\r\n# Remove sensitive data from history\r\ngit filter-branch --force --index-filter \\\r\n  "git rm --cached --ignore-unmatch PATH-TO-FILE" \\\r\n  --prune-empty --tag-name-filter cat -- --all\r\n\r\n# Check for secrets before committing\r\n# Install: https://github.com/awslabs/git-secrets\r\ngit secrets --install\r\ngit secrets --register-aws\n'})}),"\n",(0,t.jsxs)(i.h3,{id:"6-git-maintenance-commands",children:["6. ",(0,t.jsx)(i.strong,{children:"Git Maintenance Commands"})]}),"\n",(0,t.jsx)(i.p,{children:"Keep your repository healthy:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Run maintenance tasks\r\ngit maintenance start\r\n\r\n# Verify connectivity and validity\r\ngit fsck --full\r\n\r\n# Prune all unreachable objects\r\ngit prune --expire now\r\n\r\n# Optimize repository database\r\ngit repack -a -d -f --depth=300 --window=300\n"})}),"\n",(0,t.jsxs)(i.h3,{id:"7-debugging-like-a-pro",children:["7. ",(0,t.jsx)(i.strong,{children:"Debugging Like a Pro"})]}),"\n",(0,t.jsx)(i.p,{children:"Advanced debugging techniques:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Find commits that changed specific function\r\ngit log -L :functionName:path/to/file\r\n\r\n# Show commit that created a file\r\ngit log --diff-filter=A -- path/to/file\r\n\r\n# Find deleted files\r\ngit log --diff-filter=D --summary\r\n\r\n# Trace line history\r\ngit log -L 15,20:path/to/file\n"})}),"\n",(0,t.jsxs)(i.h3,{id:"8-powerful-git-configurations",children:["8. ",(0,t.jsx)(i.strong,{children:"Powerful Git Configurations"})]}),"\n",(0,t.jsx)(i.p,{children:"Customize Git behavior:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-bash",children:"# Auto-correct typos\r\ngit config --global help.autocorrect 20\r\n\r\n# Better diffs\r\ngit config --global diff.algorithm histogram\r\n\r\n# Reuse recorded resolutions\r\ngit config --global rerere.enabled true\r\n\r\n# Follow renames in diff\r\ngit config --global diff.renames true\r\n\r\n# Color UI\r\ngit config --global color.ui auto\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h2,{id:"resources--attribution",children:"Resources & Attribution"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Original inspiration"}),": ",(0,t.jsx)(i.a,{href:"https://www.aliciasykes.com/blog/20-git-commands-you-probably-didnt-know-",children:"20 Git Commands you (probably) didn't know"})," by Alicia Sykes"]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Official Git Documentation"}),": ",(0,t.jsx)(i.a,{href:"https://git-scm.com/docs",children:"git-scm.com/docs"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Pro Git Book"}),": ",(0,t.jsx)(i.a,{href:"https://git-scm.com/book",children:"git-scm.com/book"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"Git Extras"}),": ",(0,t.jsx)(i.a,{href:"https://github.com/tj/git-extras",children:"github.com/tj/git-extras"})]}),"\n",(0,t.jsxs)(i.li,{children:[(0,t.jsx)(i.strong,{children:"GitHub CLI"}),": ",(0,t.jsx)(i.a,{href:"https://cli.github.com",children:"cli.github.com"})]}),"\n"]}),"\n",(0,t.jsx)(i.hr,{})]})}function g(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>a,x:()=>o});var r=n(96540);const t={},s=r.createContext(t);function a(e){const i=r.useContext(s);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(s.Provider,{value:i},e.children)}},89226:(e,i,n)=>{n.d(i,{A:()=>s});n(96540);var r=n(95293),t=n(74848);function s({children:e,color:i="#FFFF33",block:n=!1}){const{colorMode:s}=(0,r.G)();return(0,t.jsxs)("span",{style:{backgroundColor:i,borderRadius:"0.2rem",color:"#000",padding:"0.2rem 0.4rem",display:n?"block":"inline",marginBottom:n?"0.5rem":0},className:"highlight-wrapper",children:[e,(0,t.jsx)("style",{children:"\n        .highlight-wrapper a {\n          color: #000 !important;\n          text-decoration: underline;\n          font-weight: 600;\n        }\n        .highlight-wrapper a:hover {\n          color: #222 !important;\n        }\n      "})]})}}}]);