"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[3160],{19212:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>h,contentTitle:()=>a,default:()=>o,frontMatter:()=>l,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Security/Analysis/sop-hash-generation-methods","title":"Hash Generation Methods for Evidence Integrity","description":"Forensic hashing guide: SHA-256, MD5, file integrity verification, chain of custody & cryptographic hashing for digital evidence preservation.","source":"@site/intel-codex/Security/Analysis/sop-hash-generation-methods.md","sourceDirName":"Security/Analysis","slug":"/Security/Analysis/sop-hash-generation-methods","permalink":"/intel-codex/Security/Analysis/sop-hash-generation-methods","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/intel-codex/tree/main/intel-codex/Security/Analysis/sop-hash-generation-methods.md","tags":[],"version":"current","lastUpdatedAt":null,"frontMatter":{"title":"Hash Generation Methods for Evidence Integrity","description":"Forensic hashing guide: SHA-256, MD5, file integrity verification, chain of custody & cryptographic hashing for digital evidence preservation."},"sidebar":"intelCodexSidebar","previous":{"title":"Digital Forensics Investigation SOP","permalink":"/intel-codex/Security/Analysis/sop-forensics-investigation"},"next":{"title":"Malware Analysis SOP","permalink":"/intel-codex/Security/Analysis/sop-malware-analysis"}}');var r=i(74848),t=i(28453);const l={title:"Hash Generation Methods for Evidence Integrity",description:"Forensic hashing guide: SHA-256, MD5, file integrity verification, chain of custody & cryptographic hashing for digital evidence preservation."},a="Hash Generation Methods for Evidence Integrity",h={},c=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"1. Command Line Tools (Primary Methods)",id:"1-command-line-tools-primary-methods",level:2},{value:"Windows - CertUtil",id:"windows---certutil",level:3},{value:"Windows - PowerShell",id:"windows---powershell",level:3},{value:"Linux/macOS - Command Line",id:"linuxmacos---command-line",level:3},{value:"macOS - Specific Commands",id:"macos---specific-commands",level:3},{value:"2. Forensic Tools (Professional Methods)",id:"2-forensic-tools-professional-methods",level:2},{value:"FTK Imager",id:"ftk-imager",level:3},{value:"md5deep / hashdeep",id:"md5deep--hashdeep",level:3},{value:"Autopsy / Sleuth Kit",id:"autopsy--sleuth-kit",level:3},{value:"3. Third-Party Tools",id:"3-third-party-tools",level:2},{value:"HashTab (Windows - GUI)",id:"hashtab-windows---gui",level:3},{value:"HashMyFiles (Windows - Portable)",id:"hashmyfiles-windows---portable",level:3},{value:"GtkHash (Linux - GUI)",id:"gtkhash-linux---gui",level:3},{value:"RapidCRC Unicode (Windows)",id:"rapidcrc-unicode-windows",level:3},{value:"4. Hash Algorithm Selection",id:"4-hash-algorithm-selection",level:2},{value:"Algorithm Comparison",id:"algorithm-comparison",level:3},{value:"Current Best Practices (2025)",id:"current-best-practices-2025",level:3},{value:"Collision Attack Examples",id:"collision-attack-examples",level:3},{value:"5. Evidence Collection Workflow",id:"5-evidence-collection-workflow",level:2},{value:"Step-by-Step Process",id:"step-by-step-process",level:3},{value:"6. Advanced Use Cases",id:"6-advanced-use-cases",level:2},{value:"Malware Sample Deduplication",id:"malware-sample-deduplication",level:3},{value:"Disk Image Verification",id:"disk-image-verification",level:3},{value:"Network Transfer Integrity",id:"network-transfer-integrity",level:3},{value:"Large File Streaming Hash",id:"large-file-streaming-hash",level:3},{value:"7. Troubleshooting &amp; Common Issues",id:"7-troubleshooting--common-issues",level:2},{value:"Hash Mismatch Scenarios",id:"hash-mismatch-scenarios",level:3},{value:"Performance Optimization",id:"performance-optimization",level:3},{value:"8. Chain of Custody Best Practices",id:"8-chain-of-custody-best-practices",level:2},{value:"Documentation Template",id:"documentation-template",level:3},{value:"Automated Logging Script",id:"automated-logging-script",level:3},{value:"9. Integration with Forensic Tools",id:"9-integration-with-forensic-tools",level:2},{value:"Autopsy / Sleuth Kit Integration",id:"autopsy--sleuth-kit-integration",level:3},{value:"EnCase / FTK Integration",id:"encase--ftk-integration",level:3},{value:"Volatility (Memory Forensics)",id:"volatility-memory-forensics",level:3},{value:"10. Tools Reference",id:"10-tools-reference",level:2},{value:"11. Reference Resources",id:"11-reference-resources",level:2},{value:"Hash Algorithm Standards &amp; Documentation",id:"hash-algorithm-standards--documentation",level:3},{value:"Digital Forensics Standards",id:"digital-forensics-standards",level:3},{value:"Hash Collision Research",id:"hash-collision-research",level:3},{value:"Forensic Hashing Tools",id:"forensic-hashing-tools",level:3},{value:"Forensic Imaging Tools (with Hash Verification)",id:"forensic-imaging-tools-with-hash-verification",level:3},{value:"Online Hash Lookup Services",id:"online-hash-lookup-services",level:3},{value:"Training &amp; Certification",id:"training--certification",level:3},{value:"Community &amp; Forums",id:"community--forums",level:3},{value:"Automation Scripts &amp; Tools",id:"automation-scripts--tools",level:3},{value:"Related SOPs",id:"related-sops",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.admonition,{type:"danger",children:[(0,r.jsxs)(n.mdxAdmonitionTitle,{children:["Synced from an ",(0,r.jsx)(n.strong,{children:"Obsidian vault"})]}),(0,r.jsxs)(n.p,{children:["For graph and advanced features, download the ",(0,r.jsx)(n.strong,{children:"full"})," ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/gl0bal01/intel-codex",children:"Intel Codex Vault"})})," and open it in ",(0,r.jsx)(n.strong,{children:"Obsidian"}),"."]})]}),"\n",(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"hash-generation-methods-for-evidence-integrity",children:"Hash Generation Methods for Evidence Integrity"})}),"\n",(0,r.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#1-command-line-tools-primary-methods",children:"Command Line Tools (Primary Methods)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#2-forensic-tools-professional-methods",children:"Forensic Tools (Professional Methods)"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#3-third-party-tools",children:"Third-Party Tools"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#4-hash-algorithm-selection",children:"Hash Algorithm Selection"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#5-evidence-collection-workflow",children:"Evidence Collection Workflow"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#6-advanced-use-cases",children:"Advanced Use Cases"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#7-troubleshooting--common-issues",children:"Troubleshooting & Common Issues"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#8-chain-of-custody-best-practices",children:"Chain of Custody Best Practices"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#9-integration-with-forensic-tools",children:"Integration with Forensic Tools"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#10-tools-reference",children:"Tools Reference"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#11-reference-resources",children:"Reference Resources"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Hash values provide cryptographic fingerprints of digital evidence, ensuring integrity, authenticity, and non-repudiation throughout the investigation lifecycle. Any modification to the file will result in a completely different hash value, making tampering immediately detectable."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use Cases:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Evidence acquisition and chain of custody verification"}),"\n",(0,r.jsx)(n.li,{children:"Malware sample identification and deduplication"}),"\n",(0,r.jsx)(n.li,{children:"File integrity monitoring in incident response"}),"\n",(0,r.jsx)(n.li,{children:"Data transfer verification (network/physical media)"}),"\n",(0,r.jsx)(n.li,{children:"Court admissibility of digital evidence (Daubert/Frye standards)"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-command-line-tools-primary-methods",children:"1. Command Line Tools (Primary Methods)"}),"\n",(0,r.jsx)(n.h3,{id:"windows---certutil",children:"Windows - CertUtil"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Basic hashing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cmd",children:'# SHA-256 (Recommended for forensics)\ncertutil -hashfile "evidence.bin" SHA256\n\n# Output:\n# SHA256 hash of evidence.bin:\n# a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890\n# CertUtil: -hashfile command completed successfully.\n\n# Multiple algorithms at once (batch script)\n@echo off\necho Hashing: %1\ncertutil -hashfile "%1" MD5 | findstr /v "hash CertUtil"\ncertutil -hashfile "%1" SHA1 | findstr /v "hash CertUtil"\ncertutil -hashfile "%1" SHA256 | findstr /v "hash CertUtil"\ncertutil -hashfile "%1" SHA512 | findstr /v "hash CertUtil"\n\n# Save to file with timestamp\ncertutil -hashfile "evidence.bin" SHA256 > "%DATE:/=-%_%TIME::=-%_evidence_hash.txt"\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Batch processing multiple files:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cmd",children:'# Hash all files in directory\nfor %f in (C:\\Evidence\\*) do @certutil -hashfile "%f" SHA256 | findstr /v "hash CertUtil" >> evidence_hashes.txt\n\n# With filenames\nfor %f in (C:\\Evidence\\*) do @echo %f && certutil -hashfile "%f" SHA256 | findstr /v "hash CertUtil"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"windows---powershell",children:"Windows - PowerShell"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Single file hashing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"# SHA-256 with clean output\nGet-FileHash -Path \"evidence.bin\" -Algorithm SHA256 | Format-List\n\n# Output:\n# Algorithm : SHA256\n# Hash      : A1B2C3D4E5F6789012345678901234567890123456789012345678901234567890\n# Path      : C:\\Evidence\\evidence.bin\n\n# Just the hash value\n(Get-FileHash -Path \"evidence.bin\" -Algorithm SHA256).Hash\n\n# Multiple algorithms\n@('MD5', 'SHA1', 'SHA256', 'SHA512') | ForEach-Object {\n    $hash = Get-FileHash -Path \"evidence.bin\" -Algorithm $_\n    Write-Output \"$($_): $($hash.Hash)\"\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Batch processing and export:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'# Hash all files in directory tree\nGet-ChildItem -Path "C:\\Evidence" -Recurse -File |\n    Get-FileHash -Algorithm SHA256 |\n    Select-Object Algorithm, Hash, Path |\n    Export-Csv -Path "evidence_hashes.csv" -NoTypeInformation\n\n# Generate verification report\nGet-ChildItem -Path "C:\\Evidence" -Recurse -File | ForEach-Object {\n    $hash = Get-FileHash -Path $_.FullName -Algorithm SHA256\n    [PSCustomObject]@{\n        Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss"\n        Filename = $_.Name\n        Path = $_.FullName\n        Size = $_.Length\n        Created = $_.CreationTime\n        Modified = $_.LastWriteTime\n        SHA256 = $hash.Hash\n        Analyst = $env:USERNAME\n    }\n} | Export-Csv -Path "evidence_manifest.csv" -NoTypeInformation\n\n# Compare hash against known value\n$knownHash = "a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890"\n$currentHash = (Get-FileHash -Path "evidence.bin" -Algorithm SHA256).Hash\nif ($currentHash -eq $knownHash) {\n    Write-Host "\u2713 VERIFIED: Hash matches" -ForegroundColor Green\n} else {\n    Write-Host "\u2717 MISMATCH: File integrity compromised!" -ForegroundColor Red\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"linuxmacos---command-line",children:"Linux/macOS - Command Line"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Basic hashing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# SHA-256 (Recommended)\nsha256sum evidence.bin\n# Output: a1b2c3d4e5f6... evidence.bin\n\n# MD5\nmd5sum evidence.bin\n\n# SHA-1\nsha1sum evidence.bin\n\n# SHA-512\nsha512sum evidence.bin\n\n# Multiple algorithms\necho \"MD5:    $(md5sum evidence.bin | awk '{print $1}')\"\necho \"SHA1:   $(sha1sum evidence.bin | awk '{print $1}')\"\necho \"SHA256: $(sha256sum evidence.bin | awk '{print $1}')\"\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Batch processing:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Hash all files in directory\nfind /evidence -type f -exec sha256sum {} \\; > evidence_hashes.txt\n\n# With formatted output\nfind /evidence -type f -print0 | while IFS= read -r -d \'\' file; do\n    echo "File: $file"\n    echo "SHA256: $(sha256sum "$file" | awk \'{print $1}\')"\n    echo "Size: $(stat -f%z "$file") bytes"\n    echo "Modified: $(stat -f%Sm "$file")"\n    echo "---"\ndone > evidence_manifest.txt\n\n# Create checksums file for verification\nsha256sum /evidence/* > SHA256SUMS\n\n# Verify integrity later\nsha256sum -c SHA256SUMS\n# Output:\n# evidence1.bin: OK\n# evidence2.bin: OK\n# evidence3.bin: FAILED\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Advanced verification workflow:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'#!/bin/bash\n# evidence_hash.sh - Comprehensive evidence hashing script\n\nEVIDENCE_DIR="/evidence"\nOUTPUT_FILE="evidence_manifest_$(date +%Y%m%d_%H%M%S).txt"\nANALYST=$(whoami)\n\necho "Evidence Hash Manifest" > "$OUTPUT_FILE"\necho "Generated: $(date -u)" >> "$OUTPUT_FILE"\necho "Analyst: $ANALYST" >> "$OUTPUT_FILE"\necho "========================================" >> "$OUTPUT_FILE"\necho "" >> "$OUTPUT_FILE"\n\nfind "$EVIDENCE_DIR" -type f | while read -r file; do\n    echo "File: $file" >> "$OUTPUT_FILE"\n    echo "Size: $(stat -f%z "$file" 2>/dev/null || stat -c%s "$file") bytes" >> "$OUTPUT_FILE"\n    echo "Modified: $(stat -f%Sm "$file" 2>/dev/null || stat -c%y "$file")" >> "$OUTPUT_FILE"\n    echo "MD5:    $(md5sum "$file" | awk \'{print $1}\')" >> "$OUTPUT_FILE"\n    echo "SHA256: $(sha256sum "$file" | awk \'{print $1}\')" >> "$OUTPUT_FILE"\n    echo "---" >> "$OUTPUT_FILE"\ndone\n\n# Sign the manifest\nsha256sum "$OUTPUT_FILE"\n'})}),"\n",(0,r.jsx)(n.h3,{id:"macos---specific-commands",children:"macOS - Specific Commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# macOS uses different stat syntax\nmd5 evidence.bin\nshasum -a 256 evidence.bin\nshasum -a 512 evidence.bin\n\n# Or use coreutils versions (if installed via Homebrew)\nbrew install coreutils\ngmd5sum evidence.bin\ngsha256sum evidence.bin\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-forensic-tools-professional-methods",children:"2. Forensic Tools (Professional Methods)"}),"\n",(0,r.jsx)(n.h3,{id:"ftk-imager",children:"FTK Imager"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. Open FTK Imager\n2. File \u2192 Add Evidence Item \u2192 Select file/folder\n3. Right-click evidence item \u2192 Verify Drive/Image\n4. Tool automatically calculates MD5 and SHA1\n5. Results displayed in Verify Results window\n6. Export verification log: File \u2192 Export Verification Results\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Command line (FTK Imager CLI):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cmd",children:'# Windows\nftkimager.exe --verify "E:\\evidence.dd"\n\n# Generate hash report\nftkimager.exe --list-drives > drives.txt\nftkimager.exe "\\\\.\\PhysicalDrive1" "E:\\image.dd" --verify --sha256\n'})}),"\n",(0,r.jsx)(n.h3,{id:"md5deep--hashdeep",children:"md5deep / hashdeep"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install (Linux)\nsudo apt install md5deep\n\n# Calculate SHA-256 recursively\nhashdeep -r -c sha256 /evidence > evidence_hashes.txt\n\n# Audit mode (verify against known hashes)\nhashdeep -r -c sha256 -a -k evidence_hashes.txt /evidence\n\n# Multiple algorithms\nhashdeep -r -c md5,sha1,sha256 /evidence > multi_hash.txt\n\n# Match known malware hashes\nhashdeep -M /path/to/malware_hashes.txt -r /suspect_files\n"})}),"\n",(0,r.jsx)(n.h3,{id:"autopsy--sleuth-kit",children:"Autopsy / Sleuth Kit"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Calculate hash using Sleuth Kit\nimg_stat -h evidence.dd\n\n# Or md5sum equivalent\nmd5sum evidence.dd\n\n# For disk images, use specialized tools\newfverify image.E01  # Verify EnCase/EWF images\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-third-party-tools",children:"3. Third-Party Tools"}),"\n",(0,r.jsx)(n.h3,{id:"hashtab-windows---gui",children:"HashTab (Windows - GUI)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'1. Download: https://hashtab.io/\n2. Right-click any file \u2192 Properties\n3. "File Hashes" tab appears\n4. Select algorithms: MD5, SHA-1, SHA-256\n5. Compare hash against known value\n6. Copy hash to clipboard\n'})}),"\n",(0,r.jsx)(n.h3,{id:"hashmyfiles-windows---portable",children:"HashMyFiles (Windows - Portable)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. Download from NirSoft: https://www.nirsoft.net/utils/hash_my_files.html\n2. Drag-and-drop files/folders\n3. Select hash algorithms (MD5/SHA1/SHA256/CRC32)\n4. File \u2192 Save Selected Items (Ctrl+S)\n5. Export to CSV/TXT/HTML for documentation\n"})}),"\n",(0,r.jsx)(n.h3,{id:"gtkhash-linux---gui",children:"GtkHash (Linux - GUI)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Install\nsudo apt install gtkhash\n\n# Launch\ngtkhash\n\n# Or command line\ngtkhash-cli -a md5,sha1,sha256 evidence.bin\n"})}),"\n",(0,r.jsx)(n.h3,{id:"rapidcrc-unicode-windows",children:"RapidCRC Unicode (Windows)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"1. Download: https://www.rapidcrc.net/\n2. Drag files to RapidCRC window\n3. Right-click \u2192 Create SFV/MD5 file\n4. Saves .sfv or .md5 checksum file\n5. Later: Drag .sfv file to verify integrity\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-hash-algorithm-selection",children:"4. Hash Algorithm Selection"}),"\n",(0,r.jsx)(n.h3,{id:"algorithm-comparison",children:"Algorithm Comparison"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Algorithm"}),(0,r.jsx)(n.th,{children:"Output Length"}),(0,r.jsx)(n.th,{children:"Security Status"}),(0,r.jsx)(n.th,{children:"Speed"}),(0,r.jsx)(n.th,{children:"Use Case"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"MD5"})}),(0,r.jsx)(n.td,{children:"128-bit (32 hex)"}),(0,r.jsx)(n.td,{children:"\u274c Broken (collision attacks)"}),(0,r.jsx)(n.td,{children:"Fast"}),(0,r.jsx)(n.td,{children:"Legacy compatibility only"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"SHA-1"})}),(0,r.jsx)(n.td,{children:"160-bit (40 hex)"}),(0,r.jsx)(n.td,{children:"\u26a0\ufe0f Deprecated (SHAttered attack 2017)"}),(0,r.jsx)(n.td,{children:"Fast"}),(0,r.jsx)(n.td,{children:"Legacy systems"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"SHA-256"})}),(0,r.jsx)(n.td,{children:"256-bit (64 hex)"}),(0,r.jsx)(n.td,{children:"\u2705 Secure"}),(0,r.jsx)(n.td,{children:"Medium"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"Recommended for forensics"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"SHA-512"})}),(0,r.jsx)(n.td,{children:"512-bit (128 hex)"}),(0,r.jsx)(n.td,{children:"\u2705 Secure"}),(0,r.jsx)(n.td,{children:"Medium"}),(0,r.jsx)(n.td,{children:"High-security evidence"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"SHA-3"})}),(0,r.jsx)(n.td,{children:"Variable"}),(0,r.jsx)(n.td,{children:"\u2705 Secure (latest standard)"}),(0,r.jsx)(n.td,{children:"Medium"}),(0,r.jsx)(n.td,{children:"Future-proofing"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.strong,{children:"CRC32"})}),(0,r.jsx)(n.td,{children:"32-bit"}),(0,r.jsx)(n.td,{children:"\u274c Not cryptographic"}),(0,r.jsx)(n.td,{children:"Very Fast"}),(0,r.jsx)(n.td,{children:"Error detection only"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"current-best-practices-2025",children:"Current Best Practices (2025)"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Primary standard:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"SHA-256 - Recommended for all new evidence\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why SHA-256:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"NIST approved (FIPS 180-4)"}),"\n",(0,r.jsx)(n.li,{children:"No known practical attacks"}),"\n",(0,r.jsx)(n.li,{children:"Widely supported across forensic tools"}),"\n",(0,r.jsx)(n.li,{children:"Court admissible (Daubert/Frye standards)"}),"\n",(0,r.jsx)(n.li,{children:"Balance of security and performance"}),"\n",(0,r.jsx)(n.li,{children:"2^256 possible values (effectively collision-proof)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"When to use SHA-512:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Critical national security evidence"}),"\n",(0,r.jsx)(n.li,{children:"Long-term archival (50+ years)"}),"\n",(0,r.jsx)(n.li,{children:"When disk I/O is not a bottleneck"}),"\n",(0,r.jsx)(n.li,{children:"Compliance requirements (CMMC Level 5, FedRAMP High)"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"When MD5 is acceptable:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"ONLY"})," for deduplication in controlled environments"]}),"\n",(0,r.jsxs)(n.li,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"ONLY"})," when comparing against legacy databases"]}),"\n",(0,r.jsxs)(n.li,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"NEVER"})," as sole integrity verification in court"]}),"\n",(0,r.jsxs)(n.li,{children:["\u26a0\ufe0f ",(0,r.jsx)(n.strong,{children:"ALWAYS"})," pair with SHA-256 when used"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"collision-attack-examples",children:"Collision Attack Examples"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"MD5 collision (2004):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'# Two different files with identical MD5 hash\nFile1: "Hello World\\n" + malicious_code\nFile2: "Hello World\\n" + benign_code\nMD5(File1) == MD5(File2)  # Same hash, different content!\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"SHA-1 collision (SHAttered, 2017):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# Two different PDF files with same SHA-1\nhttps://shattered.io/\n# Proof that SHA-1 is no longer secure\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-evidence-collection-workflow",children:"5. Evidence Collection Workflow"}),"\n",(0,r.jsx)(n.h3,{id:"step-by-step-process",children:"Step-by-Step Process"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Immediate Acquisition (T+0 minutes)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'# Windows - Calculate hash immediately after copying evidence\nCopy-Item -Path "\\\\suspect-pc\\C$\\evidence.bin" -Destination "E:\\CASE-001\\evidence.bin"\n$hash = Get-FileHash -Path "E:\\CASE-001\\evidence.bin" -Algorithm SHA256\n$hash.Hash | Out-File "E:\\CASE-001\\evidence_SHA256.txt"\nWrite-Host "SHA256: $($hash.Hash)"\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Linux - Calculate hash during copy with tee\ndd if=/dev/sdb of=/evidence/disk.dd bs=512 conv=noerror,sync | tee >(sha256sum > /evidence/disk_SHA256.txt)\n\n# Or after copy\nsha256sum /evidence/disk.dd | tee /evidence/disk_SHA256.txt\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Chain of Custody Documentation (T+5 minutes)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# Evidence Log - CASE-2025-1005-001\n\n## Acquisition\n- **Date/Time:** 2025-10-05 14:30:00 UTC\n- **Source:** Laptop (HOSTNAME: SUSPECT-PC)\n- **Path:** C:\\Users\\suspect\\Documents\\evidence.bin\n- **Acquired By:** Analyst Name\n- **Method:** Physical copy via USB write-blocker\n\n## Hash Values (Acquisition)\n- **SHA-256:** a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890\n- **SHA-1:**   1234567890abcdef1234567890abcdef12345678\n- **MD5:**     12345678901234567890123456789012\n- **Algorithm:** SHA-256 (primary)\n- **Tool:** Get-FileHash (PowerShell 5.1)\n\n## Verification Log\n| Date | Time (UTC) | Result | Hash Match | Analyst |\n|------|------------|--------|------------|---------|\n| 2025-10-05 | 14:30 | \u2713 VERIFIED | SHA-256 match | analyst1 |\n| 2025-10-06 | 09:00 | \u2713 VERIFIED | SHA-256 match | analyst2 |\n| 2025-10-07 | 11:15 | \u2717 MISMATCH | SHA-256 FAIL | analyst1 |\n\n## Notes\n- 2025-10-07 mismatch: File was re-acquired from backup. New hash documented below.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. Periodic Re-Verification (Daily/Before Analysis)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'# Automated verification script\n$evidencePath = "E:\\CASE-001\\evidence.bin"\n$knownHashFile = "E:\\CASE-001\\evidence_SHA256.txt"\n$knownHash = (Get-Content $knownHashFile).Trim()\n$currentHash = (Get-FileHash -Path $evidencePath -Algorithm SHA256).Hash\n\n$result = @{\n    Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC"\n    Analyst = $env:USERNAME\n    FilePath = $evidencePath\n    KnownHash = $knownHash\n    CurrentHash = $currentHash\n    Match = ($currentHash -eq $knownHash)\n}\n\nif ($result.Match) {\n    Write-Host "\u2713 VERIFIED: Evidence integrity maintained" -ForegroundColor Green\n    Add-Content -Path "E:\\CASE-001\\verification_log.txt" -Value "$($result.Timestamp) - VERIFIED by $($result.Analyst)"\n} else {\n    Write-Host "\u2717 CRITICAL: Evidence integrity compromised!" -ForegroundColor Red\n    Write-Host "Expected: $knownHash"\n    Write-Host "Got:      $currentHash"\n    Add-Content -Path "E:\\CASE-001\\verification_log.txt" -Value "$($result.Timestamp) - MISMATCH detected by $($result.Analyst) - INVESTIGATION REQUIRED"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. Transfer Verification"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Sender side (create manifest)\nsha256sum evidence.bin > evidence_SHA256.txt\ntar -czf evidence_package.tar.gz evidence.bin evidence_SHA256.txt\n\n# Receiver side (verify after transfer)\ntar -xzf evidence_package.tar.gz\nsha256sum -c evidence_SHA256.txt\n# Output: evidence.bin: OK\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-advanced-use-cases",children:"6. Advanced Use Cases"}),"\n",(0,r.jsx)(n.h3,{id:"malware-sample-deduplication",children:"Malware Sample Deduplication"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Build malware sample database\nfind /malware_samples -type f -exec sha256sum {} \\; | sort > malware_hashes.txt\n\n# Check if new sample is already in database\nNEW_HASH=$(sha256sum new_sample.exe | awk \'{print $1}\')\nif grep -q "$NEW_HASH" malware_hashes.txt; then\n    echo "Duplicate sample - already analyzed"\nelse\n    echo "New sample - requires analysis"\n    echo "$NEW_HASH new_sample.exe" >> malware_hashes.txt\nfi\n'})}),"\n",(0,r.jsx)(n.h3,{id:"disk-image-verification",children:"Disk Image Verification"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create disk image with verification\ndc3dd if=/dev/sdb of=evidence.dd hash=sha256 hash=md5 hashlog=evidence_hashes.txt\n\n# Verify disk image later\ndc3dd if=evidence.dd hash=sha256 hashlog=verification.txt\ndiff evidence_hashes.txt verification.txt\n"})}),"\n",(0,r.jsx)(n.h3,{id:"network-transfer-integrity",children:"Network Transfer Integrity"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Sender: Calculate hash before upload\nsha256sum evidence.bin > evidence.sha256\nrsync -avz evidence.bin evidence.sha256 analyst@server:/evidence/\n\n# Receiver: Verify after download\ncd /evidence\nsha256sum -c evidence.sha256\n"})}),"\n",(0,r.jsx)(n.h3,{id:"large-file-streaming-hash",children:"Large File Streaming Hash"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Hash file while reading (doesn't load entire file into memory)\nsha256sum large_image.dd\n# Works for files larger than available RAM\n\n# Or with progress bar (requires pv)\npv large_image.dd | sha256sum\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"7-troubleshooting--common-issues",children:"7. Troubleshooting & Common Issues"}),"\n",(0,r.jsx)(n.h3,{id:"hash-mismatch-scenarios",children:"Hash Mismatch Scenarios"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"1. Line Ending Differences (Text Files)"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Windows (CRLF) vs Linux (LF) line endings cause different hashes\n# On Windows:\ncertutil -hashfile document.txt SHA256\n# Result: a1b2c3d4...\n\n# Same file on Linux:\nsha256sum document.txt\n# Result: b2c3d4e5... (DIFFERENT!)\n\n# Solution: Use binary comparison or normalize line endings\ndos2unix document.txt  # Convert to Unix\nunix2dos document.txt  # Convert to Windows\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"2. Filesystem Metadata vs Content"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Some tools hash metadata + content, others hash content only\n# File hash will differ if metadata is included\n\n# Content-only hash (most common)\nsha256sum file.bin\n\n# Metadata + content hash\n# Use specialized tools like md5deep with -l flag\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"3. File Locking"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:"# Windows: File in use by another process\nGet-FileHash evidence.bin\n# Error: The process cannot access the file because it is being used by another process\n\n# Solution: Use handle.exe to find locking process\nhandle.exe evidence.bin\n# Or reboot into forensic boot environment\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"4. Symbolic Links"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Hash follows symlink (hashes target file)\nsha256sum /path/to/symlink  # Hashes target\n\n# Hash the symlink itself\nsha256sum -L /path/to/symlink  # Some versions support -L flag\n\n# Best practice: Resolve symlinks first\nreadlink -f /path/to/symlink\nsha256sum /actual/target/path\n"})}),"\n",(0,r.jsx)(n.h3,{id:"performance-optimization",children:"Performance Optimization"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Parallel hashing (multiple files):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# GNU parallel (fastest for many files)\nfind /evidence -type f | parallel -j 8 sha256sum {} > all_hashes.txt\n\n# Or xargs\nfind /evidence -type f | xargs -P 8 -I {} sha256sum {}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Large file optimization:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Use buffered I/O for large files\ndd if=large_image.dd bs=1M | sha256sum\n\n# Or specialized tools\nsha256deep -r /evidence  # Optimized for forensics\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-chain-of-custody-best-practices",children:"8. Chain of Custody Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"documentation-template",children:"Documentation Template"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"# Evidence Hash Verification Form\n\n**Case Number:** CASE-2025-1005-001\n**Evidence ID:** EV-001\n**Description:** Laptop hard drive image\n\n## Initial Hash (Acquisition)\n- **Date/Time:** 2025-10-05 14:30:00 UTC\n- **Calculated By:** John Doe (Analyst ID: A123)\n- **Algorithm:** SHA-256\n- **Hash Value:** a1b2c3d4e5f6789012345678901234567890123456789012345678901234567890\n- **Tool:** FTK Imager 4.7.1.2\n- **Signature:** [Digital signature or initials]\n\n## Verification Record\n\n### Verification 1\n- **Date/Time:** 2025-10-06 09:00:00 UTC\n- **Verified By:** Jane Smith (Analyst ID: A456)\n- **Result:** \u2713 MATCH\n- **Signature:** [Digital signature or initials]\n\n### Verification 2\n- **Date/Time:** 2025-10-07 11:15:00 UTC\n- **Verified By:** John Doe (Analyst ID: A123)\n- **Result:** \u2717 MISMATCH\n- **Action Taken:** Evidence re-acquired from backup. New hash documented.\n- **Incident Report:** INC-2025-1007-001\n- **Signature:** [Digital signature or initials]\n\n## Transfer Log\n| Date | From | To | Method | Hash Verified | Signature |\n|------|------|-----|--------|---------------|-----------|\n| 2025-10-05 | Crime Scene | Lab | USB 3.0 | \u2713 | JD |\n| 2025-10-06 | Lab | Storage | Network | \u2713 | JS |\n"})}),"\n",(0,r.jsx)(n.h3,{id:"automated-logging-script",children:"Automated Logging Script"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-powershell",children:'# evidence_tracker.ps1\nparam(\n    [string]$EvidencePath,\n    [string]$CaseNumber\n)\n\n$logPath = "E:\\Cases\\$CaseNumber\\hash_verification_log.csv"\n\n# Calculate current hash\n$hash = Get-FileHash -Path $EvidencePath -Algorithm SHA256\n\n# Log entry\n$entry = [PSCustomObject]@{\n    Timestamp = Get-Date -Format "yyyy-MM-dd HH:mm:ss UTC"\n    CaseNumber = $CaseNumber\n    FilePath = $EvidencePath\n    SHA256 = $hash.Hash\n    Analyst = $env:USERNAME\n    Computername = $env:COMPUTERNAME\n}\n\n# Append to log\n$entry | Export-Csv -Path $logPath -Append -NoTypeInformation\n\nWrite-Host "Hash logged: $($hash.Hash)"\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"9-integration-with-forensic-tools",children:"9. Integration with Forensic Tools"}),"\n",(0,r.jsx)(n.h3,{id:"autopsy--sleuth-kit-integration",children:"Autopsy / Sleuth Kit Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:'# Calculate hash during Autopsy ingest\n# Autopsy automatically calculates MD5 for all files\n\n# Query Autopsy database for file hashes\nsqlite3 autopsy.db "SELECT name, md5 FROM tsk_files WHERE md5 IS NOT NULL;"\n\n# Export hash list\nsqlite3 -csv autopsy.db "SELECT md5, name FROM tsk_files;" > autopsy_hashes.csv\n'})}),"\n",(0,r.jsx)(n.h3,{id:"encase--ftk-integration",children:"EnCase / FTK Integration"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"# EnCase automatically calculates MD5 and SHA-1 during evidence processing\n# Access via Evidence > File Properties > Hash\n\n# Export hash report:\n# EnCase: View > Hash Analysis > Export\n# FTK: File > Export > Hash List\n"})}),"\n",(0,r.jsx)(n.h3,{id:"volatility-memory-forensics",children:"Volatility (Memory Forensics)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Hash memory dump\nsha256sum memory.dmp > memory_SHA256.txt\n\n# Volatility automatically verifies integrity if hash stored in profile\nvol.py -f memory.dmp --profile=Win10x64 pslist\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"10-tools-reference",children:"10. Tools Reference"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Tool"}),(0,r.jsx)(n.th,{children:"Platform"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Use Case"}),(0,r.jsx)(n.th,{children:"Link"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"certutil"}),(0,r.jsx)(n.td,{children:"Windows"}),(0,r.jsx)(n.td,{children:"Built-in"}),(0,r.jsx)(n.td,{children:"Quick hashing"}),(0,r.jsx)(n.td,{children:"Built-in"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Get-FileHash"}),(0,r.jsx)(n.td,{children:"Windows"}),(0,r.jsx)(n.td,{children:"Built-in"}),(0,r.jsx)(n.td,{children:"PowerShell automation"}),(0,r.jsx)(n.td,{children:"Built-in"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"sha256sum"}),(0,r.jsx)(n.td,{children:"Linux/Mac"}),(0,r.jsx)(n.td,{children:"Built-in"}),(0,r.jsx)(n.td,{children:"Command-line hashing"}),(0,r.jsx)(n.td,{children:"Built-in"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"md5deep/hashdeep"}),(0,r.jsx)(n.td,{children:"Cross-platform"}),(0,r.jsx)(n.td,{children:"CLI"}),(0,r.jsx)(n.td,{children:"Recursive hashing, audit"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/jessek/hashdeep",children:"GitHub"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HashTab"}),(0,r.jsx)(n.td,{children:"Windows"}),(0,r.jsx)(n.td,{children:"GUI"}),(0,r.jsx)(n.td,{children:"Right-click integration"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://hashtab.io",children:"hashtab.io"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"HashMyFiles"}),(0,r.jsx)(n.td,{children:"Windows"}),(0,r.jsx)(n.td,{children:"GUI"}),(0,r.jsx)(n.td,{children:"Batch processing"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.nirsoft.net/utils/hash_my_files.html",children:"NirSoft"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"FTK Imager"}),(0,r.jsx)(n.td,{children:"Windows"}),(0,r.jsx)(n.td,{children:"GUI/CLI"}),(0,r.jsx)(n.td,{children:"Forensic imaging + hash"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.exterro.com/ftk-imager",children:"Exterro"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GtkHash"}),(0,r.jsx)(n.td,{children:"Linux"}),(0,r.jsx)(n.td,{children:"GUI"}),(0,r.jsx)(n.td,{children:"GTK-based hashing"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://github.com/tristanheaven/gtkhash",children:"gtkhash"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RapidCRC"}),(0,r.jsx)(n.td,{children:"Windows"}),(0,r.jsx)(n.td,{children:"GUI"}),(0,r.jsx)(n.td,{children:"SFV/MD5 checksum files"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.a,{href:"https://www.rapidcrc.net",children:"rapidcrc.net"})})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Best Practice Summary:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"\u2705 Use SHA-256 for all new evidence (2025 standard)"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Calculate hash immediately upon acquisition"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Verify hash before and after transfers"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Log all verifications in chain of custody"}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Use multiple algorithms for critical evidence (SHA-256 + SHA-512)"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Never rely on MD5 alone for court evidence"}),"\n",(0,r.jsx)(n.li,{children:"\u274c Never skip hash verification before analysis"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"11-reference-resources",children:"11. Reference Resources"}),"\n",(0,r.jsx)(n.h3,{id:"hash-algorithm-standards--documentation",children:"Hash Algorithm Standards & Documentation"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NIST FIPS 180-4"})," - ",(0,r.jsx)(n.a,{href:"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf",children:"nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Official SHA-2 family specification (SHA-256, SHA-512)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NIST FIPS 202"})," - ",(0,r.jsx)(n.a,{href:"https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf",children:"nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.202.pdf"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"SHA-3 standard specification"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NIST Hash Functions Portal"})," - ",(0,r.jsx)(n.a,{href:"https://csrc.nist.gov/projects/hash-functions",children:"csrc.nist.gov/projects/hash-functions"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cryptographic hash function projects and research"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"RFC 1321 (MD5)"})," - ",(0,r.jsx)(n.a,{href:"https://tools.ietf.org/html/rfc1321",children:"tools.ietf.org/html/rfc1321"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"MD5 specification (historical/deprecated)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"digital-forensics-standards",children:"Digital Forensics Standards"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NIST SP 800-86"})," - ",(0,r.jsx)(n.a,{href:"https://csrc.nist.gov/publications/detail/sp/800-86/final",children:"csrc.nist.gov/publications/detail/sp/800-86/final"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Guide to Integrating Forensic Techniques into Incident Response"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ISO/IEC 27037:2012"})," - ",(0,r.jsx)(n.a,{href:"https://www.iso.org/standard/44381.html",children:"iso.org"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Guidelines for identification, collection, acquisition, and preservation of digital evidence"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scientific Working Group on Digital Evidence (SWGDE)"})," - ",(0,r.jsx)(n.a,{href:"https://www.swgde.org/",children:"swgde.org"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Best practices for digital evidence handling"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"National Institute of Justice (NIJ)"})," - ",(0,r.jsx)(n.a,{href:"https://nij.ojp.gov/topics/forensics/digital-evidence",children:"nij.ojp.gov/topics/forensics/digital-evidence"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Digital evidence best practices"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hash-collision-research",children:"Hash Collision Research"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SHAttered Attack"})," - ",(0,r.jsx)(n.a,{href:"https://shattered.io/",children:"shattered.io"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"First practical SHA-1 collision (2017)"}),"\n",(0,r.jsx)(n.li,{children:"Demonstrates why SHA-1 should be deprecated"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MD5 Collision Vulnerabilities"})," - ",(0,r.jsx)(n.a,{href:"https://eprint.iacr.org/2004/199",children:"eprint.iacr.org/2004/199"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wang et al. MD5 collision research (2004)"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HashClash Project"})," - ",(0,r.jsx)(n.a,{href:"https://github.com/cr-marcstevens/hashclash",children:"github.com/cr-marcstevens/hashclash"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"MD5 and SHA-1 collision tools (academic research)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"forensic-hashing-tools",children:"Forensic Hashing Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"md5deep/hashdeep"})," - ",(0,r.jsx)(n.a,{href:"https://github.com/jessek/hashdeep",children:"github.com/jessek/hashdeep"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recursive hash computation and audit"}),"\n",(0,r.jsx)(n.li,{children:"Cross-platform, forensically sound"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"HashMyFiles (NirSoft)"})," - ",(0,r.jsx)(n.a,{href:"https://www.nirsoft.net/utils/hash_my_files.html",children:"nirsoft.net/utils/hash_my_files.html"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Portable Windows hash calculator"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"GtkHash"})," - ",(0,r.jsx)(n.a,{href:"https://github.com/tristanheaven/gtkhash",children:"github.com/tristanheaven/gtkhash"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Linux GTK-based hash calculator"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"forensic-imaging-tools-with-hash-verification",children:"Forensic Imaging Tools (with Hash Verification)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"FTK Imager"})," - ",(0,r.jsx)(n.a,{href:"https://www.exterro.com/ftk-imager",children:"exterro.com/ftk-imager"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Free forensic imaging tool with automatic hash verification"}),"\n",(0,r.jsx)(n.li,{children:"Supports MD5, SHA1, SHA256"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"dc3dd"})," - ",(0,r.jsx)(n.a,{href:"https://sourceforge.net/projects/dc3dd/",children:"sourceforge.net/projects/dc3dd"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Enhanced dd with hashing on-the-fly"}),"\n",(0,r.jsx)(n.li,{children:"Law enforcement standard"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Guymager"})," - ",(0,r.jsx)(n.a,{href:"https://guymager.sourceforge.io/",children:"guymager.sourceforge.io"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Linux forensic imager with MD5/SHA verification"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ewfacquire (libewf)"})," - ",(0,r.jsx)(n.a,{href:"https://github.com/libyal/libewf",children:"github.com/libyal/libewf"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Expert Witness Format (E01) imaging with hash verification"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"online-hash-lookup-services",children:"Online Hash Lookup Services"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"VirusTotal"})," - ",(0,r.jsx)(n.a,{href:"https://www.virustotal.com/",children:"virustotal.com"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Malware hash lookup (MD5, SHA1, SHA256)"}),"\n",(0,r.jsx)(n.li,{children:"Submit samples or search by hash"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"NSRL (National Software Reference Library)"})," - ",(0,r.jsx)(n.a,{href:"https://www.nsrl.nist.gov/",children:"nsrl.nist.gov"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Reference hash database of known software"}),"\n",(0,r.jsx)(n.li,{children:"Filter out known-good files from forensic analysis"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"MalwareBazaar"})," - ",(0,r.jsx)(n.a,{href:"https://bazaar.abuse.ch/",children:"bazaar.abuse.ch"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Malware sample hash database"}),"\n",(0,r.jsx)(n.li,{children:"Community-driven malware intelligence"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"ThreatFox"})," - ",(0,r.jsx)(n.a,{href:"https://threatfox.abuse.ch/",children:"threatfox.abuse.ch"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"IOC database including file hashes"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"training--certification",children:"Training & Certification"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SANS FOR500: Windows Forensic Analysis"})," - Hash verification techniques"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SANS FOR508: Advanced Incident Response"})," - Evidence integrity practices"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"EnCase Certified Examiner (EnCE)"})," - Includes hash verification methodologies"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"CHFI (Computer Hacking Forensic Investigator)"})," - EC-Council certification covering evidence handling"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"community--forums",children:"Community & Forums"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Forensic Focus Forums"})," - ",(0,r.jsx)(n.a,{href:"https://www.forensicfocus.com/",children:"forensicfocus.com"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Digital forensics community"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Reddit r/computerforensics"})," - ",(0,r.jsx)(n.a,{href:"https://www.reddit.com/r/computerforensics/",children:"reddit.com/r/computerforensics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Forensic practitioners community"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"automation-scripts--tools",children:"Automation Scripts & Tools"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"PowerForensics"})," - ",(0,r.jsx)(n.a,{href:"https://github.com/Invoke-IR/PowerForensics",children:"github.com/Invoke-IR/PowerForensics"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"PowerShell framework for forensic analysis"}),"\n",(0,r.jsx)(n.li,{children:"Includes hash verification modules"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Forensic Toolkit Scripts"})," - Various GitHub repositories","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Automated evidence hashing workflows"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ansible Forensic Playbooks"})," - Automated evidence collection with hash verification"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"related-sops",children:"Related SOPs"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Analysis:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Analysis/sop-malware-analysis",children:"Malware Analysis"})," - Hash-based sample identification and deduplication"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Analysis/sop-cryptography-analysis",children:"Cryptography Analysis"})," - Understanding hash algorithm security"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Analysis/sop-reverse-engineering",children:"Reverse Engineering"})," - File integrity during binary analysis"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Pentesting & Security:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Pentesting/sop-forensics-investigation",children:"Forensics Investigation"})," - Evidence acquisition and chain of custody"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"../../Security/Pentesting/sop-detection-evasion-testing",children:"Detection Evasion Testing"})," - Hash-based malware detection bypass techniques"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>a});var s=i(96540);const r={},t=s.createContext(r);function l(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);