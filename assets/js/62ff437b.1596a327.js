"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[7691],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var r=s(96540);const i={},t=r.createContext(i);function l(e){const n=r.useContext(t);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(t.Provider,{value:n},e.children)}},40414:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Security/Analysis/sop-cryptography-analysis","title":"Cryptography Analysis SOP","description":"Crypto security assessment: cipher analysis, encryption audits, key management review & cryptographic vulnerability testing for secure implementations.","source":"@site/intel-codex/Security/Analysis/sop-cryptography-analysis.md","sourceDirName":"Security/Analysis","slug":"/Security/Analysis/sop-cryptography-analysis","permalink":"/intel-codex/Security/Analysis/sop-cryptography-analysis","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/intel-codex/tree/main/intel-codex/Security/Analysis/sop-cryptography-analysis.md","tags":[],"version":"current","lastUpdatedAt":null,"frontMatter":{"title":"Cryptography Analysis SOP","description":"Crypto security assessment: cipher analysis, encryption audits, key management review & cryptographic vulnerability testing for secure implementations."},"sidebar":"intelCodexSidebar","previous":{"title":"AI/ML Vulnerability & Evasion Testing SOP","permalink":"/intel-codex/Security/Analysis/sop-ai-vulnerability-evasion"},"next":{"title":"Digital Forensics Investigation SOP","permalink":"/intel-codex/Security/Analysis/sop-forensics-investigation"}}');var i=s(74848),t=s(28453);const l={title:"Cryptography Analysis SOP",description:"Crypto security assessment: cipher analysis, encryption audits, key management review & cryptographic vulnerability testing for secure implementations."},c="Cryptography Analysis SOP",a={},d=[{value:"Table of Contents",id:"table-of-contents",level:2},{value:"Overview",id:"overview",level:2},{value:"Quick Reference",id:"quick-reference",level:2},{value:"Algorithm Security Status",id:"algorithm-security-status",level:3},{value:"Essential Commands",id:"essential-commands",level:3},{value:"Mathematical Foundations",id:"mathematical-foundations",level:2},{value:"Why Math Matters in Crypto",id:"why-math-matters-in-crypto",level:3},{value:"Modular Arithmetic",id:"modular-arithmetic",level:3},{value:"Prime Numbers &amp; Factorization",id:"prime-numbers--factorization",level:3},{value:"Common Encoding Schemes",id:"common-encoding-schemes",level:3},{value:"Base64",id:"base64",level:4},{value:"Hexadecimal",id:"hexadecimal",level:4},{value:"Symmetric Cryptography",id:"symmetric-cryptography",level:2},{value:"AES (Advanced Encryption Standard)",id:"aes-advanced-encryption-standard",level:3},{value:"AES-GCM (Recommended)",id:"aes-gcm-recommended",level:4},{value:"ECB Mode Vulnerability",id:"ecb-mode-vulnerability",level:4},{value:"Padding Oracle Attack",id:"padding-oracle-attack",level:4},{value:"Asymmetric Cryptography",id:"asymmetric-cryptography",level:2},{value:"RSA (Rivest-Shamir-Adleman)",id:"rsa-rivest-shamir-adleman",level:3},{value:"Generate RSA Keys",id:"generate-rsa-keys",level:4},{value:"RSA Attacks",id:"rsa-attacks",level:3},{value:"1. Small Exponent Attack (e=3)",id:"1-small-exponent-attack-e3",level:4},{value:"2. Common Modulus Attack",id:"2-common-modulus-attack",level:4},{value:"3. Fermat&#39;s Factorization (Close Primes)",id:"3-fermats-factorization-close-primes",level:4},{value:"4. Automated RSA Attacks",id:"4-automated-rsa-attacks",level:4},{value:"Hash Functions &amp; Authentication",id:"hash-functions--authentication",level:2},{value:"Hash Function Basics",id:"hash-function-basics",level:3},{value:"Common Hash Algorithms",id:"common-hash-algorithms",level:3},{value:"HMAC (Message Authentication)",id:"hmac-message-authentication",level:3},{value:"Hash Length Extension Attack",id:"hash-length-extension-attack",level:3},{value:"Password Cracking",id:"password-cracking",level:2},{value:"Password Hashing",id:"password-hashing",level:3},{value:"Hash Identification",id:"hash-identification",level:3},{value:"Hashcat (GPU Password Cracking)",id:"hashcat-gpu-password-cracking",level:3},{value:"SSL/TLS &amp; PKI",id:"ssltls--pki",level:2},{value:"Certificate Inspection",id:"certificate-inspection",level:3},{value:"SSL/TLS Testing",id:"ssltls-testing",level:3},{value:"Common SSL/TLS Vulnerabilities",id:"common-ssltls-vulnerabilities",level:3},{value:"Common Attacks",id:"common-attacks",level:2},{value:"Classical Ciphers",id:"classical-ciphers",level:3},{value:"Caesar Cipher (ROT13)",id:"caesar-cipher-rot13",level:4},{value:"XOR Cipher",id:"xor-cipher",level:3},{value:"Single-Byte XOR",id:"single-byte-xor",level:4},{value:"Repeating-Key XOR",id:"repeating-key-xor",level:4},{value:"CTF Crypto Challenges",id:"ctf-crypto-challenges",level:2},{value:"Common Patterns",id:"common-patterns",level:3},{value:"1. RSA Challenges",id:"1-rsa-challenges",level:4},{value:"2. XOR Challenges",id:"2-xor-challenges",level:4},{value:"3. Base64 Layers",id:"3-base64-layers",level:4},{value:"4. AES ECB Oracle",id:"4-aes-ecb-oracle",level:4},{value:"Useful Tools &amp; Websites",id:"useful-tools--websites",level:3},{value:"Tools Reference",id:"tools-reference",level:2},{value:"Essential Tools",id:"essential-tools",level:3},{value:"Python Libraries",id:"python-libraries",level:3},{value:"Specialized Tools",id:"specialized-tools",level:3},{value:"Reference Resources",id:"reference-resources",level:2},{value:"Comprehensive Knowledge Bases",id:"comprehensive-knowledge-bases",level:3},{value:"Attack Techniques &amp; Exploits",id:"attack-techniques--exploits",level:3},{value:"RSA Specific Resources",id:"rsa-specific-resources",level:3},{value:"Password Cracking Resources",id:"password-cracking-resources",level:3},{value:"SSL/TLS Testing Resources",id:"ssltls-testing-resources",level:3},{value:"Online Tools",id:"online-tools",level:3},{value:"Cheat Sheets &amp; Quick References",id:"cheat-sheets--quick-references",level:3},{value:"Vulnerability Databases",id:"vulnerability-databases",level:3},{value:"Research &amp; Academic Papers",id:"research--academic-papers",level:3},{value:"CTF &amp; Practice Platforms",id:"ctf--practice-platforms",level:3},{value:"Defensive Resources",id:"defensive-resources",level:3},{value:"Related SOPs",id:"related-sops",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.admonition,{type:"danger",children:[(0,i.jsxs)(n.mdxAdmonitionTitle,{children:["Synced from an ",(0,i.jsx)(n.strong,{children:"Obsidian vault"})]}),(0,i.jsxs)(n.p,{children:["For graph and advanced features, download the ",(0,i.jsx)(n.strong,{children:"full"})," ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"https://github.com/gl0bal01/intel-codex",children:"Intel Codex Vault"})})," and open it in ",(0,i.jsx)(n.strong,{children:"Obsidian"}),"."]})]}),"\n",(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"cryptography-analysis-sop",children:"Cryptography Analysis SOP"})}),"\n",(0,i.jsx)(n.h2,{id:"table-of-contents",children:"Table of Contents"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#overview",children:"Overview"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#quick-reference",children:"Quick Reference"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#mathematical-foundations",children:"Mathematical Foundations"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#symmetric-cryptography",children:"Symmetric Cryptography"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#asymmetric-cryptography",children:"Asymmetric Cryptography"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#hash-functions--authentication",children:"Hash Functions & Authentication"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#password-cracking",children:"Password Cracking"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ssltls--pki",children:"SSL/TLS & PKI"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#common-attacks",children:"Common Attacks"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#ctf-crypto-challenges",children:"CTF Crypto Challenges"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"#tools-reference",children:"Tools Reference"})}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"})," Practical guide for cryptographic analysis, vulnerability assessment, and security research focused on real-world applications."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Scope:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cryptographic algorithm analysis and exploitation"}),"\n",(0,i.jsx)(n.li,{children:"Password hash cracking techniques"}),"\n",(0,i.jsx)(n.li,{children:"SSL/TLS security assessment"}),"\n",(0,i.jsx)(n.li,{children:"RSA and symmetric crypto attacks"}),"\n",(0,i.jsx)(n.li,{children:"CTF cryptography challenges"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Prerequisites:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Basic programming (Python recommended)"}),"\n",(0,i.jsx)(n.li,{children:"Command-line proficiency"}),"\n",(0,i.jsx)(n.li,{children:"Understanding of hexadecimal and binary"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Key Philosophy:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Focus on practical attacks"})," over theoretical cryptography"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hands-on examples"})," for every concept"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Real-world tools"})," used in security research"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"quick-reference",children:"Quick Reference"}),"\n",(0,i.jsx)(n.h3,{id:"algorithm-security-status",children:"Algorithm Security Status"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Type"}),(0,i.jsx)(n.th,{children:"Algorithm"}),(0,i.jsx)(n.th,{children:"Key Size"}),(0,i.jsx)(n.th,{children:"Status"}),(0,i.jsx)(n.th,{children:"Notes"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Symmetric"})}),(0,i.jsx)(n.td,{children:"AES"}),(0,i.jsx)(n.td,{children:"128/192/256-bit"}),(0,i.jsx)(n.td,{children:"\u2705 Secure"}),(0,i.jsx)(n.td,{children:"Industry standard"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"ChaCha20"}),(0,i.jsx)(n.td,{children:"256-bit"}),(0,i.jsx)(n.td,{children:"\u2705 Secure"}),(0,i.jsx)(n.td,{children:"Modern alternative"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"3DES"}),(0,i.jsx)(n.td,{children:"168-bit"}),(0,i.jsx)(n.td,{children:"\u26a0\ufe0f Deprecated"}),(0,i.jsx)(n.td,{children:"Use AES instead"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"DES/RC4"}),(0,i.jsx)(n.td,{children:"56-bit/Variable"}),(0,i.jsx)(n.td,{children:"\u274c Broken"}),(0,i.jsx)(n.td,{children:"Never use"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Asymmetric"})}),(0,i.jsx)(n.td,{children:"RSA"}),(0,i.jsx)(n.td,{children:"\u22652048-bit"}),(0,i.jsx)(n.td,{children:"\u2705 Secure"}),(0,i.jsx)(n.td,{children:"4096-bit for high security"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"RSA"}),(0,i.jsx)(n.td,{children:"<2048-bit"}),(0,i.jsx)(n.td,{children:"\u274c Weak"}),(0,i.jsx)(n.td,{children:"Easily factored"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"ECC"}),(0,i.jsx)(n.td,{children:"256-bit"}),(0,i.jsx)(n.td,{children:"\u2705 Secure"}),(0,i.jsx)(n.td,{children:"Smaller keys, same security"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Hash"})}),(0,i.jsx)(n.td,{children:"SHA-256/512"}),(0,i.jsx)(n.td,{children:"256/512-bit"}),(0,i.jsx)(n.td,{children:"\u2705 Secure"}),(0,i.jsx)(n.td,{children:"General purpose"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"SHA-1"}),(0,i.jsx)(n.td,{children:"160-bit"}),(0,i.jsx)(n.td,{children:"\u274c Broken"}),(0,i.jsx)(n.td,{children:"Collision attacks exist"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"MD5"}),(0,i.jsx)(n.td,{children:"128-bit"}),(0,i.jsx)(n.td,{children:"\u274c Broken"}),(0,i.jsx)(n.td,{children:"Never use for security"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Password"})}),(0,i.jsx)(n.td,{children:"Argon2"}),(0,i.jsx)(n.td,{children:"Variable"}),(0,i.jsx)(n.td,{children:"\u2705 Best"}),(0,i.jsx)(n.td,{children:"PHC winner 2015"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"bcrypt"}),(0,i.jsx)(n.td,{children:"Variable"}),(0,i.jsx)(n.td,{children:"\u2705 Secure"}),(0,i.jsx)(n.td,{children:"Industry standard"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{}),(0,i.jsx)(n.td,{children:"PBKDF2"}),(0,i.jsx)(n.td,{children:"Variable"}),(0,i.jsx)(n.td,{children:"\u2705 Acceptable"}),(0,i.jsx)(n.td,{children:"Minimum 100k iterations"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"essential-commands",children:"Essential Commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Hash identification\nhashid \'$2y$10$abc123...\'\necho "5d41402abc4b2a76b9719d911017c592" | hashid\n\n# Password cracking\nhashcat -m 0 -a 0 hashes.txt rockyou.txt           # MD5 dictionary\nhashcat -m 1400 -a 0 hashes.txt rockyou.txt        # SHA-256\nhashcat -m 3200 -a 0 hashes.txt rockyou.txt        # bcrypt\n\n# RSA analysis/attacks\npython3 RsaCtfTool.py --publickey public.pem --private\nopenssl rsa -in private.pem -text -noout\n\n# SSL/TLS testing\ntestssl.sh --full https://target.com\nnmap --script ssl-enum-ciphers -p 443 target.com\n\n# Certificate inspection\nopenssl x509 -in cert.pem -text -noout\nopenssl s_client -connect target.com:443 -showcerts\n\n# Encoding/Decoding\necho "SGVsbG8=" | base64 -d                        # Base64 decode\necho "48656c6c6f" | xxd -r -p                      # Hex to ASCII\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"mathematical-foundations",children:"Mathematical Foundations"}),"\n",(0,i.jsx)(n.h3,{id:"why-math-matters-in-crypto",children:"Why Math Matters in Crypto"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"}),' Modern cryptography relies on mathematical "hard problems" - operations that are easy to compute but hard to reverse without a secret key.']}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Core Concepts You Need:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Modular arithmetic"})," \u2192 RSA encryption/decryption"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Prime numbers"})," \u2192 RSA key generation"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Greatest Common Divisor (GCD)"})," \u2192 Finding shared prime factors between keys"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Real-World Impact:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Weak math = broken crypto (Debian OpenSSL bug 2008, ROCA 2017)"}),"\n",(0,i.jsx)(n.li,{children:"Understanding math enables attacks (factoring RSA, discrete log problems)"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"modular-arithmetic",children:"Modular Arithmetic"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"What it is:"}),' "Clock arithmetic" - numbers wrap around after reaching a modulus value.']}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Example:"})," ",(0,i.jsx)(n.code,{children:"17 mod 5 = 2"})," (17 \xf7 5 = 3 remainder 2)"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why it's used in crypto:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Operations are reversible with the correct key (modular inverse)"}),"\n",(0,i.jsx)(n.li,{children:"Results stay bounded (0 to n-1)"}),"\n",(0,i.jsxs)(n.li,{children:["Foundation of RSA: ",(0,i.jsx)(n.code,{children:"c = m^e mod n"})," (encryption), ",(0,i.jsx)(n.code,{children:"m = c^d mod n"})," (decryption)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Python Examples:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Basic modular operations\nprint((17 + 8) % 5)      # 0 (25 mod 5)\nprint((7 * 9) % 5)       # 3 (63 mod 5)\nprint(pow(2, 100, 17))   # 1 (2^100 mod 17, computed efficiently)\n\n# Modular inverse (required for RSA)\ndef mod_inverse(a, m):\n    """Find x such that (a * x) mod m = 1"""\n    def extended_gcd(a, b):\n        if a == 0:\n            return b, 0, 1\n        gcd, x1, y1 = extended_gcd(b % a, a)\n        x = y1 - (b // a) * x1\n        y = x1\n        return gcd, x, y\n\n    gcd, x, _ = extended_gcd(a, m)\n    if gcd != 1:\n        return None  # Inverse doesn\'t exist\n    return (x % m + m) % m\n\n# Example: 3 * 4 \u2261 1 (mod 11)\nprint(mod_inverse(3, 11))  # Output: 4\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"prime-numbers--factorization",children:"Prime Numbers & Factorization"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"What they are:"})," Numbers divisible only by 1 and themselves (2, 3, 5, 7, 11...)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why they're critical:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RSA security"})," depends on difficulty of factoring n = p \xd7 q (two large primes)"]}),"\n",(0,i.jsx)(n.li,{children:"Small or predictable primes = broken RSA"}),"\n",(0,i.jsx)(n.li,{children:"GCD attacks reveal shared factors between multiple RSA keys"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Primality Testing:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import random\n\ndef is_prime_miller_rabin(n, k=5):\n    """Miller-Rabin primality test (probabilistic)"""\n    if n < 2:\n        return False\n    if n == 2 or n == 3:\n        return True\n    if n % 2 == 0:\n        return False\n\n    # Write n-1 as 2^r * d\n    r, d = 0, n - 1\n    while d % 2 == 0:\n        r += 1\n        d //= 2\n\n    # Witness loop\n    for _ in range(k):\n        a = random.randint(2, n - 2)\n        x = pow(a, d, n)\n\n        if x == 1 or x == n - 1:\n            continue\n\n        for _ in range(r - 1):\n            x = pow(x, 2, n)\n            if x == n - 1:\n                break\n        else:\n            return False\n\n    return True\n\nprint(is_prime_miller_rabin(17))  # True\nprint(is_prime_miller_rabin(18))  # False\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"GCD Attack (Finding Shared Factors):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import math\n\n# Real-world scenario: Two RSA moduli share a prime factor\nn1 = 143  # 11 \xd7 13\nn2 = 221  # 13 \xd7 17\n\n# GCD reveals shared prime\ngcd = math.gcd(n1, n2)\nprint(f"Shared factor: {gcd}")  # 13\n\n# Both keys are now broken!\np1 = gcd\nq1 = n1 // p1\nprint(f"n1 = {p1} \xd7 {q1}")  # 13 \xd7 11\n\np2 = gcd\nq2 = n2 // p2\nprint(f"n2 = {p2} \xd7 {q2}")  # 13 \xd7 17\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Real Attack (2012):"})," Researchers collected millions of RSA public keys and computed GCDs between pairs, finding thousands that shared prime factors!"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"common-encoding-schemes",children:"Common Encoding Schemes"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"IMPORTANT:"})," Encoding \u2260 Encryption! Encoding is reversible by anyone - no security!"]}),"\n",(0,i.jsx)(n.h4,{id:"base64",children:"Base64"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"What it is:"})," Encodes binary data into ASCII text (64 printable characters: A-Z, a-z, 0-9, +, /)."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"When used:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Email attachments (SMTP requires text)"}),"\n",(0,i.jsx)(n.li,{children:"JSON/XML with binary data"}),"\n",(0,i.jsxs)(n.li,{children:["Embedded images in HTML: ",(0,i.jsx)(n.code,{children:"data:image/png;base64,..."})]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"How to recognize:"})," Ends with ",(0,i.jsx)(n.code,{children:"="})," or ",(0,i.jsx)(n.code,{children:"=="})," (padding), only alphanumeric + ",(0,i.jsx)(n.code,{children:"/"})," + ",(0,i.jsx)(n.code,{children:"+"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import base64\n\n# Encode\nencoded = base64.b64encode(b\"Hello World\")\nprint(encoded)  # b'SGVsbG8gV29ybGQ='\n\n# Decode\ndecoded = base64.b64decode(encoded)\nprint(decoded)  # b'Hello World'\n"})}),"\n",(0,i.jsx)(n.h4,{id:"hexadecimal",children:"Hexadecimal"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"What it is:"})," Represents binary using 16 symbols (0-9, A-F). 2 hex digits = 1 byte."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"When used:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hash outputs (MD5, SHA-256)"}),"\n",(0,i.jsx)(n.li,{children:"Memory addresses (0x401000)"}),"\n",(0,i.jsx)(n.li,{children:"Raw bytes in packet captures"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# String to hex\ntext = "Hello"\nhex_string = text.encode().hex()\nprint(hex_string)  # 48656c6c6f\n\n# Hex to string\noriginal = bytes.fromhex(hex_string).decode()\nprint(original)  # Hello\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"symmetric-cryptography",children:"Symmetric Cryptography"}),"\n",(0,i.jsx)(n.h3,{id:"aes-advanced-encryption-standard",children:"AES (Advanced Encryption Standard)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Status:"})," \u2705 Secure (when used correctly)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Key Sizes:"})," 128-bit (secure), 192-bit, 256-bit (high security)"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Modes of Operation:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"ECB"})," (Electronic Codebook) - \u274c ",(0,i.jsx)(n.strong,{children:"Never use"})," (deterministic, patterns visible)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CBC"})," (Cipher Block Chaining) - \u26a0\ufe0f Requires random IV, vulnerable to padding oracle"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CTR"})," (Counter Mode) - \u2705 Good (parallelizable, no padding)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GCM"})," (Galois/Counter Mode) - \u2705 ",(0,i.jsx)(n.strong,{children:"Best choice"})," (authenticated encryption)"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"aes-gcm-recommended",children:"AES-GCM (Recommended)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from Crypto.Cipher import AES\nfrom Crypto.Random import get_random_bytes\n\n# Encryption\nkey = get_random_bytes(32)      # 256-bit key\nnonce = get_random_bytes(12)    # 96-bit nonce\n\ncipher = AES.new(key, AES.MODE_GCM, nonce=nonce)\nplaintext = b"Secret message"\nciphertext, tag = cipher.encrypt_and_digest(plaintext)\n\nprint(f"Key: {key.hex()}")\nprint(f"Nonce: {nonce.hex()}")\nprint(f"Ciphertext: {ciphertext.hex()}")\nprint(f"Tag: {tag.hex()}")\n\n# Decryption\ncipher = AES.new(key, AES.MODE_GCM, nonce=nonce)\ndecrypted = cipher.decrypt_and_verify(ciphertext, tag)\nprint(f"Decrypted: {decrypted}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"ecb-mode-vulnerability",children:"ECB Mode Vulnerability"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Problem:"})," Identical plaintext blocks \u2192 identical ciphertext blocks (patterns leak information)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Famous Example:"})," ECB-encrypted Tux penguin image shows visible outline"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Detection:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Look for repeating blocks in ciphertext\nxxd ciphertext.bin | sort | uniq -d\n# If duplicates found \u2192 likely ECB mode\n"})}),"\n",(0,i.jsx)(n.h4,{id:"padding-oracle-attack",children:"Padding Oracle Attack"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Vulnerability:"})," Application leaks whether padding is valid/invalid \u2192 decrypt ciphertext byte-by-byte"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Vulnerable Code:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from Crypto.Cipher import AES\nfrom Crypto.Util.Padding import unpad\n\ndef decrypt_and_check(ciphertext, iv, key):\n    cipher = AES.new(key, AES.MODE_CBC, iv)\n    try:\n        plaintext = unpad(cipher.decrypt(ciphertext), 16)\n        return True  # Valid padding\n    except ValueError:\n        return False  # Invalid padding \u2190 INFORMATION LEAK!\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Tool:"})," PadBuster automates this attack"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'padbuster http://target.com/decrypt.php "ciphertext_hex" "iv_hex" 16 -encoding 0\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"asymmetric-cryptography",children:"Asymmetric Cryptography"}),"\n",(0,i.jsx)(n.h3,{id:"rsa-rivest-shamir-adleman",children:"RSA (Rivest-Shamir-Adleman)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"How RSA Works:"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Choose two large primes: p, q"}),"\n",(0,i.jsx)(n.li,{children:"Compute modulus: n = p \xd7 q"}),"\n",(0,i.jsx)(n.li,{children:"Compute totient: \u03c6(n) = (p-1)(q-1)"}),"\n",(0,i.jsx)(n.li,{children:"Choose public exponent: e (commonly 65537)"}),"\n",(0,i.jsx)(n.li,{children:"Compute private exponent: d = e^(-1) mod \u03c6(n)"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Public key:"})," (n, e)\n",(0,i.jsx)(n.strong,{children:"Private key:"})," (n, d)"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Encryption:"})," c = m^e mod n\n",(0,i.jsx)(n.strong,{children:"Decryption:"})," m = c^d mod n"]}),"\n",(0,i.jsx)(n.h4,{id:"generate-rsa-keys",children:"Generate RSA Keys"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# OpenSSL\nopenssl genrsa -out private.pem 4096\nopenssl rsa -in private.pem -pubout -out public.pem\nopenssl rsa -in private.pem -text -noout  # View key components\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from Crypto.PublicKey import RSA\n\n# Generate 2048-bit key\nkey = RSA.generate(2048)\n\n# Export keys\nwith open('private.pem', 'wb') as f:\n    f.write(key.export_key())\n\nwith open('public.pem', 'wb') as f:\n    f.write(key.publickey().export_key())\n\nprint(f\"n: {key.n}\")\nprint(f\"e: {key.e}\")\nprint(f\"d: {key.d}\")\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"rsa-attacks",children:"RSA Attacks"}),"\n",(0,i.jsx)(n.h4,{id:"1-small-exponent-attack-e3",children:"1. Small Exponent Attack (e=3)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Vulnerability:"})," If e=3 and m^3 < n, ciphertext c = m^3 (no modular reduction) \u2192 just compute cube root!"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import gmpy2\n\ndef small_e_attack(c, e=3):\n    """If m^e < n, then c = m^e \u2192 m = e-th root of c"""\n    m, exact = gmpy2.iroot(c, e)\n    if exact:\n        return int(m)\n    return None\n\n# Example\nc = 1030301  # Small ciphertext\nm = small_e_attack(c, e=3)\nif m:\n    print(f"Plaintext: {m}")\n    print(f"Text: {bytes.fromhex(hex(m)[2:])}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"2-common-modulus-attack",children:"2. Common Modulus Attack"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Vulnerability:"})," Same message encrypted with same n but different e values \u2192 recover plaintext without private key!"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def common_modulus_attack(c1, c2, e1, e2, n):\n    """\n    If m^e1 mod n = c1 and m^e2 mod n = c2\n    Can recover m using Extended Euclidean Algorithm\n    """\n    from math import gcd\n\n    def extended_gcd(a, b):\n        if a == 0:\n            return b, 0, 1\n        gcd, x1, y1 = extended_gcd(b % a, a)\n        x = y1 - (b // a) * x1\n        y = x1\n        return gcd, x, y\n\n    gcd_val, a, b = extended_gcd(e1, e2)\n\n    if gcd_val != 1:\n        return None\n\n    # m = (c1^a * c2^b) mod n\n    if a < 0:\n        c1 = pow(c1, -1, n)\n        a = -a\n    if b < 0:\n        c2 = pow(c2, -1, n)\n        b = -b\n\n    m = (pow(c1, a, n) * pow(c2, b, n)) % n\n    return m\n'})}),"\n",(0,i.jsx)(n.h4,{id:"3-fermats-factorization-close-primes",children:"3. Fermat's Factorization (Close Primes)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Vulnerability:"})," If p and q are close in value, can factor n quickly"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import gmpy2\n\ndef fermat_factor(n):\n    """Factor n if p and q are close"""\n    a = gmpy2.isqrt(n) + 1\n\n    for _ in range(100000):\n        b_squared = a * a - n\n        b = gmpy2.isqrt(b_squared)\n\n        if b * b == b_squared:\n            p = a + b\n            q = a - b\n            return int(p), int(q)\n\n        a += 1\n\n    return None, None\n\n# Example with close primes\nn = 8051  # 89 \xd7 91-1 = 89 \xd7 90 (close primes)\np, q = fermat_factor(n)\nif p and q:\n    print(f"p = {p}, q = {q}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"4-automated-rsa-attacks",children:"4. Automated RSA Attacks"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"RsaCtfTool"})," - Automates 20+ RSA attacks"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Install\ngit clone https://github.com/RsaCtfTool/RsaCtfTool.git\ncd RsaCtfTool\npip3 install -r requirements.txt\n\n# Recover private key from public key\npython3 RsaCtfTool.py --publickey public.pem --private\n\n# Decrypt ciphertext\npython3 RsaCtfTool.py --publickey public.pem --uncipherfile encrypted.bin\n\n# Try all attacks\npython3 RsaCtfTool.py --publickey public.pem --private --attack all\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"hash-functions--authentication",children:"Hash Functions & Authentication"}),"\n",(0,i.jsx)(n.h3,{id:"hash-function-basics",children:"Hash Function Basics"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"})," One-way function that produces fixed-size output from variable input"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Properties:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Deterministic:"})," Same input always produces same output"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fast to compute:"})," Hashing is quick"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Avalanche effect:"})," Small input change = completely different hash"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"One-way:"})," Can't reverse hash to get original input"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Collision-resistant:"})," Hard to find two inputs with same hash"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"common-hash-algorithms",children:"Common Hash Algorithms"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import hashlib\n\nmessage = b"Hello World"\n\n# MD5 (128-bit) - \u274c BROKEN\nmd5 = hashlib.md5(message).hexdigest()\nprint(f"MD5: {md5}")\n\n# SHA-1 (160-bit) - \u274c BROKEN (collisions exist)\nsha1 = hashlib.sha1(message).hexdigest()\nprint(f"SHA-1: {sha1}")\n\n# SHA-256 (256-bit) - \u2705 SECURE\nsha256 = hashlib.sha256(message).hexdigest()\nprint(f"SHA-256: {sha256}")\n\n# SHA-512 (512-bit) - \u2705 SECURE\nsha512 = hashlib.sha512(message).hexdigest()\nprint(f"SHA-512: {sha512}")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"hmac-message-authentication",children:"HMAC (Message Authentication)"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Purpose:"})," Verify message integrity and authenticity using secret key"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import hmac\nimport hashlib\n\nkey = b"secret_key"\nmessage = b"Important message"\n\n# Generate HMAC\nmac = hmac.new(key, message, hashlib.sha256).hexdigest()\nprint(f"HMAC: {mac}")\n\n# Verify HMAC (constant-time comparison prevents timing attacks)\ndef verify_hmac(key, message, provided_mac):\n    expected_mac = hmac.new(key, message, hashlib.sha256).hexdigest()\n    return hmac.compare_digest(expected_mac, provided_mac)  # \u2705 Secure\n\n# \u274c INSECURE: if expected_mac == provided_mac  (timing attack vulnerable)\n'})}),"\n",(0,i.jsx)(n.h3,{id:"hash-length-extension-attack",children:"Hash Length Extension Attack"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Vulnerability:"})," Hash functions like SHA-256 vulnerable when used as ",(0,i.jsx)(n.code,{children:"H(secret || data)"})," instead of HMAC"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Vulnerable Code:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import hashlib\n\nsecret = b"secret_key"\ndata = b"user=admin"\n\n# \u274c VULNERABLE\nhash_vulnerable = hashlib.sha256(secret + data).hexdigest()\n\n# \u2705 SECURE: Use HMAC instead\nhash_secure = hmac.new(secret, data, hashlib.sha256).hexdigest()\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Attack Tool:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# HashPump - Exploits length extension\ngit clone https://github.com/bwall/HashPump.git\ncd HashPump && make\n\n# Extend hash without knowing secret\n./hashpump -s 'original_hash' \\\n           -d 'original_data' \\\n           -a '&admin=true' \\\n           -k 10  # Secret length guess\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"password-cracking",children:"Password Cracking"}),"\n",(0,i.jsx)(n.h3,{id:"password-hashing",children:"Password Hashing"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Wrong Way (Fast Hashing):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import hashlib\n\n# \u274c MD5/SHA-256 too fast - vulnerable to brute force\npassword = "password123"\nbad_hash = hashlib.sha256(password.encode()).hexdigest()\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Right Way (Slow Hashing with Salt):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import bcrypt\n\n# \u2705 bcrypt - Slow hashing resistant to brute force\npassword = b"password123"\nsalt = bcrypt.gensalt(rounds=12)  # Work factor (higher = slower)\nhashed = bcrypt.hashpw(password, salt)\n\nprint(f"Hash: {hashed}")\n\n# Verify\nif bcrypt.checkpw(password, hashed):\n    print("Password correct")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"hash-identification",children:"Hash Identification"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# hashid tool\nhashid '$2y$10$abc...'\n# Output: bcrypt\n\nhashid '5d41402abc4b2a76b9719d911017c592'\n# Output: MD5\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Manual Identification:"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Hash Example"}),(0,i.jsx)(n.th,{children:"Algorithm"}),(0,i.jsx)(n.th,{children:"Pattern"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"5d41402abc4b2a76b9719d911017c592"}),(0,i.jsx)(n.td,{children:"MD5"}),(0,i.jsx)(n.td,{children:"32 hex chars"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"356a192b7913b04c54574d18c28d46e6395428ab"}),(0,i.jsx)(n.td,{children:"SHA-1"}),(0,i.jsx)(n.td,{children:"40 hex chars"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"a591a6d40bf420404a011733cfb7b190d62c65bf0bcda32b57b277d9ad9f146e"}),(0,i.jsx)(n.td,{children:"SHA-256"}),(0,i.jsx)(n.td,{children:"64 hex chars"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"$1$abc$xyz"}),(0,i.jsx)(n.td,{children:"MD5 (Unix)"}),(0,i.jsx)(n.td,{children:"Starts with $1$"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"$2a$10$... or $2y$10$..."}),(0,i.jsx)(n.td,{children:"bcrypt"}),(0,i.jsx)(n.td,{children:"Starts with $2a$ or $2y$"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"$6$abc$xyz"}),(0,i.jsx)(n.td,{children:"SHA-512 (Unix)"}),(0,i.jsx)(n.td,{children:"Starts with $6$"})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"hashcat-gpu-password-cracking",children:"Hashcat (GPU Password Cracking)"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Common Hash Modes:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"0"})," = MD5"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"100"})," = SHA1"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1400"})," = SHA-256"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"3200"})," = bcrypt"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"1800"})," = sha512crypt (Unix)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Dictionary Attack:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# MD5\nhashcat -m 0 -a 0 hashes.txt /usr/share/wordlists/rockyou.txt\n\n# SHA-256\nhashcat -m 1400 -a 0 hashes.txt /usr/share/wordlists/rockyou.txt\n\n# bcrypt (slow)\nhashcat -m 3200 -a 0 hashes.txt /usr/share/wordlists/rockyou.txt\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Rule-Based Attack:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Apply rules (password \u2192 Password1, p@ssword, etc.)\nhashcat -m 0 -a 0 hashes.txt rockyou.txt -r /usr/share/hashcat/rules/best64.rule\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Mask Attack (Pattern Brute Force):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'# Crack 8-digit PIN\nhashcat -m 0 -a 3 hashes.txt ?d?d?d?d?d?d?d?d\n\n# Mask charsets:\n# ?l = lowercase (a-z)\n# ?u = uppercase (A-Z)\n# ?d = digits (0-9)\n# ?s = special chars\n# ?a = all (?l?u?d?s)\n\n# Pattern: "password" + 2 digits\nhashcat -m 0 -a 3 hashes.txt password?d?d\n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Show Cracked:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"hashcat -m 0 hashes.txt --show\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"ssltls--pki",children:"SSL/TLS & PKI"}),"\n",(0,i.jsx)(n.h3,{id:"certificate-inspection",children:"Certificate Inspection"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# View certificate details\nopenssl x509 -in cert.pem -text -noout\n\n# Extract from server\nopenssl s_client -connect target.com:443 -showcerts </dev/null 2>/dev/null | \\\n  openssl x509 -outform PEM > cert.pem\n\n# Check expiration\nopenssl x509 -in cert.pem -noout -dates\n\n# View subject/issuer\nopenssl x509 -in cert.pem -noout -subject\nopenssl x509 -in cert.pem -noout -issuer\n"})}),"\n",(0,i.jsx)(n.h3,{id:"ssltls-testing",children:"SSL/TLS Testing"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"testssl.sh (Comprehensive Scanner):"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Clone\ngit clone https://github.com/drwetter/testssl.sh.git\n\n# Full scan\n./testssl.sh --full https://target.com\n\n# Specific vulnerabilities\n./testssl.sh --heartbleed https://target.com\n./testssl.sh --poodle https://target.com\n./testssl.sh --robot https://target.com\n\n# Check weak ciphers\n./testssl.sh --cipher-per-proto https://target.com\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Nmap SSL Scripts:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Enumerate ciphers\nnmap --script ssl-enum-ciphers -p 443 target.com\n\n# Check Heartbleed\nnmap --script ssl-heartbleed -p 443 target.com\n\n# Check POODLE\nnmap --script ssl-poodle -p 443 target.com\n"})}),"\n",(0,i.jsx)(n.h3,{id:"common-ssltls-vulnerabilities",children:"Common SSL/TLS Vulnerabilities"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Vulnerability"}),(0,i.jsx)(n.th,{children:"CVE"}),(0,i.jsx)(n.th,{children:"Impact"}),(0,i.jsx)(n.th,{children:"Test"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Heartbleed"}),(0,i.jsx)(n.td,{children:"CVE-2014-0160"}),(0,i.jsx)(n.td,{children:"Memory leak"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"nmap --script ssl-heartbleed"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"POODLE"}),(0,i.jsx)(n.td,{children:"CVE-2014-3566"}),(0,i.jsx)(n.td,{children:"SSLv3 padding oracle"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"testssl.sh --poodle"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"BEAST"}),(0,i.jsx)(n.td,{children:"CVE-2011-3389"}),(0,i.jsx)(n.td,{children:"CBC vulnerability TLS 1.0"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"testssl.sh --beast"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"DROWN"}),(0,i.jsx)(n.td,{children:"CVE-2016-0800"}),(0,i.jsx)(n.td,{children:"SSLv2 cross-protocol attack"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"testssl.sh --drown"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"ROBOT"}),(0,i.jsx)(n.td,{children:"-"}),(0,i.jsx)(n.td,{children:"RSA PKCS#1 oracle"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"testssl.sh --robot"})})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"common-attacks",children:"Common Attacks"}),"\n",(0,i.jsx)(n.h3,{id:"classical-ciphers",children:"Classical Ciphers"}),"\n",(0,i.jsx)(n.h4,{id:"caesar-cipher-rot13",children:"Caesar Cipher (ROT13)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def caesar_decrypt(ciphertext, shift):\n    plaintext = ""\n    for char in ciphertext:\n        if char.isalpha():\n            shifted = ord(char) - shift\n            if char.isupper():\n                if shifted < ord(\'A\'):\n                    shifted += 26\n            else:\n                if shifted < ord(\'a\'):\n                    shifted += 26\n            plaintext += chr(shifted)\n        else:\n            plaintext += char\n    return plaintext\n\n# Brute force all shifts\nciphertext = "KHOOR ZRUOG"\nfor shift in range(26):\n    print(f"Shift {shift}: {caesar_decrypt(ciphertext, shift)}")\n# Output includes: "Shift 3: HELLO WORLD"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"xor-cipher",children:"XOR Cipher"}),"\n",(0,i.jsx)(n.h4,{id:"single-byte-xor",children:"Single-Byte XOR"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def single_byte_xor(data, key):\n    return bytes([b ^ key for b in data])\n\ndef score_english(text):\n    """Score based on English letter frequency"""\n    common = b\'etaoinshrdlu \'\n    return sum(1 for b in text.lower() if b in common)\n\n# Brute force\nciphertext = bytes.fromhex("1b37373331363f78151b7f2b783431333d78397828372d363c78373e783a393b3736")\n\nbest_score = 0\nbest_key = 0\nbest_text = b\'\'\n\nfor key in range(256):\n    plaintext = single_byte_xor(ciphertext, key)\n    score = score_english(plaintext)\n\n    if score > best_score:\n        best_score = score\n        best_key = key\n        best_text = plaintext\n\nprint(f"Key: {best_key} (\'{chr(best_key)}\')")\nprint(f"Plaintext: {best_text}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"repeating-key-xor",children:"Repeating-Key XOR"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'def repeating_key_xor(data, key):\n    """XOR with repeating key"""\n    repeated_key = (key * (len(data) // len(key) + 1))[:len(data)]\n    return bytes([d ^ k for d, k in zip(data, repeated_key)])\n\n# Encrypt\nplaintext = b"Secret message"\nkey = b"KEY"\nciphertext = repeating_key_xor(plaintext, key)\n\n# Decrypt (same operation)\ndecrypted = repeating_key_xor(ciphertext, key)\nprint(decrypted)  # b"Secret message"\n'})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"ctf-crypto-challenges",children:"CTF Crypto Challenges"}),"\n",(0,i.jsx)(n.h3,{id:"common-patterns",children:"Common Patterns"}),"\n",(0,i.jsx)(n.h4,{id:"1-rsa-challenges",children:"1. RSA Challenges"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Automated approach\npython3 RsaCtfTool.py --publickey public.pem --uncipherfile flag.enc\n\n# Manual checks:\n# - Small e (e=3) \u2192 small exponent attack\n# - Small n \u2192 factor with factordb.com\n# - Multiple keys \u2192 common modulus attack\n# - p and q close \u2192 Fermat factorization\n"})}),"\n",(0,i.jsx)(n.h4,{id:"2-xor-challenges",children:"2. XOR Challenges"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"# Single-byte XOR\nciphertext = bytes.fromhex(\"...\")\nfor key in range(256):\n    plaintext = bytes([b ^ key for b in ciphertext])\n    if b'flag{' in plaintext or b'CTF{' in plaintext:\n        print(plaintext)\n\n# Repeating-key XOR \u2192 use frequency analysis to find key length\n"})}),"\n",(0,i.jsx)(n.h4,{id:"3-base64-layers",children:"3. Base64 Layers"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'import base64\n\n# Multiple layers of encoding\nencoded = "VkZoU1FtRnRjRXhsZEVGMVZHaGxiblJwWTJGMFpVRjFkR2hsYm5ScFkyRjBaVUYxZEdob..."\n\n# Decode until plaintext\nwhile True:\n    try:\n        decoded = base64.b64decode(encoded)\n        if decoded == encoded or not decoded:\n            break\n        encoded = decoded\n        print(f"Decoded: {decoded}")\n    except:\n        break\n\nprint(f"Final: {encoded}")\n'})}),"\n",(0,i.jsx)(n.h4,{id:"4-aes-ecb-oracle",children:"4. AES ECB Oracle"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# If you can encrypt chosen plaintexts (ECB mode)\n# Can decrypt unknown suffix byte-by-byte\n\ndef ecb_oracle_attack(encryption_oracle, block_size=16):\n    """Byte-at-a-time ECB decryption"""\n    known = b\'\'\n\n    for block_num in range(10):\n        for byte_pos in range(block_size):\n            # Craft input\n            padding = b\'A\' * (block_size - 1 - byte_pos)\n            target = encryption_oracle(padding)[:block_size * (block_num + 1)]\n\n            # Try all bytes\n            for byte_val in range(256):\n                test_input = padding + known + bytes([byte_val])\n                test_output = encryption_oracle(test_input)[:block_size * (block_num + 1)]\n\n                if test_output == target:\n                    known += bytes([byte_val])\n                    break\n            else:\n                return known\n\n    return known\n'})}),"\n",(0,i.jsx)(n.h3,{id:"useful-tools--websites",children:"Useful Tools & Websites"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Online Tools:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CyberChef:"})," ",(0,i.jsx)(n.a,{href:"https://gchq.github.io/CyberChef/",children:"https://gchq.github.io/CyberChef/"})," (encoding chains, crypto operations)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dcode.fr:"})," ",(0,i.jsx)(n.a,{href:"https://www.dcode.fr/",children:"https://www.dcode.fr/"})," (classical ciphers, analysis)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FactorDB:"})," ",(0,i.jsx)(n.a,{href:"http://factordb.com/",children:"http://factordb.com/"})," (factor integers, check known RSA moduli)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Command-Line:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# CyberChef offline\ngit clone https://github.com/gchq/CyberChef.git\ncd CyberChef && firefox CyberChef.html\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"tools-reference",children:"Tools Reference"}),"\n",(0,i.jsx)(n.h3,{id:"essential-tools",children:"Essential Tools"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tool"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Installation"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"OpenSSL"})}),(0,i.jsx)(n.td,{children:"Crypto operations, certs"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"apt install openssl"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Hashcat"})}),(0,i.jsx)(n.td,{children:"GPU password cracking"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"apt install hashcat"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"John the Ripper"})}),(0,i.jsx)(n.td,{children:"CPU password cracking"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"apt install john"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"testssl.sh"})}),(0,i.jsx)(n.td,{children:"SSL/TLS testing"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"git clone https://github.com/drwetter/testssl.sh"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"RsaCtfTool"})}),(0,i.jsx)(n.td,{children:"Automated RSA attacks"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"git clone https://github.com/RsaCtfTool/RsaCtfTool.git"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"hashid"})}),(0,i.jsx)(n.td,{children:"Hash identification"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pip install hashid"})})]})]})]}),"\n",(0,i.jsx)(n.h3,{id:"python-libraries",children:"Python Libraries"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Core crypto\npip install pycryptodome      # AES, RSA, ECC\npip install cryptography      # High-level API\n\n# Math/Analysis\npip install gmpy2             # Fast math operations\npip install primefac          # Prime factorization\npip install ecdsa             # Elliptic curves\n\n# Password hashing\npip install bcrypt            # bcrypt\npip install argon2-cffi       # Argon2\n\n# Utilities\npip install base58            # Bitcoin addresses\npip install hashid            # Hash identification\n"})}),"\n",(0,i.jsx)(n.h3,{id:"specialized-tools",children:"Specialized Tools"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tool"}),(0,i.jsx)(n.th,{children:"Purpose"}),(0,i.jsx)(n.th,{children:"Link"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"PadBuster"})}),(0,i.jsx)(n.td,{children:"Padding oracle attack"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://github.com/AonCyberLabs/PadBuster",children:"https://github.com/AonCyberLabs/PadBuster"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"CyberChef"})}),(0,i.jsx)(n.td,{children:"Multi-tool for encoding/crypto"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"https://gchq.github.io/CyberChef/",children:"https://gchq.github.io/CyberChef/"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"FactorDB"})}),(0,i.jsx)(n.td,{children:"Integer factorization database"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"http://factordb.com/",children:"http://factordb.com/"})})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"Slither"})}),(0,i.jsx)(n.td,{children:"Smart contract analyzer"}),(0,i.jsx)(n.td,{children:(0,i.jsx)(n.code,{children:"pip install slither-analyzer"})})]})]})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"reference-resources",children:"Reference Resources"}),"\n",(0,i.jsx)(n.h3,{id:"comprehensive-knowledge-bases",children:"Comprehensive Knowledge Bases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CryptoHack"})," - ",(0,i.jsx)(n.a,{href:"https://cryptohack.org/",children:"cryptohack.org"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Interactive cryptography challenges and learning platform"}),"\n",(0,i.jsx)(n.li,{children:"Covers RSA, AES, elliptic curves, hash functions"}),"\n",(0,i.jsx)(n.li,{children:"Excellent for CTF preparation"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Practical Cryptography for Developers"})," - ",(0,i.jsx)(n.a,{href:"https://cryptobook.nakov.com/",children:"cryptobook.nakov.com"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Modern cryptography handbook with Python examples"}),"\n",(0,i.jsx)(n.li,{children:"Covers symmetric/asymmetric crypto, digital signatures, key exchange"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Crypto101"})," - ",(0,i.jsx)(n.a,{href:"https://www.crypto101.io/",children:"crypto101.io"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Introductory cryptography course (free book)"}),"\n",(0,i.jsx)(n.li,{children:"Explains fundamentals with practical examples"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CyberChef Wiki"})," - ",(0,i.jsx)(n.a,{href:"https://github.com/gchq/CyberChef/wiki",children:"github.com/gchq/CyberChef/wiki"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Documentation for CyberChef multi-tool"}),"\n",(0,i.jsx)(n.li,{children:"Encoding/decoding, crypto operations, data analysis"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"attack-techniques--exploits",children:"Attack Techniques & Exploits"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"HackTricks - Crypto"})," - ",(0,i.jsx)(n.a,{href:"https://book.hacktricks.xyz/crypto-and-stego/crypto-ctfs-tricks",children:"book.hacktricks.xyz/crypto-and-stego/crypto-ctfs-tricks"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CTF cryptography tricks and common patterns"}),"\n",(0,i.jsx)(n.li,{children:"RSA attacks, padding oracle, ECB vulnerabilities"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PayloadsAllTheThings - Cryptography"})," - ",(0,i.jsx)(n.a,{href:"https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Methodology%20and%20Resources",children:"github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Methodology%20and%20Resources#crypto"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cryptographic attack payloads and techniques"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cryptopals Challenges"})," - ",(0,i.jsx)(n.a,{href:"https://cryptopals.com/",children:"cryptopals.com"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Hands-on crypto breaking exercises"}),"\n",(0,i.jsx)(n.li,{children:"Covers AES, RSA, hash functions, padding oracle attacks"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"GTFOBins - OpenSSL"})," - ",(0,i.jsx)(n.a,{href:"https://gtfobins.github.io/gtfobins/openssl/",children:"gtfobins.github.io/gtfobins/openssl"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"OpenSSL command examples for crypto operations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"rsa-specific-resources",children:"RSA Specific Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"FactorDB"})," - ",(0,i.jsx)(n.a,{href:"http://factordb.com/",children:"factordb.com"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Database of known integer factorizations"}),"\n",(0,i.jsx)(n.li,{children:"Check if RSA modulus has been factored"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RsaCtfTool Documentation"})," - ",(0,i.jsx)(n.a,{href:"https://github.com/RsaCtfTool/RsaCtfTool",children:"github.com/RsaCtfTool/RsaCtfTool"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automated RSA attack tool (20+ attack methods)"}),"\n",(0,i.jsx)(n.li,{children:"Handles small exponent, common modulus, Fermat, Wiener, etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Twenty Years of Attacks on RSA"})," - ",(0,i.jsx)(n.a,{href:"https://crypto.stanford.edu/~dabo/pubs/papers/RSA-survey.pdf",children:"crypto.stanford.edu/~dabo/pubs/papers/RSA-survey.pdf"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Dan Boneh's comprehensive RSA attack survey (academic paper)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"password-cracking-resources",children:"Password Cracking Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hashcat Wiki"})," - ",(0,i.jsx)(n.a,{href:"https://hashcat.net/wiki/",children:"hashcat.net/wiki"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Official documentation for GPU password cracking"}),"\n",(0,i.jsx)(n.li,{children:"Hash modes, attack types, performance tuning"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"John the Ripper Documentation"})," - ",(0,i.jsx)(n.a,{href:"https://www.openwall.com/john/doc/",children:"openwall.com/john/doc"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"CPU-based password cracker documentation"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SecLists"})," - ",(0,i.jsx)(n.a,{href:"https://github.com/danielmiessler/SecLists",children:"github.com/danielmiessler/SecLists"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Curated password wordlists (rockyou.txt, common passwords)"}),"\n",(0,i.jsx)(n.li,{children:"Username lists, fuzzing payloads"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Have I Been Pwned - Passwords"})," - ",(0,i.jsx)(n.a,{href:"https://haveibeenpwned.com/Passwords",children:"haveibeenpwned.com/Passwords"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Database of compromised passwords (API available)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ssltls-testing-resources",children:"SSL/TLS Testing Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"testssl.sh Documentation"})," - ",(0,i.jsx)(n.a,{href:"https://github.com/drwetter/testssl.sh",children:"github.com/drwetter/testssl.sh"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Comprehensive SSL/TLS testing tool"}),"\n",(0,i.jsx)(n.li,{children:"Checks for Heartbleed, POODLE, weak ciphers, etc."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SSL Labs Server Test"})," - ",(0,i.jsx)(n.a,{href:"https://www.ssllabs.com/ssltest/",children:"ssllabs.com/ssltest"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Online SSL/TLS configuration analyzer"}),"\n",(0,i.jsx)(n.li,{children:"Industry standard for certificate/cipher validation"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OWASP TLS Cheat Sheet"})," - ",(0,i.jsx)(n.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html",children:"cheatsheetseries.owasp.org/cheatsheets/Transport_Layer_Security_Cheat_Sheet.html"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Best practices for TLS configuration"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"crt.sh"})," - ",(0,i.jsx)(n.a,{href:"https://crt.sh/",children:"crt.sh"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Certificate transparency log search"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"online-tools",children:"Online Tools"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CyberChef"})," - ",(0,i.jsx)(n.a,{href:"https://gchq.github.io/CyberChef/",children:"gchq.github.io/CyberChef"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Multi-tool for encoding, decoding, crypto operations"}),"\n",(0,i.jsx)(n.li,{children:"Visual recipe builder for data transformations"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"dcode.fr"})," - ",(0,i.jsx)(n.a,{href:"https://www.dcode.fr/",children:"dcode.fr"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Classical cipher solver (Caesar, Vigen\xe8re, substitution)"}),"\n",(0,i.jsx)(n.li,{children:"Frequency analysis, cryptanalysis tools"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Crackstation"})," - ",(0,i.jsx)(n.a,{href:"https://crackstation.net/",children:"crackstation.net"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Online hash lookup (15 billion hashes)"}),"\n",(0,i.jsx)(n.li,{children:"Fast MD5/SHA1/NTLM cracking"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cipher Identifier"})," - ",(0,i.jsx)(n.a,{href:"https://www.dcode.fr/cipher-identifier",children:"dcode.fr/cipher-identifier"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Automatic cipher type detection"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"cheat-sheets--quick-references",children:"Cheat Sheets & Quick References"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OpenSSL Cheat Sheet"})," - ",(0,i.jsx)(n.a,{href:"https://www.freecodecamp.org/news/openssl-command-cheatsheet-b441be1e8c4a/",children:"freecodecamp.org/news/openssl-command-cheatsheet-b441be1e8c4a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Common OpenSSL commands for certificates, keys, hashing"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hashcat Example Hashes"})," - ",(0,i.jsx)(n.a,{href:"https://hashcat.net/wiki/doku.php?id=example_hashes",children:"hashcat.net/wiki/doku.php?id=example_hashes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Example hash formats for all hash modes"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hash Algorithm Comparison"})," - ",(0,i.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions",children:"en.wikipedia.org/wiki/Comparison_of_cryptographic_hash_functions"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Performance and security comparison of hash functions"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"vulnerability-databases",children:"Vulnerability Databases"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"CVE Details - Cryptography"})," - ",(0,i.jsx)(n.a,{href:"https://www.cvedetails.com/",children:"cvedetails.com"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Search for crypto-related CVEs (Heartbleed, POODLE, etc.)"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NIST Cryptographic Standards"})," - ",(0,i.jsx)(n.a,{href:"https://csrc.nist.gov/projects/cryptographic-standards-and-guidelines",children:"csrc.nist.gov/projects/cryptographic-standards-and-guidelines"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Official FIPS standards (FIPS 140-2, SP 800-series)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"research--academic-papers",children:"Research & Academic Papers"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"IACR ePrint Archive"})," - ",(0,i.jsx)(n.a,{href:"https://eprint.iacr.org/",children:"eprint.iacr.org"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cryptology research papers (pre-prints)"}),"\n",(0,i.jsx)(n.li,{children:"Latest attacks and cryptographic research"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Applied Cryptography by Bruce Schneier"})," - Classic cryptography textbook","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Covers algorithms, protocols, implementation"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"The Joy of Cryptography"})," - ",(0,i.jsx)(n.a,{href:"https://joyofcryptography.com/",children:"joyofcryptography.com"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Free undergraduate-level cryptography textbook"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ctf--practice-platforms",children:"CTF & Practice Platforms"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OverTheWire - Krypton"})," - ",(0,i.jsx)(n.a,{href:"https://overthewire.org/wargames/krypton/",children:"overthewire.org/wargames/krypton"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cryptography wargame challenges"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"PicoCTF"})," - ",(0,i.jsx)(n.a,{href:"https://picoctf.org/",children:"picoctf.org"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Beginner-friendly CTF with crypto challenges"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Root-Me - Cryptanalysis"})," - ",(0,i.jsx)(n.a,{href:"https://www.root-me.org/",children:"root-me.org"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"French platform with cryptanalysis challenges"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"defensive-resources",children:"Defensive Resources"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OWASP Cryptographic Failures (A02:2021)"})," - ",(0,i.jsx)(n.a,{href:"https://owasp.org/Top10/A02_2021-Cryptographic_Failures/",children:"owasp.org/Top10/A02_2021-Cryptographic_Failures"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Common crypto implementation mistakes"}),"\n",(0,i.jsx)(n.li,{children:"Weak algorithms, improper key management"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"NIST Key Management Guidelines (SP 800-57)"})," - ",(0,i.jsx)(n.a,{href:"https://csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-5/final",children:"csrc.nist.gov/publications/detail/sp/800-57-part-1/rev-5/final"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Key lifecycle management best practices"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Password Storage Cheat Sheet"})," - ",(0,i.jsx)(n.a,{href:"https://cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html",children:"cheatsheetseries.owasp.org/cheatsheets/Password_Storage_Cheat_Sheet.html"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Argon2, bcrypt, PBKDF2 recommendations"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"related-sops",children:"Related SOPs"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Analysis:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Security/Analysis/sop-reverse-engineering",children:"Reverse Engineering"})," - Binary crypto implementation analysis"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Security/Analysis/sop-malware-analysis",children:"Malware Analysis"})," - Encrypted malware communications"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Security/Analysis/sop-hash-generation-methods",children:"Hash Generation Methods"})," - File integrity verification"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Pentesting & Security:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Security/Pentesting/sop-web-application-security",children:"Web Application Security"})," - Cryptographic failures (OWASP A02:2021)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Security/Pentesting/sop-vulnerability-research",children:"Vulnerability Research"})," - Finding crypto vulnerabilities"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Security/Pentesting/sop-bug-bounty",children:"Bug Bounty Hunting"})," - Responsible disclosure"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Security/Pentesting/sop-mobile-security",children:"Mobile Security"})," - SSL pinning bypass"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"../../Pentesting/sop-forensics-investigation",children:"Forensics Investigation"})," - Encrypted data recovery"]}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Version:"})," 2.0\n",(0,i.jsx)(n.strong,{children:"Last Updated:"})," 2025-10-11\n",(0,i.jsx)(n.strong,{children:"Focus:"})," Practical cryptanalysis for security research and CTF challenges"]})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}}}]);