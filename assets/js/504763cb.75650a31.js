"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[9977],{6293:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Investigations/Techniques/sop-image-video-osint","title":"Image & Video OSINT","description":"Visual intelligence techniques: EXIF analysis, reverse image search, geolocation, video verification & deepfake detection for media investigations.","source":"@site/intel-codex/Investigations/Techniques/sop-image-video-osint.md","sourceDirName":"Investigations/Techniques","slug":"/Investigations/Techniques/sop-image-video-osint","permalink":"/intel-codex/Investigations/Techniques/sop-image-video-osint","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/intel-codex/tree/main/intel-codex/Investigations/Techniques/sop-image-video-osint.md","tags":[{"inline":true,"label":"sop","permalink":"/intel-codex/tags/sop"},{"inline":true,"label":"media","permalink":"/intel-codex/tags/media"},{"inline":true,"label":"exif","permalink":"/intel-codex/tags/exif"},{"inline":true,"label":"reverse","permalink":"/intel-codex/tags/reverse"},{"inline":true,"label":"geolocation","permalink":"/intel-codex/tags/geolocation"},{"inline":true,"label":"verification","permalink":"/intel-codex/tags/verification"}],"version":"current","lastUpdatedAt":null,"frontMatter":{"type":"sop","title":"Image & Video OSINT","description":"Visual intelligence techniques: EXIF analysis, reverse image search, geolocation, video verification & deepfake detection for media investigations.","tags":["sop","media","exif","reverse","geolocation","verification"],"template_version":"2025-10-05T00:00:00.000Z"},"sidebar":"intelCodexSidebar","previous":{"title":"Financial Crime & AML OSINT","permalink":"/intel-codex/Investigations/Techniques/sop-financial-aml-osint"},"next":{"title":"Legal, Ethics & Data Governance for OSINT","permalink":"/intel-codex/Investigations/Techniques/sop-legal-ethics"}}');var a=i(74848),t=i(28453);const r={type:"sop",title:"Image & Video OSINT",description:"Visual intelligence techniques: EXIF analysis, reverse image search, geolocation, video verification & deepfake detection for media investigations.",tags:["sop","media","exif","reverse","geolocation","verification"],template_version:new Date("2025-10-05T00:00:00.000Z")},o="Image & Video OSINT",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Common Use Cases",id:"common-use-cases",level:3},{value:"1. Image Intake &amp; Preservation",id:"1-image-intake--preservation",level:2},{value:"File Acquisition",id:"file-acquisition",level:3},{value:"File Format Analysis",id:"file-format-analysis",level:3},{value:"2. Reverse Image Search",id:"2-reverse-image-search",level:2},{value:"Multi-Engine Search Strategy",id:"multi-engine-search-strategy",level:3},{value:"Google Reverse Image Search",id:"google-reverse-image-search",level:3},{value:"Yandex Reverse Image Search",id:"yandex-reverse-image-search",level:3},{value:"TinEye Reverse Search",id:"tineye-reverse-search",level:3},{value:"Specialized Reverse Search Engines",id:"specialized-reverse-search-engines",level:3},{value:"Reverse Search Aggregators",id:"reverse-search-aggregators",level:3},{value:"3. EXIF Metadata Extraction",id:"3-exif-metadata-extraction",level:2},{value:"Understanding EXIF Data",id:"understanding-exif-data",level:3},{value:"EXIF Extraction Tools",id:"exif-extraction-tools",level:3},{value:"GPS Coordinate Analysis",id:"gps-coordinate-analysis",level:3},{value:"4. Image Forensics &amp; Verification",id:"4-image-forensics--verification",level:2},{value:"Error Level Analysis (ELA)",id:"error-level-analysis-ela",level:3},{value:"Clone Detection",id:"clone-detection",level:3},{value:"Metadata Consistency Checks",id:"metadata-consistency-checks",level:3},{value:"Shadow &amp; Lighting Analysis",id:"shadow--lighting-analysis",level:3},{value:"5. Geolocation Techniques",id:"5-geolocation-techniques",level:2},{value:"Landmark Identification",id:"landmark-identification",level:3},{value:"Environmental Clues",id:"environmental-clues",level:3},{value:"Language &amp; Culture",id:"language--culture",level:3},{value:"Coordinate Matching",id:"coordinate-matching",level:3},{value:"6. Video Analysis",id:"6-video-analysis",level:2},{value:"Video Intake &amp; Preservation",id:"video-intake--preservation",level:3},{value:"Keyframe Extraction",id:"keyframe-extraction",level:3},{value:"Video Metadata Extraction",id:"video-metadata-extraction",level:3},{value:"Audio Analysis",id:"audio-analysis",level:3},{value:"Video Verification",id:"video-verification",level:3},{value:"7. Specialized Techniques",id:"7-specialized-techniques",level:2},{value:"Facial Recognition (Ethical Use Only)",id:"facial-recognition-ethical-use-only",level:3},{value:"License Plate Recognition",id:"license-plate-recognition",level:3},{value:"Reverse Video Search",id:"reverse-video-search",level:3},{value:"8. Tools Reference",id:"8-tools-reference",level:2},{value:"Essential Tools",id:"essential-tools",level:3},{value:"Quick Command Reference",id:"quick-command-reference",level:3},{value:"9. Workflow Examples",id:"9-workflow-examples",level:2},{value:"Workflow 1: Verify Profile Picture Authenticity",id:"workflow-1-verify-profile-picture-authenticity",level:3},{value:"Workflow 2: Geolocate Unknown Photo",id:"workflow-2-geolocate-unknown-photo",level:3},{value:"Workflow 3: Verify Video Timestamp",id:"workflow-3-verify-video-timestamp",level:3},{value:"10. Best Practices &amp; Pitfalls",id:"10-best-practices--pitfalls",level:2},{value:"\u274c Common Mistakes",id:"-common-mistakes",level:3},{value:"\u2705 Best Practices",id:"-best-practices",level:3},{value:"11. Legal &amp; Ethical Considerations",id:"11-legal--ethical-considerations",level:2},{value:"Privacy &amp; Consent",id:"privacy--consent",level:3},{value:"Chain of Custody",id:"chain-of-custody",level:3}];function d(e){const n={a:"a",admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.admonition,{type:"danger",children:[(0,a.jsxs)(n.mdxAdmonitionTitle,{children:["Synced from an ",(0,a.jsx)(n.strong,{children:"Obsidian vault"})]}),(0,a.jsxs)(n.p,{children:["For graph and advanced features, download the ",(0,a.jsx)(n.strong,{children:"full"})," ",(0,a.jsx)(n.strong,{children:(0,a.jsx)(n.a,{href:"https://github.com/gl0bal01/intel-codex",children:"Intel Codex Vault"})})," and open it in ",(0,a.jsx)(n.strong,{children:"Obsidian"}),"."]})]}),"\n",(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"image--video-osint",children:"Image & Video OSINT"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Purpose:"})," Extract intelligence from images and videos through reverse image search, metadata analysis, geolocation, and forensic verification techniques. Essential for verifying social media content, identifying locations, and authenticating visual evidence."]}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,a.jsx)(n.h3,{id:"common-use-cases",children:"Common Use Cases"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Image Analysis:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Verify social media profile authenticity (reverse search for stolen photos)"}),"\n",(0,a.jsx)(n.li,{children:"Identify locations from photographs (geolocation)"}),"\n",(0,a.jsx)(n.li,{children:"Authenticate evidence (detect manipulation, verify original source)"}),"\n",(0,a.jsx)(n.li,{children:"Find additional context (other instances of same image online)"}),"\n",(0,a.jsx)(n.li,{children:"Extract metadata (camera info, GPS coordinates, timestamp)"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Video Analysis:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Verify viral video authenticity"}),"\n",(0,a.jsx)(n.li,{children:"Identify filming location (keyframe geolocation)"}),"\n",(0,a.jsx)(n.li,{children:"Extract identifiable information (faces, license plates, landmarks)"}),"\n",(0,a.jsx)(n.li,{children:"Detect deepfakes or manipulated footage"}),"\n",(0,a.jsx)(n.li,{children:"Timeline verification (shadow analysis, weather conditions)"}),"\n"]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"1-image-intake--preservation",children:"1. Image Intake & Preservation"}),"\n",(0,a.jsx)(n.h3,{id:"file-acquisition",children:"File Acquisition"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Download original (highest quality):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Right-click \u2192 Save Image As (browser)\n# Always get full resolution, not thumbnail\n\n# Twitter image download (original quality)\n# Add :orig to image URL\n# https://pbs.twimg.com/media/IMAGE_ID?format=jpg&name=large\n# Change to: https://pbs.twimg.com/media/IMAGE_ID?format=jpg&name=orig\n\n# Instagram image download (bypass restrictions)\n# Method 1: Browser console\n# Right-click image \u2192 Inspect \u2192 Find <img> tag \u2192 Copy image URL\n# Method 2: Instaloader\ninstaloader --no-videos --no-video-thumbnails --post-metadata-txt POST_URL\n\n# Download from URL (command-line)\nwget -O original_image.jpg "https://example.com/image.jpg"\n\n# Download with metadata preserved\ncurl -o original_image.jpg "https://example.com/image.jpg"\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Calculate hash immediately:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# SHA-256 hash\nsha256sum original_image.jpg > original_image.jpg.sha256\n\n# Windows (PowerShell)\nGet-FileHash -Path "original_image.jpg" -Algorithm SHA256 | Format-List\n\n# Verify later\nsha256sum -c original_image.jpg.sha256\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Check for duplicates/re-uploads:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Calculate perceptual hash (pHash - similar images have similar hashes)\n# Using ImageMagick\nconvert original_image.jpg -resize 8x8! -colorspace Gray phash.txt\n\n# Or use Python with imagehash library\npython3 << EOF\nfrom PIL import Image\nimport imagehash\nhash = imagehash.phash(Image.open('original_image.jpg'))\nprint(f\"pHash: {hash}\")\nEOF\n\n# Compare two images\npython3 << EOF\nfrom PIL import Image\nimport imagehash\nhash1 = imagehash.phash(Image.open('image1.jpg'))\nhash2 = imagehash.phash(Image.open('image2.jpg'))\nprint(f\"Difference: {hash1 - hash2}\")  # 0 = identical, higher = more different\nEOF\n"})}),"\n",(0,a.jsx)(n.h3,{id:"file-format-analysis",children:"File Format Analysis"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Identify true file type (ignores extension)\nfile image.jpg\n# Output: image.jpg: JPEG image data, JFIF standard 1.01\n\n# Detailed file info\nidentify -verbose image.jpg\n\n# Check for steganography (hidden data)\nbinwalk image.jpg\n# Flags embedded files or unusual data patterns\n\n# Strings extraction (hidden text)\nstrings image.jpg | less\n# Look for URLs, emails, metadata\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"2-reverse-image-search",children:"2. Reverse Image Search"}),"\n",(0,a.jsx)(n.h3,{id:"multi-engine-search-strategy",children:"Multi-Engine Search Strategy"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Why multiple engines:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Google: Best for Western web, recent images"}),"\n",(0,a.jsx)(n.li,{children:"Yandex: Superior for faces, Cyrillic content, Eastern Europe/Russia"}),"\n",(0,a.jsx)(n.li,{children:"Bing: Good middle ground, integrates with social media"}),"\n",(0,a.jsx)(n.li,{children:"TinEye: Oldest instances, tracks image modifications over time"}),"\n",(0,a.jsx)(n.li,{children:"Baidu: Essential for Chinese web content"}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"google-reverse-image-search",children:"Google Reverse Image Search"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Browser method:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'1. Navigate to https://images.google.com\n2. Click camera icon in search bar\n3. Upload image OR paste image URL\n4. Review results:\n   - "Visually similar images"\n   - "Pages that include matching images"\n   - "Other sizes"\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Command-line method:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Using Google Custom Search API (requires API key)\ncurl "https://www.googleapis.com/customsearch/v1?q=SEARCH_TERM&cx=YOUR_CX&searchType=image&imgSize=large&key=YOUR_API_KEY"\n\n# Or use search-by-image URL directly\n# Upload image to temporary host, then:\nfirefox "https://www.google.com/searchbyimage?image_url=https://example.com/image.jpg"\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Advanced techniques:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"# Crop image to focus on specific element\n# Example: Crop to just the face, or just a landmark\n# Then reverse search the cropped version\n\n# Adjust contrast/brightness before searching\n# Some images may match better after enhancement\nconvert image.jpg -brightness-contrast 10x20 enhanced.jpg\n"})}),"\n",(0,a.jsx)(n.h3,{id:"yandex-reverse-image-search",children:"Yandex Reverse Image Search"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Why Yandex is superior for faces:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Better facial recognition algorithm"}),"\n",(0,a.jsx)(n.li,{children:"Indexes more Eastern European and Russian content"}),"\n",(0,a.jsx)(n.li,{children:"Often finds results when Google fails"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'1. Navigate to https://yandex.com/images\n2. Click camera icon\n3. Upload image\n4. Enable "Search for similar" (finds faces in images)\n\n# Results often include:\n# - Social media profiles (VK, Odnoklassniki)\n# - Russian-language websites\n# - Higher quality originals\n'})}),"\n",(0,a.jsx)(n.h3,{id:"tineye-reverse-search",children:"TinEye Reverse Search"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Best for:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Finding oldest instance of an image (temporal verification)"}),"\n",(0,a.jsx)(n.li,{children:"Tracking image modifications over time"}),"\n",(0,a.jsx)(n.li,{children:"Detecting copyright infringement"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Usage:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'1. Navigate to https://tineye.com\n2. Upload image or paste URL\n3. Sort results by:\n   - "Oldest" - find original source\n   - "Most changed" - find manipulated versions\n   - "Biggest image" - highest resolution\n\n# TinEye API (commercial)\ncurl -u "your_api_key:your_api_secret" \\\n  "https://api.tineye.com/rest/search/" \\\n  -F "image=@image.jpg"\n'})}),"\n",(0,a.jsx)(n.h3,{id:"specialized-reverse-search-engines",children:"Specialized Reverse Search Engines"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"PimEyes (Face Search):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://pimeyes.com\n- Upload face photo\n- Finds other instances of same face online\n- \u26a0\ufe0f Privacy concerns - use ethically and legally\n- Commercial tool (free limited searches)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Bing Visual Search:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://www.bing.com/visualsearch\n- Upload image\n- Often finds shopping/product matches\n- Good for identifying objects, brands\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Baidu Image Search (China):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://image.baidu.com\n- Essential for Chinese web content\n- Click camera icon (\u76f8\u673a\u56fe\u6807)\n- Upload image\n"})}),"\n",(0,a.jsx)(n.h3,{id:"reverse-search-aggregators",children:"Reverse Search Aggregators"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Search4Faces:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Multi-platform face search\n# Searches VK, Odnoklassniki, TikTok, etc.\nhttps://search4faces.com/\n\n# Upload face photo\n# Results from multiple social platforms\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"3-exif-metadata-extraction",children:"3. EXIF Metadata Extraction"}),"\n",(0,a.jsx)(n.h3,{id:"understanding-exif-data",children:"Understanding EXIF Data"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"What EXIF contains:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Camera make/model"}),"\n",(0,a.jsx)(n.li,{children:"Date/time taken"}),"\n",(0,a.jsx)(n.li,{children:"GPS coordinates (if enabled)"}),"\n",(0,a.jsx)(n.li,{children:"Camera settings (ISO, aperture, shutter speed)"}),"\n",(0,a.jsx)(n.li,{children:"Software used (editing apps leave traces)"}),"\n",(0,a.jsx)(n.li,{children:"Copyright information"}),"\n",(0,a.jsx)(n.li,{children:"Thumbnail preview"}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u26a0\ufe0f Platform stripping:"}),"\nMost social media platforms strip EXIF data:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Twitter: \u2713 Strips GPS, keeps some camera info"}),"\n",(0,a.jsx)(n.li,{children:"Facebook: \u2713 Strips all EXIF"}),"\n",(0,a.jsx)(n.li,{children:"Instagram: \u2713 Strips all EXIF"}),"\n",(0,a.jsx)(n.li,{children:"WhatsApp: \u2713 Strips EXIF, compresses image"}),"\n",(0,a.jsx)(n.li,{children:'Telegram: \u2717 Preserves EXIF if sent as "File" (not photo)'}),"\n"]}),"\n",(0,a.jsx)(n.h3,{id:"exif-extraction-tools",children:"EXIF Extraction Tools"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"ExifTool (comprehensive):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Install\n# Ubuntu/Debian: sudo apt install libimage-exiftool-perl\n# macOS: brew install exiftool\n# Windows: Download from https://exiftool.org/\n\n# Basic extraction\nexiftool image.jpg\n\n# Output to file\nexiftool image.jpg > exif_data.txt\n\n# Extract specific fields\nexiftool -GPSLatitude -GPSLongitude -DateTimeOriginal image.jpg\n\n# Batch process directory\nexiftool -r /path/to/images/ > all_exif.txt\n\n# GPS coordinates only\nexiftool -gpslatitude -gpslongitude -n image.jpg\n# Output: GPS Latitude: 37.7749, GPS Longitude: -122.4194\n\n# Check for software/editing traces\nexiftool -Software -CreatorTool image.jpg\n# May reveal: Photoshop, GIMP, Snapseed, etc.\n\n# Extract thumbnail (embedded preview)\nexiftool -b -ThumbnailImage image.jpg > thumbnail.jpg\n# Sometimes thumbnail shows pre-edit version!\n"})}),"\n",(0,a.jsx)(n.h3,{id:"gps-coordinate-analysis",children:"GPS Coordinate Analysis"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Convert GPS to decimal degrees:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# EXIF stores GPS as degrees, minutes, seconds\n# Example: 37\xb046'29.64\"N 122\xb025'9.96\"W\n\n# ExifTool can output decimal\nexiftool -n -gpslatitude -gpslongitude image.jpg\n# Output: 37.7749, -122.4194\n\n# Manual conversion formula:\n# Decimal = Degrees + (Minutes/60) + (Seconds/3600)\n# Example: 37 + (46/60) + (29.64/3600) = 37.7749\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Visualize GPS location:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Google Maps link\nhttps://www.google.com/maps?q=37.7749,-122.4194\n\n# Or use exiftool to generate KML (Google Earth)\nexiftool -p gpx.fmt -r /path/to/images/ > photos.gpx\n# Import photos.gpx into Google Earth\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"4-image-forensics--verification",children:"4. Image Forensics & Verification"}),"\n",(0,a.jsx)(n.h3,{id:"error-level-analysis-ela",children:"Error Level Analysis (ELA)"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Purpose:"})," Detect manipulated regions (different compression levels indicate editing)"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Using FotoForensics:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'1. Navigate to http://fotoforensics.com\n2. Upload image\n3. Click "Error Level Analysis"\n4. Interpretation:\n   - Similar brightness = untouched\n   - Bright areas = recently edited/added\n   - \u26a0\ufe0f Not definitive - can have false positives\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Command-line ELA:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Using ImageMagick\nconvert image.jpg -quality 95 temp.jpg\ncomposite image.jpg temp.jpg -compose difference ela_output.jpg\nconvert ela_output.jpg -auto-level ela_enhanced.jpg\n\n# View ela_enhanced.jpg\n# Bright areas indicate potential manipulation\n"})}),"\n",(0,a.jsx)(n.h3,{id:"clone-detection",children:"Clone Detection"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Detect copy-paste regions within image\n# Using imagemagick and comparison\n\n# Method 1: Visual inspection after enhancement\nconvert image.jpg -contrast -contrast -contrast enhanced.jpg\n\n# Method 2: Python with opencv (advanced)\n# Requires: pip install opencv-python numpy\npython3 << 'EOF'\nimport cv2\nimport numpy as np\n\nimg = cv2.imread('image.jpg')\ngray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)\n\n# Find repeated patterns (SIFT features)\nsift = cv2.SIFT_create()\nkp, des = sift.detectAndCompute(gray, None)\n\n# Match features to themselves (finds clones)\nbf = cv2.BFMatcher()\nmatches = bf.knnMatch(des, des, k=2)\n\n# Filter for strong matches (potential clones)\nclones = []\nfor m, n in matches:\n    if m.distance < 0.75 * n.distance:\n        clones.append(m)\n\nprint(f\"Potential clone regions: {len(clones)}\")\nEOF\n"})}),"\n",(0,a.jsx)(n.h3,{id:"metadata-consistency-checks",children:"Metadata Consistency Checks"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Check for timestamp mismatches\nexiftool -Time:All image.jpg\n\n# Look for:\n# - File creation date vs. EXIF date (should match if original)\n# - Multiple date fields with different values (indicates editing)\n# - Future dates (system clock manipulation)\n\n# Example output analysis:\n# File Modification Date/Time: 2024:10:05 14:30:00\n# Create Date: 2020:05:10 08:15:30  # \u2190 EXIF date\n# Date/Time Original: 2020:05:10 08:15:30\n# Modify Date: 2024:09:15 10:20:00  # \u2190 Edited in September 2024!\n"})}),"\n",(0,a.jsx)(n.h3,{id:"shadow--lighting-analysis",children:"Shadow & Lighting Analysis"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Sun position verification:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"1. Identify claimed date/time and location\n2. Calculate sun position for that date/time/location\n3. Compare with shadows in image\n\nTool: SunCalc - https://www.suncalc.org/\n- Enter location coordinates\n- Set date and time\n- View sun azimuth (direction) and altitude (angle)\n- Compare with shadow direction/length in image\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Example:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"**Claim:** Photo taken in Paris (48.8566\xb0N, 2.3522\xb0E) on June 21, 2024 at 12:00 PM\n\n**Sun position (SunCalc):**\n- Azimuth: 180\xb0 (due south)\n- Altitude: 64\xb0 (high in sky)\n- Expected shadow: Short, pointing north\n\n**Actual shadow in image:**\n- Direction: Northeast\n- Length: Long\n- **Conclusion:** \u26a0\ufe0f Inconsistent - shadows suggest morning (9-10 AM) or different location\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"5-geolocation-techniques",children:"5. Geolocation Techniques"}),"\n",(0,a.jsx)(n.h3,{id:"landmark-identification",children:"Landmark Identification"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Method 1: Architectural features"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:'Look for distinctive elements:\n- Building style (modernist, Soviet-era, colonial, etc.)\n- Roof types (flat, pitched, tiled, metal)\n- Window styles (shutters, bars, ac units)\n- Balcony designs\n- Street furniture (benches, lights, bins)\n\nCross-reference with:\n- Google Images: "distinctive building [city]"\n- OpenStreetMap: Browse area for matching structures\n- Google Earth: 3D view to match angles\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Method 2: Text clues"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# OCR text from signs, storefronts, license plates\ntesseract image.jpg output -l eng\n\n# Output: output.txt contains extracted text\ncat output.txt\n# Example: "\u041a\u0410\u0424\u0415" (Russian) \u2192 likely Russia/former USSR\n#          "Pharmacie" (French) \u2192 France/French-speaking region\n#          "+1-555-" (phone) \u2192 North America (country code +1)\n\n# Search extracted text\n# "Caf\xe9 de Paris" \u2192 Google: "Caf\xe9 de Paris" + visible landmarks\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Method 3: Street View matching"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"1. Identify approximate area from other clues\n2. Use Google Street View\n3. Navigate streets looking for matching:\n   - Building facades\n   - Street signs\n   - Landmarks visible in background\n   - Road markings, curb styles\n\nTool: Google Street View - https://www.google.com/maps (drag pegman icon)\nTool: Mapillary - https://www.mapillary.com (crowdsourced street imagery)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"environmental-clues",children:"Environmental Clues"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Vegetation & climate:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"- Palm trees \u2192 tropical/subtropical\n- Deciduous trees (no leaves) \u2192 winter in temperate zone\n- Snow \u2192 winter (northern hemisphere: Dec-Feb, southern: Jun-Aug)\n- Dry/brown grass \u2192 summer or arid climate\n- Monsoon flooding \u2192 specific seasonal regions (India: Jun-Sep)\n\nCross-reference with:\n- Claimed date (does climate match season?)\n- K\xf6ppen climate classification map\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Transportation & vehicles:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"**License plates:**\n- Color scheme (EU: white/blue, US: varies by state)\n- Format (UK: AB12 CDE, Russia: \u0410123\u0412\u0421)\n- Language/script (Latin, Cyrillic, Arabic, Chinese)\n\n**Road signs:**\n- Shape (US: diamond for warnings, EU: triangle)\n- Color (US: yellow warnings, EU: red/white)\n- Language\n- Measurement units (km/h vs mph)\n\n**Traffic direction:**\n- Left-hand drive: UK, Japan, India, Australia, South Africa\n- Right-hand drive: Most of the world\n\n**Vehicle types:**\n- Specific models sold only in certain regions\n- Commercial vehicle branding (regional companies)\n- Emergency vehicle livery (police/ambulance colors vary)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Utility infrastructure:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"- Power line styles (overhead vs underground)\n- Transformer boxes (designs vary by country)\n- Manhole covers (often stamped with city name/utility company)\n- Street lights (style, color, height)\n- Fire hydrants (US has above-ground, many countries use underground)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"language--culture",children:"Language & Culture"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Script identification:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"- Cyrillic \u2192 Russia, Ukraine, Belarus, Serbia, Bulgaria, Kazakhstan\n- Arabic \u2192 Middle East, North Africa\n- Chinese (Simplified) \u2192 China, Singapore\n- Chinese (Traditional) \u2192 Taiwan, Hong Kong\n- Japanese (Hiragana/Katakana) \u2192 Japan\n- Korean (Hangul) \u2192 Korea\n- Thai \u2192 Thailand\n- Hebrew \u2192 Israel\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Cultural markers:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"- Advertising styles (language, brands)\n- Religious symbols (mosques, churches, temples)\n- National flags\n- Sports team logos/colors\n- Store chains (regional/national)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"coordinate-matching",children:"Coordinate Matching"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Using reference images:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"1. Identify potential location (city/neighborhood)\n2. Find reference images from same location (Google Images, Flickr)\n3. Match specific features:\n   - Window count on building\n   - Signage exact positions\n   - Sidewalk patterns\n   - Tree locations\n\nTool: GeoGuessr - https://www.geoguessr.com\n- Practice identifying locations from Street View\n- Builds pattern recognition skills\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Satellite imagery:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"1. Google Earth Pro (desktop version - free)\n2. Navigate to suspected area\n3. Use historical imagery feature (clock icon)\n   - View location at different dates\n   - Match vegetation, construction, parked vehicles\n4. Measure distances between landmarks\n5. Match roof shapes, building shadows\n\nTool: Google Earth Pro - https://www.google.com/earth/versions/#earth-pro\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"6-video-analysis",children:"6. Video Analysis"}),"\n",(0,a.jsx)(n.h3,{id:"video-intake--preservation",children:"Video Intake & Preservation"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Download original quality:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# YouTube (using yt-dlp - successor to youtube-dl)\nyt-dlp -f "bestvideo+bestaudio" "https://www.youtube.com/watch?v=VIDEO_ID"\n\n# Download with metadata\nyt-dlp --write-info-json --write-thumbnail "https://www.youtube.com/watch?v=VIDEO_ID"\n\n# Twitter video\nyt-dlp "https://twitter.com/user/status/TWEET_ID"\n\n# Instagram video\nyt-dlp "https://www.instagram.com/p/POST_ID/"\n\n# TikTok\nyt-dlp "https://www.tiktok.com/@user/video/VIDEO_ID"\n\n# Facebook\nyt-dlp "https://www.facebook.com/user/videos/VIDEO_ID"\n\n# Calculate hash\nsha256sum video.mp4 > video.mp4.sha256\n'})}),"\n",(0,a.jsx)(n.h3,{id:"keyframe-extraction",children:"Keyframe Extraction"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Extract frames for reverse search:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Using ffmpeg (install: apt install ffmpeg / brew install ffmpeg)\n\n# Extract one frame per second\nffmpeg -i video.mp4 -vf fps=1 frame_%04d.jpg\n\n# Extract one frame every 10 seconds\nffmpeg -i video.mp4 -vf fps=1/10 frame_%04d.jpg\n\n# Extract specific frame (at 5 seconds)\nffmpeg -ss 00:00:05 -i video.mp4 -frames:v 1 frame_at_5s.jpg\n\n# Extract keyframes only (scene changes)\nffmpeg -i video.mp4 -vf \"select='eq(pict_type,I)'\" -vsync vfr keyframe_%04d.jpg\n\n# High-quality extraction\nffmpeg -i video.mp4 -qscale:v 2 frame_%04d.jpg\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Batch reverse search frames:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Upload each frame to reverse image search engines\n# Manual: Upload frame_%04d.jpg files one by one\n# Automated (using Google Custom Search API):\n\nfor frame in frame_*.jpg; do\n    echo "Searching: $frame"\n    # Upload to temporary host or use API\n    # Compare results\ndone\n'})}),"\n",(0,a.jsx)(n.h3,{id:"video-metadata-extraction",children:"Video Metadata Extraction"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# ffprobe (comes with ffmpeg)\nffprobe -v quiet -print_format json -show_format -show_streams video.mp4 > video_metadata.json\n\n# Human-readable output\nffprobe video.mp4\n\n# Specific fields\nffprobe -show_entries format=duration,bit_rate,size -of default=noprint_wrappers=1 video.mp4\n\n# GPS location (if embedded - rare)\nffprobe -show_entries format_tags=location -of default=noprint_wrappers=1:nokey=1 video.mp4\n\n# Creation time\nffprobe -show_entries format_tags=creation_time -of default=noprint_wrappers=1:nokey=1 video.mp4\n\n# ExifTool also works with video\nexiftool video.mp4\n"})}),"\n",(0,a.jsx)(n.h3,{id:"audio-analysis",children:"Audio Analysis"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Extract audio track:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Extract audio as WAV\nffmpeg -i video.mp4 -vn -acodec pcm_s16le audio.wav\n\n# Extract audio as MP3\nffmpeg -i video.mp4 -vn -acodec libmp3lame audio.mp3\n\n# Analyze audio for clues:\n# - Language spoken\n# - Background sounds (sirens, traffic, birds, weather)\n# - Music (Shazam, SoundHound for identification)\n# - Accents/dialects\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Speech-to-text (transcription):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Using Whisper (OpenAI - highly accurate)\n# Install: pip install openai-whisper\n\nwhisper audio.mp3 --model medium --language en --output_format txt\n\n# Output: audio.txt with transcription\n# Useful for:\n# - Identifying names, locations mentioned\n# - Searching transcript for keywords\n# - Timestamp verification (mentions of time/date)\n"})}),"\n",(0,a.jsx)(n.h3,{id:"video-verification",children:"Video Verification"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"InVID Verification Plugin:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"Browser extension: https://www.invid-project.eu/tools-and-services/invid-verification-plugin/\n\nFeatures:\n- Keyframe extraction\n- Reverse image search (multiple engines)\n- Metadata analysis\n- OCR on frames\n- Video magnifier\n- Rights verification (forensic analysis)\n\nUsage:\n1. Install browser extension (Chrome/Firefox)\n2. Right-click video \u2192 InVID Analysis\n3. Extract keyframes\n4. Reverse search each frame\n5. Check metadata\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Deepfake detection:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"Signs of deepfakes:\n- Unnatural blinking patterns (or lack of blinking)\n- Inconsistent lighting on face vs background\n- Blurry face edges (especially around hairline)\n- Mismatched skin tones (face vs neck)\n- Lip sync errors\n- Unnatural head movements\n- Background inconsistencies (person moves, background doesn't)\n\nTools:\n- Microsoft Video Authenticator (not public yet)\n- Sensity AI (commercial)\n- Manual frame-by-frame analysis (slow but effective)\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"7-specialized-techniques",children:"7. Specialized Techniques"}),"\n",(0,a.jsx)(n.h3,{id:"facial-recognition-ethical-use-only",children:"Facial Recognition (Ethical Use Only)"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"\u26a0\ufe0f Legal Warning:"})," Facial recognition has legal restrictions in many jurisdictions. Use only when legally authorized."]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"PimEyes (commercial):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://pimeyes.com\n- Upload face photo (crop to just face)\n- Finds other instances online\n- Results include: social media, news articles, websites\n- \u26a0\ufe0f Privacy implications - use responsibly\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Search4Faces (social media specific):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://search4faces.com/\n- Searches: VK, Odnoklassniki, TikTok\n- Better for Eastern European profiles\n- Free (limited searches)\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Face comparison (manual verification):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-python",children:'# Using face_recognition library (Python)\n# Install: pip install face_recognition\n\nimport face_recognition\n\n# Load images\nimage1 = face_recognition.load_image_file("person1.jpg")\nimage2 = face_recognition.load_image_file("person2.jpg")\n\n# Get face encodings\nencoding1 = face_recognition.face_encodings(image1)[0]\nencoding2 = face_recognition.face_encodings(image2)[0]\n\n# Compare\nresults = face_recognition.compare_faces([encoding1], encoding2)\nprint(f"Match: {results[0]}")  # True/False\n\n# Distance (lower = more similar)\ndistance = face_recognition.face_distance([encoding1], encoding2)\nprint(f"Distance: {distance[0]}")  # 0.0 - 1.0\n'})}),"\n",(0,a.jsx)(n.h3,{id:"license-plate-recognition",children:"License Plate Recognition"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"OCR extraction:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Crop image to just license plate\nconvert original.jpg -crop 200x50+100+200 plate.jpg\n\n# Enhance contrast\nconvert plate.jpg -contrast -contrast enhanced_plate.jpg\n\n# OCR\ntesseract enhanced_plate.jpg plate_text\n\n# Output: plate_text.txt\ncat plate_text.txt\n# Example: ABC1234\n\n# Search plate format to identify region\n# US: varies by state (CA: 7ABC123, NY: ABC-1234)\n# EU: typically country code + numbers (D-AB 1234 for Germany)\n# UK: AB12 CDE format\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Automated ALPR (Automatic License Plate Recognition):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Using OpenALPR (open-source)\n# Install: https://github.com/openalpr/openalpr\n\nalpr -c us plate_image.jpg\n# Output: Plate number + confidence score\n\n# Specify region\nalpr -c eu -n 10 plate_image.jpg  # Top 10 matches for EU plates\n"})}),"\n",(0,a.jsx)(n.h3,{id:"reverse-video-search",children:"Reverse Video Search"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"YouTube DataViewer (Amnesty International):"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"https://citizenevidence.amnestyusa.org/\n\nFeatures:\n- Extract thumbnails from YouTube video\n- Reverse search thumbnails\n- Get upload date/time (forensic timeline)\n- Find re-uploads of same video\n\nUsage:\n1. Paste YouTube URL\n2. Tool extracts thumbnails\n3. Click reverse search icons\n4. Compare results across engines\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Manual video fingerprinting:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Generate video hash (perceptual)\nffmpeg -i video.mp4 -vf "scale=8:8,format=gray" -f image2pipe -vcodec ppm - | sha256sum\n\n# Compare two videos (similarity)\n# Using ffmpeg to extract fingerprints, then compare\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"8-tools-reference",children:"8. Tools Reference"}),"\n",(0,a.jsx)(n.h3,{id:"essential-tools",children:"Essential Tools"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Tool"}),(0,a.jsx)(n.th,{children:"Purpose"}),(0,a.jsx)(n.th,{children:"Platform"}),(0,a.jsx)(n.th,{children:"Link"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"ExifTool"})}),(0,a.jsx)(n.td,{children:"Metadata extraction"}),(0,a.jsx)(n.td,{children:"CLI (all platforms)"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://exiftool.org",children:"exiftool.org"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Google Images"})}),(0,a.jsx)(n.td,{children:"Reverse image search"}),(0,a.jsx)(n.td,{children:"Web"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://images.google.com",children:"images.google.com"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Yandex Images"})}),(0,a.jsx)(n.td,{children:"Reverse search (faces)"}),(0,a.jsx)(n.td,{children:"Web"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://yandex.com/images",children:"yandex.com/images"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"TinEye"})}),(0,a.jsx)(n.td,{children:"Reverse search (temporal)"}),(0,a.jsx)(n.td,{children:"Web/API"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://tineye.com",children:"tineye.com"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"PimEyes"})}),(0,a.jsx)(n.td,{children:"Facial recognition"}),(0,a.jsx)(n.td,{children:"Web (commercial)"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://pimeyes.com",children:"pimeyes.com"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"SunCalc"})}),(0,a.jsx)(n.td,{children:"Sun position calculator"}),(0,a.jsx)(n.td,{children:"Web"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://suncalc.org",children:"suncalc.org"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Google Earth Pro"})}),(0,a.jsx)(n.td,{children:"Satellite imagery, 3D view"}),(0,a.jsx)(n.td,{children:"Desktop (free)"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://www.google.com/earth/versions/#earth-pro",children:"google.com/earth/pro"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"ffmpeg"})}),(0,a.jsx)(n.td,{children:"Video processing"}),(0,a.jsx)(n.td,{children:"CLI"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://ffmpeg.org",children:"ffmpeg.org"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"yt-dlp"})}),(0,a.jsx)(n.td,{children:"Video download"}),(0,a.jsx)(n.td,{children:"CLI (Python)"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/yt-dlp/yt-dlp",children:"github.com/yt-dlp/yt-dlp"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"InVID Plugin"})}),(0,a.jsx)(n.td,{children:"Video verification"}),(0,a.jsx)(n.td,{children:"Browser extension"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://www.invid-project.eu/tools-and-services/invid-verification-plugin/",children:"invid-project.eu"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Tesseract OCR"})}),(0,a.jsx)(n.td,{children:"Text extraction"}),(0,a.jsx)(n.td,{children:"CLI"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/tesseract-ocr/tesseract",children:"github.com/tesseract-ocr"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"ImageMagick"})}),(0,a.jsx)(n.td,{children:"Image manipulation"}),(0,a.jsx)(n.td,{children:"CLI"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://imagemagick.org",children:"imagemagick.org"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"FotoForensics"})}),(0,a.jsx)(n.td,{children:"Error level analysis"}),(0,a.jsx)(n.td,{children:"Web"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"http://fotoforensics.com",children:"fotoforensics.com"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"Whisper"})}),(0,a.jsx)(n.td,{children:"Audio transcription"}),(0,a.jsx)(n.td,{children:"CLI (Python)"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://github.com/openai/whisper",children:"github.com/openai/whisper"})})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:(0,a.jsx)(n.strong,{children:"GeoGuessr"})}),(0,a.jsx)(n.td,{children:"Geolocation practice"}),(0,a.jsx)(n.td,{children:"Web"}),(0,a.jsx)(n.td,{children:(0,a.jsx)(n.a,{href:"https://www.geoguessr.com",children:"geoguessr.com"})})]})]})]}),"\n",(0,a.jsx)(n.h3,{id:"quick-command-reference",children:"Quick Command Reference"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'# Download image\nwget -O image.jpg "URL"\n\n# Hash image\nsha256sum image.jpg\n\n# Extract EXIF\nexiftool image.jpg\n\n# GPS coordinates\nexiftool -n -gpslatitude -gpslongitude image.jpg\n\n# Download video (best quality)\nyt-dlp -f "bestvideo+bestaudio" "URL"\n\n# Extract video frames (1 per second)\nffmpeg -i video.mp4 -vf fps=1 frame_%04d.jpg\n\n# OCR text from image\ntesseract image.jpg output\n\n# Video metadata\nffprobe video.mp4\n\n# Extract audio\nffmpeg -i video.mp4 -vn audio.mp3\n\n# Transcribe audio\nwhisper audio.mp3 --model medium\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"9-workflow-examples",children:"9. Workflow Examples"}),"\n",(0,a.jsx)(n.h3,{id:"workflow-1-verify-profile-picture-authenticity",children:"Workflow 1: Verify Profile Picture Authenticity"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:'**Scenario:** Suspect Instagram profile photo is stolen from someone else\n\n1. **Download image**\n   - Right-click \u2192 Save Image (get full resolution)\n   - sha256sum profile_pic.jpg\n\n2. **Reverse search**\n   - Google Images: Upload \u2192 Search\n   - Yandex Images: Upload \u2192 Search (better for faces)\n   - TinEye: Upload \u2192 Sort by "Oldest"\n\n3. **Analyze results**\n   - If found: Note earliest instance (original source?)\n   - Check dates: Profile created 2024, but image appears in 2020 blog post \u2192 stolen\n   - Compare accounts: Different names \u2192 likely stolen\n\n4. **EXIF check** (if original available)\n   - exiftool original_photo.jpg\n   - Check camera/software metadata\n   - Look for GPS coordinates (cross-reference with claimed location)\n\n5. **Conclusion**\n   - Document findings in collection log\n   - Screenshot evidence of original source\n   - Hash all evidence files\n'})}),"\n",(0,a.jsx)(n.h3,{id:"workflow-2-geolocate-unknown-photo",children:"Workflow 2: Geolocate Unknown Photo"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:'**Scenario:** Photo shows street scene, need to identify location\n\n1. **Extract visible clues**\n   - Language on signs: "\u041a\u0430\u0444\u0435" (Russian Cyrillic)\n   - License plates: Format suggests Russia/Ukraine\n   - Architecture: Soviet-era apartment blocks\n   - Vegetation: Deciduous trees with leaves \u2192 summer\n\n2. **OCR text**\n   - tesseract street_scene.jpg output\n   - Extract: "\u0423\u043b\u0438\u0446\u0430 \u041b\u0435\u043d\u0438\u043d\u0430" (Lenin Street - very common in former USSR)\n   - Store name: "\u041f\u044f\u0442\u0451\u0440\u043e\u0447\u043a\u0430" (Pyaterochka - Russian grocery chain)\n\n3. **Narrow region**\n   - Cyrillic + Pyaterochka \u2192 Russia (chain doesn\'t operate in Ukraine)\n   - Architecture style \u2192 1960s-80s construction \u2192 most Russian cities\n\n4. **Landmark search**\n   - Identify distinctive building in background\n   - Google Images: "soviet apartment building russia distinctive tower"\n   - Found: Similar building in Yekaterinburg\n\n5. **Street View verification**\n   - Google Maps: Search "Pyaterochka Yekaterinburg"\n   - Navigate Street View around Pyaterochka locations\n   - Match building facades, street signs\n   - **Found:** Ulitsa Lenina 15, Yekaterinburg (56.8389\xb0N, 60.5973\xb0E)\n\n6. **Verification**\n   - Google Earth: Check satellite view matches\n   - Check shadows: SunCalc \u2192 verify time of day matches shadows\n   - Screenshot Street View match for evidence\n'})}),"\n",(0,a.jsx)(n.h3,{id:"workflow-3-verify-video-timestamp",children:"Workflow 3: Verify Video Timestamp"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:'**Scenario:** Video claims to show event on specific date, verify accuracy\n\n1. **Download and hash**\n   - yt-dlp "VIDEO_URL"\n   - sha256sum video.mp4\n\n2. **Extract metadata**\n   - exiftool video.mp4 | grep -i date\n   - Check upload date vs claimed event date\n\n3. **Extract keyframes**\n   - ffmpeg -i video.mp4 -vf fps=1/10 frame_%04d.jpg\n   - Reverse search frames (check for earlier instances online)\n\n4. **Weather verification**\n   - Identify location in video\n   - Check historical weather for claimed date\n   - Compare with weather shown in video (rain, snow, clear, etc.)\n   - Tool: timeanddate.com/weather (historical weather)\n\n5. **Shadow analysis**\n   - Identify GPS coordinates of location\n   - Use SunCalc for claimed date/time\n   - Measure shadow direction/length in video\n   - Compare with expected shadow for that time\n   - **Result:** Shadows indicate 10 AM, but claim says 2 PM \u2192 discrepancy\n\n6. **Conclusion**\n   - Video is genuine, but timestamp claim is false\n   - Evidence suggests video taken earlier in day\n   - Document findings with SunCalc screenshots\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"10-best-practices--pitfalls",children:"10. Best Practices & Pitfalls"}),"\n",(0,a.jsx)(n.h3,{id:"-common-mistakes",children:"\u274c Common Mistakes"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"1. Over-reliance on single source"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'\u274c Bad: "Google reverse search found nothing, therefore image is original"\n\u2705 Good: Search Google, Yandex, TinEye, Bing minimum before concluding\n\n\u274c Bad: "EXIF says photo taken in Paris, so it\'s from Paris"\n\u2705 Good: EXIF can be easily spoofed - verify with visual clues\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"2. Ignoring social media platform metadata stripping"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'\u274c Bad: Download from Twitter \u2192 check EXIF \u2192 "no GPS data, can\'t geolocate"\n\u2705 Good: Know that Twitter strips GPS \u2192 use visual geolocation techniques instead\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"3. Certainty without corroboration"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'\u274c Bad: "Shadows suggest this was taken at 3 PM"\n\u2705 Good: "Shadow analysis suggests 3 PM \xb1 30 minutes, consistent with claimed timestamp"\n\nAlways provide:\n- Confidence level (high/medium/low)\n- Alternative explanations\n- Limiting factors (quality, partial view, etc.)\n'})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"4. Forgetting to preserve originals"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"\u274c Bad: Download \u2192 crop \u2192 enhance \u2192 analyze cropped version\n\u2705 Good: Download \u2192 hash \u2192 save original \u2192 create working copy \u2192 analyze copy\n\nNever modify original evidence files\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"5. Tunnel vision on initial hypothesis"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'\u274c Bad: "I think this is Moscow, so I\'ll only check Moscow landmarks"\n\u2705 Good: "Clues suggest Russia, checking major cities: Moscow, St. Petersburg, Yekaterinburg..."\n\nRemain objective - let evidence guide you\n'})}),"\n",(0,a.jsx)(n.h3,{id:"-best-practices",children:"\u2705 Best Practices"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"1. Multi-engine reverse search (always)"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"Minimum search engines:\n- [ ] Google Images\n- [ ] Yandex Images\n- [ ] TinEye\n- [ ] Bing Visual Search\n- [ ] Baidu (if Chinese content suspected)\n\nDocument results from each\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"2. Crop and re-search"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# If full image yields no results, try cropping to specific elements:\n# - Just the face\n# - Just a landmark\n# - Just a logo/sign\n\nconvert original.jpg -crop 300x300+100+50 cropped_face.jpg\n# Then reverse search cropped_face.jpg\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"3. Time permitting, do it twice"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"Have two analysts independently:\n1. Attempt geolocation\n2. Compare results\n3. Resolve discrepancies\n\nPeer review catches errors and biases\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"4. Document uncertainty"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"Report template:\n- **Confidence:** Medium\n- **Location:** Likely Yekaterinburg, Russia (coordinates: 56.8389\xb0N, 60.5973\xb0E)\n- **Basis:** Cyrillic signage, Pyaterochka store chain, architectural style\n- **Limitations:** Cannot see street sign clearly, similar buildings exist in other cities\n- **Alternative explanations:** Could be other Russian city with similar architecture\n"})}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"5. Preserve processing chain"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"# Keep all derivative files\noriginal.jpg          (hash: a1b2c3d4...)\nenhanced.jpg          (hash: b2c3d4e5...) - from: convert original.jpg -contrast enhanced.jpg\ncropped.jpg           (hash: c3d4e5f6...) - from: convert original.jpg -crop 200x200+50+50 cropped.jpg\n\n# Document in collection log:\n# 1. Downloaded original.jpg from https://example.com/image.jpg (2025-10-05 14:30 UTC)\n# 2. Created enhanced.jpg using ImageMagick convert -contrast command\n# 3. Created cropped.jpg for reverse search (crop face only)\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"11-legal--ethical-considerations",children:"11. Legal & Ethical Considerations"}),"\n",(0,a.jsx)(n.h3,{id:"privacy--consent",children:"Privacy & Consent"}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"\u26a0\ufe0f Legal restrictions on facial recognition:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"EU: GDPR restricts biometric data processing"}),"\n",(0,a.jsx)(n.li,{children:"US: Varies by state (IL/TX have strict laws, others minimal)"}),"\n",(0,a.jsx)(n.li,{children:"Always verify legal authority before using facial recognition tools"}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Ethical use guidelines:"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"\u2705 Appropriate use:\n- Verifying identity of public figure making public statements\n- Investigating suspected fraud/impersonation\n- Missing persons cases (with family consent)\n- Criminal investigations (with legal authority)\n\n\u274c Inappropriate use:\n- Stalking or harassing individuals\n- Doxxing (publishing private info)\n- Surveillance without legal basis\n- Commercial purposes without consent\n"})}),"\n",(0,a.jsx)(n.h3,{id:"chain-of-custody",children:"Chain of Custody"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-markdown",children:"Evidence collection checklist:\n- [ ] Download original (highest quality)\n- [ ] Calculate SHA-256 hash immediately\n- [ ] Preserve EXIF metadata (even if stripped by platform)\n- [ ] Document source URL, timestamp, collection method\n- [ ] Never modify originals (work on copies)\n- [ ] Log all processing steps (cropping, enhancement, etc.)\n- [ ] Include tool versions (exiftool 12.67, ffmpeg 4.4.2, etc.)\n"})}),"\n",(0,a.jsxs)(n.p,{children:["See also: ",(0,a.jsx)(n.a,{href:"../../Investigations/Techniques/sop-collection-log",children:"Collection Log & Chain of Custody"})]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Quick Reference:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Reverse search: Google + Yandex + TinEye (minimum)"}),"\n",(0,a.jsxs)(n.li,{children:["EXIF: ",(0,a.jsx)(n.code,{children:"exiftool image.jpg"})]}),"\n",(0,a.jsxs)(n.li,{children:["GPS: ",(0,a.jsx)(n.code,{children:"exiftool -n -gpslatitude -gpslongitude image.jpg"})]}),"\n",(0,a.jsxs)(n.li,{children:["Video frames: ",(0,a.jsx)(n.code,{children:"ffmpeg -i video.mp4 -vf fps=1 frame_%04d.jpg"})]}),"\n",(0,a.jsxs)(n.li,{children:["OCR: ",(0,a.jsx)(n.code,{children:"tesseract image.jpg output"})]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Related SOPs:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../Investigations/Techniques/sop-collection-log",children:"Collection Log"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../Investigations/Techniques/sop-reporting-packaging-disclosure",children:"Reporting"})}),"\n",(0,a.jsx)(n.li,{children:(0,a.jsx)(n.a,{href:"../../Security/Analysis/sop-hash-generation-methods",children:"Hash Generation"})}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:(0,a.jsx)(n.strong,{children:"Additional Resources:"})}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://gralhix.com/",children:"Gral Hix"})," - OSINT tools and resources"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://www.youtube.com/c/bendobrown",children:"Bene Brown"})," - Geolocation and OSINT techniques"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://www.youtube.com/@georainbolt",children:"GeoRainbolt"})," - Expert geolocation content"]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.a,{href:"https://start.me/u/gl0bal01",children:"start.me OSINT Resources"})," - Comprehensive OSINT tool directory"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(96540);const a={},t=s.createContext(a);function r(e){const n=s.useContext(t);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);